

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Dec 30 09:19:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F452 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  000D8C                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _p_PORTDdirection
   100  000D8C  95                 	db	149
   101  000D8D  0F                 	db	15
   102                           
   103                           ;initializer for _p_PORTDdata
   104  000D8E  83                 	db	131
   105  000D8F  0F                 	db	15
   106                           
   107                           ;initializer for _p_PORTCdirection
   108  000D90  94                 	db	148
   109  000D91  0F                 	db	15
   110                           
   111                           ;initializer for _p_PORTCdata
   112  000D92  82                 	db	130
   113  000D93  0F                 	db	15
   114                           
   115                           ;initializer for _p_PORTBdirection
   116  000D94  93                 	db	147
   117  000D95  0F                 	db	15
   118                           
   119                           ;initializer for _p_PORTBdata
   120  000D96  81                 	db	129
   121  000D97  0F                 	db	15
   122                           
   123                           ;initializer for _p_PORTAdirection
   124  000D98  92                 	db	146
   125  000D99  0F                 	db	15
   126                           
   127                           ;initializer for _p_PORTAdata
   128  000D9A  80                 	db	128
   129  000D9B  0F                 	db	15
   130                           
   131                           ;initializer for _LED3
   132  000D9C  44                 	db	68
   133  000D9D  02                 	db	2
   134  000D9E  00                 	db	0
   135  000D9F  00                 	db	0
   136  000DA0  00                 	db	0
   137  000DA1  00                 	db	0
   138  000DA2  00                 	db	0
   139                           
   140                           ;initializer for _LED2
   141  000DA3  44                 	db	68
   142  000DA4  01                 	db	1
   143  000DA5  00                 	db	0
   144  000DA6  00                 	db	0
   145  000DA7  00                 	db	0
   146  000DA8  00                 	db	0
   147  000DA9  00                 	db	0
   148                           
   149                           ;initializer for _LED1
   150  000DAA  44                 	db	68
   151  000DAB  00                 	db	0
   152  000DAC  00                 	db	0
   153  000DAD  00                 	db	0
   154  000DAE  00                 	db	0
   155  000DAF  00                 	db	0
   156  000DB0  00                 	db	0
   157                           
   158                           	psect	idataBANK0
   159  000E9C                     __pidataBANK0:
   160                           	opt callstack 0
   161                           
   162                           ;initializer for _BTN3
   163  000E9C  42                 	db	66
   164  000E9D  02                 	db	2
   165  000E9E  01                 	db	1
   166  000E9F  00                 	db	0
   167  000EA0  00                 	db	0
   168  000EA1  00                 	db	0
   169  000EA2  00                 	db	0
   170                           
   171                           ;initializer for _BTN2
   172  000EA3  42                 	db	66
   173  000EA4  01                 	db	1
   174  000EA5  01                 	db	1
   175  000EA6  00                 	db	0
   176  000EA7  00                 	db	0
   177  000EA8  00                 	db	0
   178  000EA9  00                 	db	0
   179                           
   180                           ;initializer for _BTN1
   181  000EAA  42                 	db	66
   182  000EAB  00                 	db	0
   183  000EAC  01                 	db	1
   184  000EAD  00                 	db	0
   185  000EAE  00                 	db	0
   186  000EAF  00                 	db	0
   187  000EB0  00                 	db	0
   188  0000                     _T3CONbits	set	4017
   189  0000                     _TXREG	set	4013
   190  0000                     _RCSTAbits	set	4011
   191  0000                     _TXSTAbits	set	4012
   192  0000                     _SPBRG	set	4015
   193  0000                     _T1CONbits	set	4045
   194  0000                     _T0CONbits	set	4053
   195  0000                     _TMR3H	set	4019
   196  0000                     _TMR3L	set	4018
   197  0000                     _TMR1H	set	4047
   198  0000                     _TMR1L	set	4046
   199  0000                     _TMR0H	set	4055
   200  0000                     _TMR0L	set	4054
   201  0000                     _IPR2bits	set	4002
   202  0000                     _PIE2bits	set	4000
   203  0000                     _IPR1bits	set	3999
   204  0000                     _PIE1bits	set	3997
   205  0000                     _INTCON2bits	set	4081
   206  0000                     _INTCON3bits	set	4080
   207  0000                     _INTCON1bits	set	4082
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _TRISA	set	3986
   211  0000                     _ADCON0bits	set	4034
   212  0000                     _ADCON1bits	set	4033
   213  0000                     _TXIF	set	31988
   214  0000                     _TRISC6	set	31910
   215  0000                     _BRGH	set	32098
   216  0000                     _CCP1IF	set	31986
   217  0000                     _TMR0IF	set	32658
   218  0000                     _RBIF	set	32656
   219  0000                     _INT2IF	set	32641
   220  0000                     _INT1IF	set	32640
   221  0000                     _INT0IF	set	32657
   222  0000                     _TMR3IF	set	32009
   223  0000                     _TMR1IF	set	31984
   224  0000                     _PEIE	set	32662
   225  0000                     _ADIF	set	31990
   226                           
   227                           ; #config settings
   228  0000                     
   229                           	psect	cinit
   230  000BE6                     __pcinit:
   231                           	opt callstack 0
   232  000BE6                     start_initialization:
   233                           	opt callstack 0
   234  000BE6                     __initialization:
   235                           	opt callstack 0
   236                           
   237                           ; Initialize objects allocated to BANK0 (21 bytes)
   238                           ; load TBLPTR registers with __pidataBANK0
   239  000BE6  0E9C               	movlw	low __pidataBANK0
   240  000BE8  6EF6               	movwf	tblptrl,c
   241  000BEA  0E0E               	movlw	high __pidataBANK0
   242  000BEC  6EF7               	movwf	tblptrh,c
   243  000BEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   244  000BF0  6EF8               	movwf	tblptru,c
   245  000BF2  EE00  F080         	lfsr	0,__pdataBANK0
   246  000BF6  EE10 F015          	lfsr	1,21
   247  000BFA                     copy_data0:
   248  000BFA  0009               	tblrd		*+
   249  000BFC  CFF5 FFEE          	movff	tablat,postinc0
   250  000C00  50E5               	movf	postdec1,w,c
   251  000C02  50E1               	movf	fsr1l,w,c
   252  000C04  E1FA               	bnz	copy_data0
   253                           
   254                           ; Initialize objects allocated to COMRAM (37 bytes)
   255                           ; load TBLPTR registers with __pidataCOMRAM
   256  000C06  0E8C               	movlw	low __pidataCOMRAM
   257  000C08  6EF6               	movwf	tblptrl,c
   258  000C0A  0E0D               	movlw	high __pidataCOMRAM
   259  000C0C  6EF7               	movwf	tblptrh,c
   260  000C0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   261  000C10  6EF8               	movwf	tblptru,c
   262  000C12  EE00  F02C         	lfsr	0,__pdataCOMRAM
   263  000C16  EE10 F025          	lfsr	1,37
   264  000C1A                     copy_data1:
   265  000C1A  0009               	tblrd		*+
   266  000C1C  CFF5 FFEE          	movff	tablat,postinc0
   267  000C20  50E5               	movf	postdec1,w,c
   268  000C22  50E1               	movf	fsr1l,w,c
   269  000C24  E1FA               	bnz	copy_data1
   270                           
   271                           ; Clear objects allocated to BANK0 (8 bytes)
   272  000C26  EE00  F0A8         	lfsr	0,__pbssBANK0
   273  000C2A  0E08               	movlw	8
   274  000C2C                     clear_0:
   275  000C2C  6AEE               	clrf	postinc0,c
   276  000C2E  06E8               	decf	wreg,f,c
   277  000C30  E1FD               	bnz	clear_0
   278                           
   279                           ; Clear objects allocated to COMRAM (43 bytes)
   280  000C32  EE00  F001         	lfsr	0,__pbssCOMRAM
   281  000C36  0E2B               	movlw	43
   282  000C38                     clear_1:
   283  000C38  6AEE               	clrf	postinc0,c
   284  000C3A  06E8               	decf	wreg,f,c
   285  000C3C  E1FD               	bnz	clear_1
   286  000C3E                     end_of_initialization:
   287                           	opt callstack 0
   288  000C3E                     __end_of__initialization:
   289                           	opt callstack 0
   290  000C3E  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   291  000C40  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   292  000C42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293  000C44  6EF8               	movwf	tblptru,c
   294  000C46  0100               	movlb	0
   295  000C48  EF95  F000         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298  000001                     __pbssCOMRAM:
   299                           	opt callstack 0
   300  000001                     _x3:
   301                           	opt callstack 0
   302  000001                     	ds	4
   303  000005                     _x2:
   304                           	opt callstack 0
   305  000005                     	ds	4
   306  000009                     _x1:
   307                           	opt callstack 0
   308  000009                     	ds	4
   309  00000D                     TMR3@initial:
   310                           	opt callstack 0
   311  00000D                     	ds	2
   312  00000F                     TMR1@initial:
   313                           	opt callstack 0
   314  00000F                     	ds	2
   315  000011                     _initial:
   316                           	opt callstack 0
   317  000011                     	ds	2
   318  000013                     _initial_tmr3:
   319                           	opt callstack 0
   320  000013                     	ds	2
   321  000015                     _initial_tmr1:
   322                           	opt callstack 0
   323  000015                     	ds	2
   324  000017                     _initial_tmr0:
   325                           	opt callstack 0
   326  000017                     	ds	2
   327  000019                     _callback_CCP1:
   328                           	opt callstack 0
   329  000019                     	ds	2
   330  00001B                     _callback_TMR3:
   331                           	opt callstack 0
   332  00001B                     	ds	2
   333  00001D                     _callback_TMR1:
   334                           	opt callstack 0
   335  00001D                     	ds	2
   336  00001F                     _callback_TMR0:
   337                           	opt callstack 0
   338  00001F                     	ds	2
   339  000021                     _callback_INTonChange:
   340                           	opt callstack 0
   341  000021                     	ds	2
   342  000023                     _callback_INT2:
   343                           	opt callstack 0
   344  000023                     	ds	2
   345  000025                     _callback_INT1:
   346                           	opt callstack 0
   347  000025                     	ds	2
   348  000027                     _callback_INT0:
   349                           	opt callstack 0
   350  000027                     	ds	2
   351  000029                     _status3:
   352                           	opt callstack 0
   353  000029                     	ds	1
   354  00002A                     _status2:
   355                           	opt callstack 0
   356  00002A                     	ds	1
   357  00002B                     _status1:
   358                           	opt callstack 0
   359  00002B                     	ds	1
   360                           
   361                           	psect	dataCOMRAM
   362  00002C                     __pdataCOMRAM:
   363                           	opt callstack 0
   364  00002C                     _p_PORTDdirection:
   365                           	opt callstack 0
   366  00002C                     	ds	2
   367  00002E                     _p_PORTDdata:
   368                           	opt callstack 0
   369  00002E                     	ds	2
   370  000030                     _p_PORTCdirection:
   371                           	opt callstack 0
   372  000030                     	ds	2
   373  000032                     _p_PORTCdata:
   374                           	opt callstack 0
   375  000032                     	ds	2
   376  000034                     _p_PORTBdirection:
   377                           	opt callstack 0
   378  000034                     	ds	2
   379  000036                     _p_PORTBdata:
   380                           	opt callstack 0
   381  000036                     	ds	2
   382  000038                     _p_PORTAdirection:
   383                           	opt callstack 0
   384  000038                     	ds	2
   385  00003A                     _p_PORTAdata:
   386                           	opt callstack 0
   387  00003A                     	ds	2
   388  00003C                     _LED3:
   389                           	opt callstack 0
   390  00003C                     	ds	7
   391  000043                     _LED2:
   392                           	opt callstack 0
   393  000043                     	ds	7
   394  00004A                     _LED1:
   395                           	opt callstack 0
   396  00004A                     	ds	7
   397                           
   398                           	psect	bssBANK0
   399  0000A8                     __pbssBANK0:
   400                           	opt callstack 0
   401  0000A8                     	ds	8
   402                           
   403                           	psect	dataBANK0
   404  000080                     __pdataBANK0:
   405                           	opt callstack 0
   406  000080                     _BTN3:
   407                           	opt callstack 0
   408  000080                     	ds	7
   409  000087                     _BTN2:
   410                           	opt callstack 0
   411  000087                     	ds	7
   412  00008E                     _BTN1:
   413                           	opt callstack 0
   414  00008E                     	ds	7
   415                           
   416                           	psect	cstackBANK0
   417  000095                     __pcstackBANK0:
   418                           	opt callstack 0
   419  000095                     main@x_max8:
   420                           	opt callstack 0
   421                           
   422                           ; 8 bytes @ 0x0
   423  000095                     	ds	8
   424  00009D                     main@input_T:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x8
   428  00009D                     	ds	2
   429  00009F                     main@x_max16:
   430                           	opt callstack 0
   431                           
   432                           ; 8 bytes @ 0xA
   433  00009F                     	ds	8
   434  0000A7                     main@T:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x12
   438  0000A7                     	ds	1
   439                           
   440                           	psect	cstackCOMRAM
   441  000051                     __pcstackCOMRAM:
   442                           	opt callstack 0
   443  000051                     ??_ISR:
   444                           
   445                           ; 1 bytes @ 0x0
   446  000051                     	ds	2
   447  000053                     ?_ADC_u16getValue:
   448                           	opt callstack 0
   449  000053                     ?___wmul:
   450                           	opt callstack 0
   451  000053                     ?___awdiv:
   452                           	opt callstack 0
   453  000053                     ?___awmod:
   454                           	opt callstack 0
   455  000053                     ?___aldiv:
   456                           	opt callstack 0
   457  000053                     DIO_vdWritePin@port:
   458                           	opt callstack 0
   459  000053                     DIO_vdWriteDirPin@port:
   460                           	opt callstack 0
   461  000053                     TMR0_vdInit@bits:
   462                           	opt callstack 0
   463  000053                     TMR1_vdInit@bits:
   464                           	opt callstack 0
   465  000053                     UART_vdSendByte@data:
   466                           	opt callstack 0
   467  000053                     TMR3_vdInit@bits:
   468                           	opt callstack 0
   469  000053                     INT_vdSetINT0Callback@pf:
   470                           	opt callstack 0
   471  000053                     INT_vdSetINT1Callback@pf:
   472                           	opt callstack 0
   473  000053                     INT_vdSetINT2Callback@pf:
   474                           	opt callstack 0
   475  000053                     INT_vdSetTMR0Callback@pf:
   476                           	opt callstack 0
   477  000053                     INT_vdSetTMR1Callback@pf:
   478                           	opt callstack 0
   479  000053                     INT_vdSetTMR3Callback@pf:
   480                           	opt callstack 0
   481  000053                     ___wmul@multiplier:
   482                           	opt callstack 0
   483  000053                     ___awdiv@dividend:
   484                           	opt callstack 0
   485  000053                     ___awmod@dividend:
   486                           	opt callstack 0
   487  000053                     ___aldiv@dividend:
   488                           	opt callstack 0
   489                           
   490                           ; 4 bytes @ 0x2
   491  000053                     	ds	1
   492  000054                     DIO_vdWritePin@pin:
   493                           	opt callstack 0
   494  000054                     DIO_vdWriteDirPin@pin:
   495                           	opt callstack 0
   496  000054                     TMR0_vdInit@prescaler:
   497                           	opt callstack 0
   498  000054                     TMR1_vdInit@prescaler:
   499                           	opt callstack 0
   500  000054                     TMR3_vdInit@prescaler:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x3
   504  000054                     	ds	1
   505  000055                     ??_ADC_u16getValue:
   506  000055                     ??_DIO_vdWriteDirPin:
   507  000055                     ??_DIO_vdWritePin:
   508  000055                     TMR0_vdInit@prescaler_value:
   509                           	opt callstack 0
   510  000055                     TMR1_vdInit@prescaler_value:
   511                           	opt callstack 0
   512  000055                     TMR3_vdInit@prescaler_value:
   513                           	opt callstack 0
   514  000055                     INT_vdSetTMR0Callback@init:
   515                           	opt callstack 0
   516  000055                     INT_vdSetTMR1Callback@init:
   517                           	opt callstack 0
   518  000055                     INT_vdSetTMR3Callback@init:
   519                           	opt callstack 0
   520  000055                     ___wmul@multiplicand:
   521                           	opt callstack 0
   522  000055                     ___awdiv@divisor:
   523                           	opt callstack 0
   524  000055                     ___awmod@divisor:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x4
   528  000055                     	ds	1
   529  000056                     TMR0_vdInit@init:
   530                           	opt callstack 0
   531  000056                     TMR1_vdInit@init:
   532                           	opt callstack 0
   533  000056                     TMR3_vdInit@init:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x5
   537  000056                     	ds	1
   538  000057                     DIO_vdWritePin@data:
   539                           	opt callstack 0
   540  000057                     DIO_vdWriteDirPin@data:
   541                           	opt callstack 0
   542  000057                     ___awdiv@counter:
   543                           	opt callstack 0
   544  000057                     ___awmod@counter:
   545                           	opt callstack 0
   546  000057                     ADC_u16getValue@data:
   547                           	opt callstack 0
   548  000057                     TMR0_vdSetTMR0Callback@pf:
   549                           	opt callstack 0
   550  000057                     TMR1_vdSetTMR1Callback@pf:
   551                           	opt callstack 0
   552  000057                     TMR3_vdSetTMR3Callback@pf:
   553                           	opt callstack 0
   554  000057                     ___wmul@product:
   555                           	opt callstack 0
   556  000057                     ___aldiv@divisor:
   557                           	opt callstack 0
   558                           
   559                           ; 4 bytes @ 0x6
   560  000057                     	ds	1
   561  000058                     ??_TMR0_vdInit:
   562  000058                     ??_TMR1_vdInit:
   563  000058                     ??_TMR3_vdInit:
   564  000058                     ___awdiv@sign:
   565                           	opt callstack 0
   566  000058                     ___awmod@sign:
   567                           	opt callstack 0
   568  000058                     DIO_vdInit@dev:
   569                           	opt callstack 0
   570  000058                     LED_vdSetStatus@led:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x7
   574  000058                     	ds	1
   575  000059                     ?___lwdiv:
   576                           	opt callstack 0
   577  000059                     ADC_u16getValue@pin:
   578                           	opt callstack 0
   579  000059                     ___awdiv@quotient:
   580                           	opt callstack 0
   581  000059                     ___lwdiv@dividend:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x8
   585  000059                     	ds	1
   586  00005A                     LED_vdSetStatus@status:
   587                           	opt callstack 0
   588  00005A                     TMR0_vdInit@mode:
   589                           	opt callstack 0
   590  00005A                     TMR1_vdInit@mode:
   591                           	opt callstack 0
   592  00005A                     TMR3_vdInit@mode:
   593                           	opt callstack 0
   594                           
   595                           ; 1 bytes @ 0x9
   596  00005A                     	ds	1
   597  00005B                     UART_vdSendu8asASCI@data:
   598                           	opt callstack 0
   599  00005B                     ___aldiv@counter:
   600                           	opt callstack 0
   601  00005B                     ___lwdiv@divisor:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0xA
   605  00005B                     	ds	1
   606  00005C                     UART_vdSendu8asASCI@temp2:
   607                           	opt callstack 0
   608  00005C                     ___aldiv@sign:
   609                           	opt callstack 0
   610                           
   611                           ; 1 bytes @ 0xB
   612  00005C                     	ds	1
   613  00005D                     ___lwdiv@counter:
   614                           	opt callstack 0
   615  00005D                     UART_vdSendu8asASCI@temp:
   616                           	opt callstack 0
   617  00005D                     ___aldiv@quotient:
   618                           	opt callstack 0
   619                           
   620                           ; 4 bytes @ 0xC
   621  00005D                     	ds	1
   622  00005E                     ___lwdiv@quotient:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0xD
   626  00005E                     	ds	2
   627  000060                     UART_vdSendu8asASCI@i:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0xF
   631  000060                     	ds	1
   632  000061                     UART_vdInit@baud:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x10
   636  000061                     	ds	2
   637  000063                     ??_main:
   638                           
   639                           ; 1 bytes @ 0x12
   640  000063                     	ds	8
   641                           
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 46 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  x_max16         8   10[BANK0 ] unsigned long long 
   652 ;;  x_max8          8    0[BANK0 ] unsigned long long 
   653 ;;  input_T         2    8[BANK0 ] unsigned int 
   654 ;;  T               1   18[BANK0 ] unsigned char 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   664 ;;      Params:         0       0       0       0       0       0       0
   665 ;;      Locals:         0      19       0       0       0       0       0
   666 ;;      Temps:          8       0       0       0       0       0       0
   667 ;;      Totals:         8      19       0       0       0       0       0
   668 ;;Total ram usage:       27 bytes
   669 ;; Hardware stack levels required when called:    5
   670 ;; This function calls:
   671 ;;		_ADC_u16getValue
   672 ;;		_ADC_vdInit
   673 ;;		_DIO_vdInit
   674 ;;		_INT_vdSetINT0Callback
   675 ;;		_INT_vdSetINT1Callback
   676 ;;		_INT_vdSetINT2Callback
   677 ;;		_INT_vdinit
   678 ;;		_LED_vdSetStatus
   679 ;;		_TMR0_vdInit
   680 ;;		_TMR0_vdSetTMR0Callback
   681 ;;		_TMR0_vdStop
   682 ;;		_TMR1_vdInit
   683 ;;		_TMR1_vdSetTMR1Callback
   684 ;;		_TMR1_vdStop
   685 ;;		_TMR3_vdInit
   686 ;;		_TMR3_vdSetTMR3Callback
   687 ;;		_TMR3_vdStop
   688 ;;		_UART_vdInit
   689 ;;		_UART_vdSendByte
   690 ;;		_UART_vdSendu8asASCI
   691 ;;		___lwdiv
   692 ;;		___wmul
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text0
   699  00012A                     __ptext0:
   700                           	opt callstack 0
   701  00012A                     _main:
   702                           	opt callstack 0
   703  00012A  FFFF               	dw	65535	; assembler added errata NOP
   704                           
   705                           ;main.c: 48:     DIO_vdInit(&LED1);
   706                           
   707                           ;incstack = 0
   708  00012C  0E4A               	movlw	low _LED1
   709  00012E  6E58               	movwf	DIO_vdInit@dev,c
   710  000130  0E00               	movlw	high _LED1
   711  000132  6E59               	movwf	DIO_vdInit@dev+1,c
   712  000134  EC70  F006         	call	_DIO_vdInit	;wreg free
   713                           
   714                           ;main.c: 49:     DIO_vdInit(&LED2);
   715  000138  0E43               	movlw	low _LED2
   716  00013A  6E58               	movwf	DIO_vdInit@dev,c
   717  00013C  0E00               	movlw	high _LED2
   718  00013E  6E59               	movwf	DIO_vdInit@dev+1,c
   719  000140  EC70  F006         	call	_DIO_vdInit	;wreg free
   720                           
   721                           ;main.c: 50:     DIO_vdInit(&LED3);
   722  000144  0E3C               	movlw	low _LED3
   723  000146  6E58               	movwf	DIO_vdInit@dev,c
   724  000148  0E00               	movlw	high _LED3
   725  00014A  6E59               	movwf	DIO_vdInit@dev+1,c
   726  00014C  EC70  F006         	call	_DIO_vdInit	;wreg free
   727                           
   728                           ;main.c: 51:     DIO_vdInit(&BTN1);
   729  000150  0E8E               	movlw	low _BTN1
   730  000152  6E58               	movwf	DIO_vdInit@dev,c
   731  000154  0E00               	movlw	high _BTN1
   732  000156  6E59               	movwf	DIO_vdInit@dev+1,c
   733  000158  EC70  F006         	call	_DIO_vdInit	;wreg free
   734                           
   735                           ;main.c: 52:     DIO_vdInit(&BTN2);
   736  00015C  0E87               	movlw	low _BTN2
   737  00015E  6E58               	movwf	DIO_vdInit@dev,c
   738  000160  0E00               	movlw	high _BTN2
   739  000162  6E59               	movwf	DIO_vdInit@dev+1,c
   740  000164  EC70  F006         	call	_DIO_vdInit	;wreg free
   741                           
   742                           ;main.c: 53:     DIO_vdInit(&BTN3);
   743  000168  0E80               	movlw	low _BTN3
   744  00016A  6E58               	movwf	DIO_vdInit@dev,c
   745  00016C  0E00               	movlw	high _BTN3
   746  00016E  6E59               	movwf	DIO_vdInit@dev+1,c
   747  000170  EC70  F006         	call	_DIO_vdInit	;wreg free
   748                           
   749                           ;main.c: 55:     INT_vdinit();
   750  000174  ECB3  F006         	call	_INT_vdinit	;wreg free
   751                           
   752                           ;main.c: 56:     INT_vdSetINT0Callback(int0_callback);
   753  000178  0E86               	movlw	low _int0_callback
   754  00017A  6E53               	movwf	INT_vdSetINT0Callback@pf,c
   755  00017C  0E0E               	movlw	high _int0_callback
   756  00017E  6E54               	movwf	INT_vdSetINT0Callback@pf+1,c
   757  000180  ECA7  F007         	call	_INT_vdSetINT0Callback	;wreg free
   758                           
   759                           ;main.c: 57:     INT_vdSetINT1Callback(int1_callback);
   760  000184  0E70               	movlw	low _int1_callback
   761  000186  6E53               	movwf	INT_vdSetINT1Callback@pf,c
   762  000188  0E0E               	movlw	high _int1_callback
   763  00018A  6E54               	movwf	INT_vdSetINT1Callback@pf+1,c
   764  00018C  ECA0  F007         	call	_INT_vdSetINT1Callback	;wreg free
   765                           
   766                           ;main.c: 58:     INT_vdSetINT2Callback(int2_callback);
   767  000190  0E5A               	movlw	low _int2_callback
   768  000192  6E53               	movwf	INT_vdSetINT2Callback@pf,c
   769  000194  0E0E               	movlw	high _int2_callback
   770  000196  6E54               	movwf	INT_vdSetINT2Callback@pf+1,c
   771  000198  EC99  F007         	call	_INT_vdSetINT2Callback	;wreg free
   772                           
   773                           ;main.c: 60:     TMR0_vdInit(0,0,1,0b111,11);
   774  00019C  0E00               	movlw	0
   775  00019E  6E53               	movwf	TMR0_vdInit@bits,c
   776  0001A0  0E01               	movlw	1
   777  0001A2  6E54               	movwf	TMR0_vdInit@prescaler,c
   778  0001A4  0E07               	movlw	7
   779  0001A6  6E55               	movwf	TMR0_vdInit@prescaler_value,c
   780  0001A8  0E00               	movlw	0
   781  0001AA  6E57               	movwf	TMR0_vdInit@init+1,c
   782  0001AC  0E0B               	movlw	11
   783  0001AE  6E56               	movwf	TMR0_vdInit@init,c
   784  0001B0  0E00               	movlw	0
   785  0001B2  ECF6  F003         	call	_TMR0_vdInit
   786                           
   787                           ;main.c: 61:     TMR0_vdStop();
   788  0001B6  ECB6  F007         	call	_TMR0_vdStop	;wreg free
   789                           
   790                           ;main.c: 62:     TMR0_vdSetTMR0Callback(tmr0_callback);
   791  0001BA  0EFC               	movlw	low _tmr0_callback
   792  0001BC  6E57               	movwf	TMR0_vdSetTMR0Callback@pf,c
   793  0001BE  0E0E               	movlw	high _tmr0_callback
   794  0001C0  6E58               	movwf	TMR0_vdSetTMR0Callback@pf+1,c
   795  0001C2  ECF3  F006         	call	_TMR0_vdSetTMR0Callback	;wreg free
   796                           
   797                           ;main.c: 64:     TMR1_vdInit(0,0,0,0,3050);
   798  0001C6  0E00               	movlw	0
   799  0001C8  6E53               	movwf	TMR1_vdInit@bits,c
   800  0001CA  0E00               	movlw	0
   801  0001CC  6E54               	movwf	TMR1_vdInit@prescaler,c
   802  0001CE  0E00               	movlw	0
   803  0001D0  6E55               	movwf	TMR1_vdInit@prescaler_value,c
   804  0001D2  0E0B               	movlw	11
   805  0001D4  6E57               	movwf	TMR1_vdInit@init+1,c
   806  0001D6  0EEA               	movlw	234
   807  0001D8  6E56               	movwf	TMR1_vdInit@init,c
   808  0001DA  0E00               	movlw	0
   809  0001DC  ECE5  F004         	call	_TMR1_vdInit
   810                           
   811                           ;main.c: 65:     TMR1_vdStop();
   812  0001E0  ECB2  F007         	call	_TMR1_vdStop	;wreg free
   813                           
   814                           ;main.c: 66:     TMR1_vdSetTMR1Callback(tmr1_callback);
   815  0001E4  0EEA               	movlw	low _tmr1_callback
   816  0001E6  6E57               	movwf	TMR1_vdSetTMR1Callback@pf,c
   817  0001E8  0E0E               	movlw	high _tmr1_callback
   818  0001EA  6E58               	movwf	TMR1_vdSetTMR1Callback@pf+1,c
   819  0001EC  ECE6  F006         	call	_TMR1_vdSetTMR1Callback	;wreg free
   820                           
   821                           ;main.c: 68:     TMR3_vdInit(0,0,0,0,3050);
   822  0001F0  0E00               	movlw	0
   823  0001F2  6E53               	movwf	TMR3_vdInit@bits,c
   824  0001F4  0E00               	movlw	0
   825  0001F6  6E54               	movwf	TMR3_vdInit@prescaler,c
   826  0001F8  0E00               	movlw	0
   827  0001FA  6E55               	movwf	TMR3_vdInit@prescaler_value,c
   828  0001FC  0E0B               	movlw	11
   829  0001FE  6E57               	movwf	TMR3_vdInit@init+1,c
   830  000200  0EEA               	movlw	234
   831  000202  6E56               	movwf	TMR3_vdInit@init,c
   832  000204  0E00               	movlw	0
   833  000206  EC2F  F005         	call	_TMR3_vdInit
   834                           
   835                           ;main.c: 69:     TMR3_vdStop();
   836  00020A  ECAE  F007         	call	_TMR3_vdStop	;wreg free
   837                           
   838                           ;main.c: 70:     TMR3_vdSetTMR3Callback(tmr3_callback);
   839  00020E  0ED8               	movlw	low _tmr3_callback
   840  000210  6E57               	movwf	TMR3_vdSetTMR3Callback@pf,c
   841  000212  0E0E               	movlw	high _tmr3_callback
   842  000214  6E58               	movwf	TMR3_vdSetTMR3Callback@pf+1,c
   843  000216  ECD9  F006         	call	_TMR3_vdSetTMR3Callback	;wreg free
   844                           
   845                           ;main.c: 72:     ADC_vdInit();
   846  00021A  EC00  F007         	call	_ADC_vdInit	;wreg free
   847                           
   848                           ;main.c: 74:     UART_vdInit(9600);
   849  00021E  0E25               	movlw	37
   850  000220  6E62               	movwf	UART_vdInit@baud+1,c
   851  000222  0E80               	movlw	128
   852  000224  6E61               	movwf	UART_vdInit@baud,c
   853  000226  EC56  F006         	call	_UART_vdInit	;wreg free
   854  00022A                     l3087:
   855  00022A  FFFF               	dw	65535	; assembler added errata NOP
   856                           
   857                           ;main.c: 81:         input_T = ADC_u16getValue(0);
   858  00022C  0E00               	movlw	0
   859  00022E  ECBA  F005         	call	_ADC_u16getValue
   860  000232  C053  F09D         	movff	?_ADC_u16getValue,main@input_T
   861  000236  C054  F09E         	movff	?_ADC_u16getValue+1,main@input_T+1
   862                           
   863                           ;main.c: 82:         T = 50*input_T/1023 + 10;
   864  00023A  C09D  F053         	movff	main@input_T,___wmul@multiplier
   865  00023E  C09E  F054         	movff	main@input_T+1,___wmul@multiplier+1
   866  000242  0E00               	movlw	0
   867  000244  6E56               	movwf	___wmul@multiplicand+1,c
   868  000246  0E32               	movlw	50
   869  000248  6E55               	movwf	___wmul@multiplicand,c
   870  00024A  EC8A  F006         	call	___wmul	;wreg free
   871  00024E  C053  F059         	movff	?___wmul,___lwdiv@dividend
   872  000252  C054  F05A         	movff	?___wmul+1,___lwdiv@dividend+1
   873  000256  0E03               	movlw	3
   874  000258  6E5C               	movwf	___lwdiv@divisor+1,c
   875  00025A  685B               	setf	___lwdiv@divisor,c
   876  00025C  EC26  F006         	call	___lwdiv	;wreg free
   877  000260  5059               	movf	?___lwdiv,w,c
   878  000262  0F0A               	addlw	10
   879  000264  0100               	movlb	0	; () banked
   880  000266  6FA7               	movwf	main@T& (0+255),b
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 87:         x_max8 = T * 13;
   884  000268  51A7               	movf	main@T& (0+255),w,b
   885  00026A  0D0D               	mullw	13
   886  00026C  CFF3 F063          	movff	prodl,??_main
   887  000270  CFF4 F064          	movff	prodh,??_main+1
   888  000274  C063  F095         	movff	??_main,main@x_max8
   889  000278  C064  F096         	movff	??_main+1,main@x_max8+1
   890  00027C  0E00               	movlw	0
   891  00027E  BF96               	btfsc	(main@x_max8+1)& (0+255),7,b
   892  000280  0EFF               	movlw	-1
   893  000282  6F97               	movwf	(main@x_max8+2)& (0+255),b
   894  000284  6F98               	movwf	(main@x_max8+3)& (0+255),b
   895  000286  6F99               	movwf	(main@x_max8+4)& (0+255),b
   896  000288  6F9A               	movwf	(main@x_max8+5)& (0+255),b
   897  00028A  6F9B               	movwf	(main@x_max8+6)& (0+255),b
   898  00028C  6F9C               	movwf	(main@x_max8+7)& (0+255),b
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 90:         x_max16 = T * 14;
   902  00028E  51A7               	movf	main@T& (0+255),w,b
   903  000290  0D0E               	mullw	14
   904  000292  CFF3 F063          	movff	prodl,??_main
   905  000296  CFF4 F064          	movff	prodh,??_main+1
   906  00029A  C063  F09F         	movff	??_main,main@x_max16
   907  00029E  C064  F0A0         	movff	??_main+1,main@x_max16+1
   908  0002A2  0E00               	movlw	0
   909  0002A4  BFA0               	btfsc	(main@x_max16+1)& (0+255),7,b
   910  0002A6  0EFF               	movlw	-1
   911  0002A8  6FA1               	movwf	(main@x_max16+2)& (0+255),b
   912  0002AA  6FA2               	movwf	(main@x_max16+3)& (0+255),b
   913  0002AC  6FA3               	movwf	(main@x_max16+4)& (0+255),b
   914  0002AE  6FA4               	movwf	(main@x_max16+5)& (0+255),b
   915  0002B0  6FA5               	movwf	(main@x_max16+6)& (0+255),b
   916  0002B2  6FA6               	movwf	(main@x_max16+7)& (0+255),b
   917                           
   918                           ; BSR set to: 0
   919                           ;main.c: 91:         if(x1 == x_max8){
   920  0002B4  5009               	movf	_x1,w,c	;volatile
   921  0002B6  6E63               	movwf	??_main& (0+255),c
   922  0002B8  500A               	movf	_x1+1,w,c	;volatile
   923  0002BA  6E64               	movwf	(??_main+1)& (0+255),c
   924  0002BC  500B               	movf	_x1+2,w,c	;volatile
   925  0002BE  6E65               	movwf	(??_main+2)& (0+255),c
   926  0002C0  500C               	movf	_x1+3,w,c	;volatile
   927  0002C2  6E66               	movwf	(??_main+3)& (0+255),c
   928  0002C4  6A67               	clrf	(??_main+4)& (0+255),c
   929  0002C6  6A68               	clrf	(??_main+5)& (0+255),c
   930  0002C8  6A69               	clrf	(??_main+6)& (0+255),c
   931  0002CA  6A6A               	clrf	(??_main+7)& (0+255),c
   932  0002CC  5195               	movf	main@x_max8& (0+255),w,b
   933  0002CE  1863               	xorwf	??_main,w,c
   934  0002D0  E129               	bnz	l3103
   935  0002D2  5196               	movf	(main@x_max8+1)& (0+255),w,b
   936  0002D4  1864               	xorwf	??_main+1,w,c
   937  0002D6  E126               	bnz	l3103
   938  0002D8  5197               	movf	(main@x_max8+2)& (0+255),w,b
   939  0002DA  1865               	xorwf	??_main+2,w,c
   940  0002DC  E123               	bnz	l3103
   941  0002DE  5198               	movf	(main@x_max8+3)& (0+255),w,b
   942  0002E0  1866               	xorwf	??_main+3,w,c
   943  0002E2  E120               	bnz	l3103
   944  0002E4  5199               	movf	(main@x_max8+4)& (0+255),w,b
   945  0002E6  1867               	xorwf	??_main+4,w,c
   946  0002E8  E11D               	bnz	l3103
   947  0002EA  519A               	movf	(main@x_max8+5)& (0+255),w,b
   948  0002EC  1868               	xorwf	??_main+5,w,c
   949  0002EE  E11A               	bnz	l3103
   950  0002F0  519B               	movf	(main@x_max8+6)& (0+255),w,b
   951  0002F2  1869               	xorwf	??_main+6,w,c
   952  0002F4  E117               	bnz	l3103
   953  0002F6  519C               	movf	(main@x_max8+7)& (0+255),w,b
   954  0002F8  186A               	xorwf	??_main+7,w,c
   955  0002FA  A4D8               	btfss	status,2,c
   956  0002FC  D013               	goto	l3103
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 92:             TMR0_vdStop();
   960  0002FE  ECB6  F007         	call	_TMR0_vdStop	;wreg free
   961                           
   962                           ;main.c: 93:             x1 = 0;
   963  000302  0E00               	movlw	0
   964  000304  6E09               	movwf	_x1,c	;volatile
   965  000306  0E00               	movlw	0
   966  000308  6E0A               	movwf	_x1+1,c	;volatile
   967  00030A  0E00               	movlw	0
   968  00030C  6E0B               	movwf	_x1+2,c	;volatile
   969  00030E  0E00               	movlw	0
   970  000310  6E0C               	movwf	_x1+3,c	;volatile
   971                           
   972                           ;main.c: 94:             status1 = !status1;
   973  000312  502B               	movf	_status1,w,c	;volatile
   974  000314  A4D8               	btfss	status,2,c
   975  000316  D002               	goto	u2240
   976  000318  0E01               	movlw	1
   977  00031A  D002               	goto	u2250
   978  00031C                     u2240:
   979  00031C  FFFF               	dw	65535	; assembler added errata NOP
   980  00031E  0E00               	movlw	0
   981  000320                     u2250:
   982  000320  FFFF               	dw	65535	; assembler added errata NOP
   983  000322  6E2B               	movwf	_status1,c	;volatile
   984  000324                     l3103:
   985  000324  FFFF               	dw	65535	; assembler added errata NOP
   986                           
   987                           ;main.c: 96:         if(x2 == x_max16){
   988  000326  5005               	movf	_x2,w,c	;volatile
   989  000328  6E63               	movwf	??_main& (0+255),c
   990  00032A  5006               	movf	_x2+1,w,c	;volatile
   991  00032C  6E64               	movwf	(??_main+1)& (0+255),c
   992  00032E  5007               	movf	_x2+2,w,c	;volatile
   993  000330  6E65               	movwf	(??_main+2)& (0+255),c
   994  000332  5008               	movf	_x2+3,w,c	;volatile
   995  000334  6E66               	movwf	(??_main+3)& (0+255),c
   996  000336  6A67               	clrf	(??_main+4)& (0+255),c
   997  000338  6A68               	clrf	(??_main+5)& (0+255),c
   998  00033A  6A69               	clrf	(??_main+6)& (0+255),c
   999  00033C  6A6A               	clrf	(??_main+7)& (0+255),c
  1000  00033E  0100               	movlb	0	; () banked
  1001  000340  519F               	movf	main@x_max16& (0+255),w,b
  1002  000342  1863               	xorwf	??_main,w,c
  1003  000344  E129               	bnz	l3111
  1004  000346  51A0               	movf	(main@x_max16+1)& (0+255),w,b
  1005  000348  1864               	xorwf	??_main+1,w,c
  1006  00034A  E126               	bnz	l3111
  1007  00034C  51A1               	movf	(main@x_max16+2)& (0+255),w,b
  1008  00034E  1865               	xorwf	??_main+2,w,c
  1009  000350  E123               	bnz	l3111
  1010  000352  51A2               	movf	(main@x_max16+3)& (0+255),w,b
  1011  000354  1866               	xorwf	??_main+3,w,c
  1012  000356  E120               	bnz	l3111
  1013  000358  51A3               	movf	(main@x_max16+4)& (0+255),w,b
  1014  00035A  1867               	xorwf	??_main+4,w,c
  1015  00035C  E11D               	bnz	l3111
  1016  00035E  51A4               	movf	(main@x_max16+5)& (0+255),w,b
  1017  000360  1868               	xorwf	??_main+5,w,c
  1018  000362  E11A               	bnz	l3111
  1019  000364  51A5               	movf	(main@x_max16+6)& (0+255),w,b
  1020  000366  1869               	xorwf	??_main+6,w,c
  1021  000368  E117               	bnz	l3111
  1022  00036A  51A6               	movf	(main@x_max16+7)& (0+255),w,b
  1023  00036C  186A               	xorwf	??_main+7,w,c
  1024  00036E  A4D8               	btfss	status,2,c
  1025  000370  D013               	goto	l3111
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 97:             TMR1_vdStop();
  1029  000372  ECB2  F007         	call	_TMR1_vdStop	;wreg free
  1030                           
  1031                           ;main.c: 98:             x2 = 0;
  1032  000376  0E00               	movlw	0
  1033  000378  6E05               	movwf	_x2,c	;volatile
  1034  00037A  0E00               	movlw	0
  1035  00037C  6E06               	movwf	_x2+1,c	;volatile
  1036  00037E  0E00               	movlw	0
  1037  000380  6E07               	movwf	_x2+2,c	;volatile
  1038  000382  0E00               	movlw	0
  1039  000384  6E08               	movwf	_x2+3,c	;volatile
  1040                           
  1041                           ;main.c: 99:             status2 = !status2;
  1042  000386  502A               	movf	_status2,w,c	;volatile
  1043  000388  A4D8               	btfss	status,2,c
  1044  00038A  D002               	goto	u2270
  1045  00038C  0E01               	movlw	1
  1046  00038E  D002               	goto	u2280
  1047  000390                     u2270:
  1048  000390  FFFF               	dw	65535	; assembler added errata NOP
  1049  000392  0E00               	movlw	0
  1050  000394                     u2280:
  1051  000394  FFFF               	dw	65535	; assembler added errata NOP
  1052  000396  6E2A               	movwf	_status2,c	;volatile
  1053  000398                     l3111:
  1054  000398  FFFF               	dw	65535	; assembler added errata NOP
  1055                           
  1056                           ;main.c: 101:         if(x3 == x_max16){
  1057  00039A  5001               	movf	_x3,w,c	;volatile
  1058  00039C  6E63               	movwf	??_main& (0+255),c
  1059  00039E  5002               	movf	_x3+1,w,c	;volatile
  1060  0003A0  6E64               	movwf	(??_main+1)& (0+255),c
  1061  0003A2  5003               	movf	_x3+2,w,c	;volatile
  1062  0003A4  6E65               	movwf	(??_main+2)& (0+255),c
  1063  0003A6  5004               	movf	_x3+3,w,c	;volatile
  1064  0003A8  6E66               	movwf	(??_main+3)& (0+255),c
  1065  0003AA  6A67               	clrf	(??_main+4)& (0+255),c
  1066  0003AC  6A68               	clrf	(??_main+5)& (0+255),c
  1067  0003AE  6A69               	clrf	(??_main+6)& (0+255),c
  1068  0003B0  6A6A               	clrf	(??_main+7)& (0+255),c
  1069  0003B2  0100               	movlb	0	; () banked
  1070  0003B4  519F               	movf	main@x_max16& (0+255),w,b
  1071  0003B6  1863               	xorwf	??_main,w,c
  1072  0003B8  E129               	bnz	l3119
  1073  0003BA  51A0               	movf	(main@x_max16+1)& (0+255),w,b
  1074  0003BC  1864               	xorwf	??_main+1,w,c
  1075  0003BE  E126               	bnz	l3119
  1076  0003C0  51A1               	movf	(main@x_max16+2)& (0+255),w,b
  1077  0003C2  1865               	xorwf	??_main+2,w,c
  1078  0003C4  E123               	bnz	l3119
  1079  0003C6  51A2               	movf	(main@x_max16+3)& (0+255),w,b
  1080  0003C8  1866               	xorwf	??_main+3,w,c
  1081  0003CA  E120               	bnz	l3119
  1082  0003CC  51A3               	movf	(main@x_max16+4)& (0+255),w,b
  1083  0003CE  1867               	xorwf	??_main+4,w,c
  1084  0003D0  E11D               	bnz	l3119
  1085  0003D2  51A4               	movf	(main@x_max16+5)& (0+255),w,b
  1086  0003D4  1868               	xorwf	??_main+5,w,c
  1087  0003D6  E11A               	bnz	l3119
  1088  0003D8  51A5               	movf	(main@x_max16+6)& (0+255),w,b
  1089  0003DA  1869               	xorwf	??_main+6,w,c
  1090  0003DC  E117               	bnz	l3119
  1091  0003DE  51A6               	movf	(main@x_max16+7)& (0+255),w,b
  1092  0003E0  186A               	xorwf	??_main+7,w,c
  1093  0003E2  A4D8               	btfss	status,2,c
  1094  0003E4  D013               	goto	l3119
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 102:             TMR3_vdStop();
  1098  0003E6  ECAE  F007         	call	_TMR3_vdStop	;wreg free
  1099                           
  1100                           ;main.c: 103:             x3 = 0;
  1101  0003EA  0E00               	movlw	0
  1102  0003EC  6E01               	movwf	_x3,c	;volatile
  1103  0003EE  0E00               	movlw	0
  1104  0003F0  6E02               	movwf	_x3+1,c	;volatile
  1105  0003F2  0E00               	movlw	0
  1106  0003F4  6E03               	movwf	_x3+2,c	;volatile
  1107  0003F6  0E00               	movlw	0
  1108  0003F8  6E04               	movwf	_x3+3,c	;volatile
  1109                           
  1110                           ;main.c: 104:             status3 = !status3;
  1111  0003FA  5029               	movf	_status3,w,c	;volatile
  1112  0003FC  A4D8               	btfss	status,2,c
  1113  0003FE  D002               	goto	u2300
  1114  000400  0E01               	movlw	1
  1115  000402  D002               	goto	u2310
  1116  000404                     u2300:
  1117  000404  FFFF               	dw	65535	; assembler added errata NOP
  1118  000406  0E00               	movlw	0
  1119  000408                     u2310:
  1120  000408  FFFF               	dw	65535	; assembler added errata NOP
  1121  00040A  6E29               	movwf	_status3,c	;volatile
  1122  00040C                     l3119:
  1123  00040C  FFFF               	dw	65535	; assembler added errata NOP
  1124                           
  1125                           ;main.c: 108:         LED_vdSetStatus(&LED1,status1);
  1126  00040E  0E4A               	movlw	low _LED1
  1127  000410  6E58               	movwf	LED_vdSetStatus@led,c
  1128  000412  0E00               	movlw	high _LED1
  1129  000414  6E59               	movwf	LED_vdSetStatus@led+1,c
  1130  000416  C02B  F05A         	movff	_status1,LED_vdSetStatus@status	;volatile
  1131  00041A  EC9F  F006         	call	_LED_vdSetStatus	;wreg free
  1132                           
  1133                           ;main.c: 109:         LED_vdSetStatus(&LED2,status2);
  1134  00041E  0E43               	movlw	low _LED2
  1135  000420  6E58               	movwf	LED_vdSetStatus@led,c
  1136  000422  0E00               	movlw	high _LED2
  1137  000424  6E59               	movwf	LED_vdSetStatus@led+1,c
  1138  000426  C02A  F05A         	movff	_status2,LED_vdSetStatus@status	;volatile
  1139  00042A  EC9F  F006         	call	_LED_vdSetStatus	;wreg free
  1140                           
  1141                           ;main.c: 110:         LED_vdSetStatus(&LED3,status3);
  1142  00042E  0E3C               	movlw	low _LED3
  1143  000430  6E58               	movwf	LED_vdSetStatus@led,c
  1144  000432  0E00               	movlw	high _LED3
  1145  000434  6E59               	movwf	LED_vdSetStatus@led+1,c
  1146  000436  C029  F05A         	movff	_status3,LED_vdSetStatus@status	;volatile
  1147  00043A  EC9F  F006         	call	_LED_vdSetStatus	;wreg free
  1148                           
  1149                           ;main.c: 111:         UART_vdSendu8asASCI(T);
  1150  00043E  0100               	movlb	0	; () banked
  1151  000440  51A7               	movf	main@T& (0+255),w,b
  1152  000442  EC4D  F004         	call	_UART_vdSendu8asASCI
  1153                           
  1154                           ;main.c: 112:         UART_vdSendByte('/');
  1155  000446  0E2F               	movlw	47
  1156  000448  EC63  F007         	call	_UART_vdSendByte
  1157                           
  1158                           ;main.c: 117:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1159  00044C  0E0A               	movlw	10
  1160  00044E  6E63               	movwf	??_main& (0+255),c
  1161  000450  0EBE               	movlw	190
  1162  000452                     u2387:
  1163  000452  FFFF               	dw	65535	; errata NOP
  1164  000454  2EE8               	decfsz	wreg,f,c
  1165  000456  D7FD               	bra	u2387
  1166  000458  2E63               	decfsz	??_main& (0+255),f,c
  1167  00045A  D7FB               	bra	u2387
  1168  00045C  D000               	nop2	
  1169  00045E  D6E5               	goto	l3087
  1170  000460                     __end_of_main:
  1171                           	opt callstack 0
  1172                           
  1173 ;; *************** function ___wmul *****************
  1174 ;; Defined at:
  1175 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  multiplier      2    2[COMRAM] unsigned int 
  1178 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  product         2    6[COMRAM] unsigned int 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    2[COMRAM] unsigned int 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, prodl, prodh
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1190 ;;      Params:         4       0       0       0       0       0       0
  1191 ;;      Locals:         2       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0
  1193 ;;      Totals:         6       0       0       0       0       0       0
  1194 ;;Total ram usage:        6 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    3
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text1
  1205  000D14                     __ptext1:
  1206                           	opt callstack 0
  1207  000D14                     ___wmul:
  1208                           	opt callstack 0
  1209  000D14  FFFF               	dw	65535	; assembler added errata NOP
  1210                           
  1211                           ;incstack = 0
  1212  000D16  5053               	movf	___wmul@multiplier,w,c
  1213  000D18  0255               	mulwf	___wmul@multiplicand,c
  1214  000D1A  CFF3 F057          	movff	prodl,___wmul@product
  1215  000D1E  CFF4 F058          	movff	prodh,___wmul@product+1
  1216  000D22  5053               	movf	___wmul@multiplier,w,c
  1217  000D24  0256               	mulwf	___wmul@multiplicand+1,c
  1218  000D26  50F3               	movf	prodl,w,c
  1219  000D28  2658               	addwf	___wmul@product+1,f,c
  1220  000D2A  5054               	movf	___wmul@multiplier+1,w,c
  1221  000D2C  0255               	mulwf	___wmul@multiplicand,c
  1222  000D2E  50F3               	movf	prodl,w,c
  1223  000D30  2658               	addwf	___wmul@product+1,f,c
  1224  000D32  C057  F053         	movff	___wmul@product,?___wmul
  1225  000D36  C058  F054         	movff	___wmul@product+1,?___wmul+1
  1226  000D3A  0012               	return		;funcret
  1227  000D3C  FFFF               	dw	65535	; errata NOP
  1228  000D3E                     __end_of___wmul:
  1229                           	opt callstack 0
  1230                           
  1231 ;; *************** function ___lwdiv *****************
  1232 ;; Defined at:
  1233 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  dividend        2    8[COMRAM] unsigned int 
  1236 ;;  divisor         2   10[COMRAM] unsigned int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  quotient        2   13[COMRAM] unsigned int 
  1239 ;;  counter         1   12[COMRAM] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2    8[COMRAM] unsigned int 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         4       0       0       0       0       0       0
  1250 ;;      Locals:         3       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         7       0       0       0       0       0       0
  1253 ;;Total ram usage:        7 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    3
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;;		_UART_vdSendu16asASCI
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text2
  1265  000C4C                     __ptext2:
  1266                           	opt callstack 0
  1267  000C4C                     ___lwdiv:
  1268                           	opt callstack 0
  1269  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1270                           
  1271                           ;incstack = 0
  1272  000C4E  0E00               	movlw	0
  1273  000C50  6E5F               	movwf	___lwdiv@quotient+1,c
  1274  000C52  0E00               	movlw	0
  1275  000C54  6E5E               	movwf	___lwdiv@quotient,c
  1276  000C56  505B               	movf	___lwdiv@divisor,w,c
  1277  000C58  105C               	iorwf	___lwdiv@divisor+1,w,c
  1278  000C5A  B4D8               	btfsc	status,2,c
  1279  000C5C  D020               	goto	l1107
  1280  000C5E  0E01               	movlw	1
  1281  000C60  6E5D               	movwf	___lwdiv@counter,c
  1282  000C62  D005               	goto	l3041
  1283  000C64                     l3039:
  1284  000C64  FFFF               	dw	65535	; assembler added errata NOP
  1285  000C66  90D8               	bcf	status,0,c
  1286  000C68  365B               	rlcf	___lwdiv@divisor,f,c
  1287  000C6A  365C               	rlcf	___lwdiv@divisor+1,f,c
  1288  000C6C  2A5D               	incf	___lwdiv@counter,f,c
  1289  000C6E                     l3041:
  1290  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  1291  000C70  AE5C               	btfss	___lwdiv@divisor+1,7,c
  1292  000C72  D7F8               	goto	l3039
  1293  000C74                     u2210:
  1294  000C74  FFFF               	dw	65535	; assembler added errata NOP
  1295  000C76  90D8               	bcf	status,0,c
  1296  000C78  365E               	rlcf	___lwdiv@quotient,f,c
  1297  000C7A  365F               	rlcf	___lwdiv@quotient+1,f,c
  1298  000C7C  505B               	movf	___lwdiv@divisor,w,c
  1299  000C7E  5C59               	subwf	___lwdiv@dividend,w,c
  1300  000C80  505C               	movf	___lwdiv@divisor+1,w,c
  1301  000C82  585A               	subwfb	___lwdiv@dividend+1,w,c
  1302  000C84  A0D8               	btfss	status,0,c
  1303  000C86  D005               	goto	l3051
  1304  000C88  505B               	movf	___lwdiv@divisor,w,c
  1305  000C8A  5E59               	subwf	___lwdiv@dividend,f,c
  1306  000C8C  505C               	movf	___lwdiv@divisor+1,w,c
  1307  000C8E  5A5A               	subwfb	___lwdiv@dividend+1,f,c
  1308  000C90  805E               	bsf	___lwdiv@quotient,0,c
  1309  000C92                     l3051:
  1310  000C92  FFFF               	dw	65535	; assembler added errata NOP
  1311  000C94  90D8               	bcf	status,0,c
  1312  000C96  325C               	rrcf	___lwdiv@divisor+1,f,c
  1313  000C98  325B               	rrcf	___lwdiv@divisor,f,c
  1314  000C9A  2E5D               	decfsz	___lwdiv@counter,f,c
  1315  000C9C  D7EB               	goto	u2210
  1316  000C9E                     l1107:
  1317  000C9E  FFFF               	dw	65535	; assembler added errata NOP
  1318  000CA0  C05E  F059         	movff	___lwdiv@quotient,?___lwdiv
  1319  000CA4  C05F  F05A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1320  000CA8  0012               	return		;funcret
  1321  000CAA  FFFF               	dw	65535	; errata NOP
  1322  000CAC                     __end_of___lwdiv:
  1323                           	opt callstack 0
  1324                           
  1325 ;; *************** function _UART_vdSendu8asASCI *****************
  1326 ;; Defined at:
  1327 ;;		line 31 in file "UART.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  data            1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  data            1   10[COMRAM] unsigned char 
  1332 ;;  temp            3   12[COMRAM] unsigned char [3]
  1333 ;;  i               1   15[COMRAM] unsigned char 
  1334 ;;  temp2           1   11[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1344 ;;      Params:         0       0       0       0       0       0       0
  1345 ;;      Locals:         6       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0
  1347 ;;      Totals:         6       0       0       0       0       0       0
  1348 ;;Total ram usage:        6 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    4
  1351 ;; This function calls:
  1352 ;;		_UART_vdSendByte
  1353 ;;		___awdiv
  1354 ;;		___awmod
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361  00089A                     __ptext3:
  1362                           	opt callstack 0
  1363  00089A                     _UART_vdSendu8asASCI:
  1364                           	opt callstack 0
  1365  00089A  FFFF               	dw	65535	; assembler added errata NOP
  1366                           
  1367                           ;incstack = 0
  1368                           ;UART_vdSendu8asASCI@data stored from wreg
  1369  00089C  6E5B               	movwf	UART_vdSendu8asASCI@data,c
  1370                           
  1371                           ;UART.c: 32:  unsigned char temp[3]; unsigned char i; unsigned char temp2 = data;
  1372  00089E  C05B  F05C         	movff	UART_vdSendu8asASCI@data,UART_vdSendu8asASCI@temp2
  1373                           
  1374                           ;UART.c: 33:  for(i=0;i<3;i++){
  1375  0008A2  0E00               	movlw	0
  1376  0008A4  6E60               	movwf	UART_vdSendu8asASCI@i,c
  1377  0008A6                     l3009:
  1378  0008A6  FFFF               	dw	65535	; assembler added errata NOP
  1379                           
  1380                           ;UART.c: 34:   temp[i] = temp2%10;
  1381  0008A8  0E5D               	movlw	low UART_vdSendu8asASCI@temp
  1382  0008AA  2460               	addwf	UART_vdSendu8asASCI@i,w,c
  1383  0008AC  6ED9               	movwf	fsr2l,c
  1384  0008AE  6ADA               	clrf	fsr2h,c
  1385  0008B0  0E00               	movlw	high UART_vdSendu8asASCI@temp
  1386  0008B2  22DA               	addwfc	fsr2h,f,c
  1387  0008B4  C05C  F053         	movff	UART_vdSendu8asASCI@temp2,___awmod@dividend
  1388  0008B8  6A54               	clrf	___awmod@dividend+1,c
  1389  0008BA  0E00               	movlw	0
  1390  0008BC  6E56               	movwf	___awmod@divisor+1,c
  1391  0008BE  0E0A               	movlw	10
  1392  0008C0  6E55               	movwf	___awmod@divisor,c
  1393  0008C2  EC78  F005         	call	___awmod	;wreg free
  1394  0008C6  5053               	movf	?___awmod,w,c
  1395  0008C8  6EDF               	movwf	indf2,c
  1396                           
  1397                           ;UART.c: 35:   temp2 /= 10;
  1398  0008CA  C05C  F053         	movff	UART_vdSendu8asASCI@temp2,___awdiv@dividend
  1399  0008CE  6A54               	clrf	___awdiv@dividend+1,c
  1400  0008D0  0E00               	movlw	0
  1401  0008D2  6E56               	movwf	___awdiv@divisor+1,c
  1402  0008D4  0E0A               	movlw	10
  1403  0008D6  6E55               	movwf	___awdiv@divisor,c
  1404  0008D8  EC99  F004         	call	___awdiv	;wreg free
  1405  0008DC  5053               	movf	?___awdiv,w,c
  1406  0008DE  6E5C               	movwf	UART_vdSendu8asASCI@temp2,c
  1407                           
  1408                           ;UART.c: 36:  }
  1409  0008E0  2A60               	incf	UART_vdSendu8asASCI@i,f,c
  1410  0008E2  0E02               	movlw	2
  1411  0008E4  6460               	cpfsgt	UART_vdSendu8asASCI@i,c
  1412  0008E6  D7DF               	goto	l3009
  1413                           
  1414                           ;UART.c: 37:  if(temp[2]==0){
  1415  0008E8  505F               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1416  0008EA  A4D8               	btfss	status,2,c
  1417  0008EC  D012               	goto	l3025
  1418                           
  1419                           ;UART.c: 38:   if(temp[1]==0){
  1420  0008EE  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1421  0008F0  A4D8               	btfss	status,2,c
  1422  0008F2  D005               	goto	l3023
  1423                           
  1424                           ;UART.c: 39:    UART_vdSendByte(temp[0]+48);
  1425  0008F4  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1426  0008F6  0F30               	addlw	48
  1427  0008F8  EC63  F007         	call	_UART_vdSendByte
  1428                           
  1429                           ;UART.c: 40:   }else{
  1430  0008FC  D017               	goto	l563
  1431  0008FE                     l3023:
  1432  0008FE  FFFF               	dw	65535	; assembler added errata NOP
  1433                           
  1434                           ;UART.c: 41:    UART_vdSendByte(temp[1]+48);
  1435  000900  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1436  000902  0F30               	addlw	48
  1437  000904  EC63  F007         	call	_UART_vdSendByte
  1438                           
  1439                           ;UART.c: 42:    UART_vdSendByte(temp[0]+48);
  1440  000908  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1441  00090A  0F30               	addlw	48
  1442  00090C  EC63  F007         	call	_UART_vdSendByte
  1443  000910  D00D               	goto	l563
  1444  000912                     l3025:
  1445  000912  FFFF               	dw	65535	; assembler added errata NOP
  1446                           
  1447                           ;UART.c: 45:   UART_vdSendByte(temp[2]+48);
  1448  000914  505F               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1449  000916  0F30               	addlw	48
  1450  000918  EC63  F007         	call	_UART_vdSendByte
  1451                           
  1452                           ;UART.c: 46:   UART_vdSendByte(temp[1]+48);
  1453  00091C  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1454  00091E  0F30               	addlw	48
  1455  000920  EC63  F007         	call	_UART_vdSendByte
  1456                           
  1457                           ;UART.c: 47:   UART_vdSendByte(temp[0]+48);
  1458  000924  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1459  000926  0F30               	addlw	48
  1460  000928  EC63  F007         	call	_UART_vdSendByte
  1461  00092C                     l563:
  1462  00092C  FFFF               	dw	65535	; assembler added errata NOP
  1463  00092E  0012               	return		;funcret
  1464  000930  FFFF               	dw	65535	; errata NOP
  1465  000932                     __end_of_UART_vdSendu8asASCI:
  1466                           	opt callstack 0
  1467                           
  1468 ;; *************** function ___awmod *****************
  1469 ;; Defined at:
  1470 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dividend        2    2[COMRAM] int 
  1473 ;;  divisor         2    4[COMRAM] int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  sign            1    7[COMRAM] unsigned char 
  1476 ;;  counter         1    6[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    2[COMRAM] int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1486 ;;      Params:         4       0       0       0       0       0       0
  1487 ;;      Locals:         2       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0
  1489 ;;      Totals:         6       0       0       0       0       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    3
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_UART_vdSendu8asASCI
  1497 ;;		_BTN_vdRead
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text4
  1502  000AF0                     __ptext4:
  1503                           	opt callstack 0
  1504  000AF0                     ___awmod:
  1505                           	opt callstack 0
  1506  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  1507                           
  1508                           ;incstack = 0
  1509  000AF2  0E00               	movlw	0
  1510  000AF4  6E58               	movwf	___awmod@sign,c
  1511  000AF6  AE54               	btfss	___awmod@dividend+1,7,c
  1512  000AF8  D006               	goto	l2827
  1513  000AFA  6C53               	negf	___awmod@dividend,c
  1514  000AFC  1E54               	comf	___awmod@dividend+1,f,c
  1515  000AFE  B0D8               	btfsc	status,0,c
  1516  000B00  2A54               	incf	___awmod@dividend+1,f,c
  1517  000B02  0E01               	movlw	1
  1518  000B04  6E58               	movwf	___awmod@sign,c
  1519  000B06                     l2827:
  1520  000B06  FFFF               	dw	65535	; assembler added errata NOP
  1521  000B08  AE56               	btfss	___awmod@divisor+1,7,c
  1522  000B0A  D004               	goto	l2831
  1523  000B0C  6C55               	negf	___awmod@divisor,c
  1524  000B0E  1E56               	comf	___awmod@divisor+1,f,c
  1525  000B10  B0D8               	btfsc	status,0,c
  1526  000B12  2A56               	incf	___awmod@divisor+1,f,c
  1527  000B14                     l2831:
  1528  000B14  FFFF               	dw	65535	; assembler added errata NOP
  1529  000B16  5055               	movf	___awmod@divisor,w,c
  1530  000B18  1056               	iorwf	___awmod@divisor+1,w,c
  1531  000B1A  B4D8               	btfsc	status,2,c
  1532  000B1C  D01C               	goto	l2847
  1533  000B1E  0E01               	movlw	1
  1534  000B20  6E57               	movwf	___awmod@counter,c
  1535  000B22  D005               	goto	l2837
  1536  000B24                     l2835:
  1537  000B24  FFFF               	dw	65535	; assembler added errata NOP
  1538  000B26  90D8               	bcf	status,0,c
  1539  000B28  3655               	rlcf	___awmod@divisor,f,c
  1540  000B2A  3656               	rlcf	___awmod@divisor+1,f,c
  1541  000B2C  2A57               	incf	___awmod@counter,f,c
  1542  000B2E                     l2837:
  1543  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1544  000B30  AE56               	btfss	___awmod@divisor+1,7,c
  1545  000B32  D7F8               	goto	l2835
  1546  000B34                     u2100:
  1547  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1548  000B36  5055               	movf	___awmod@divisor,w,c
  1549  000B38  5C53               	subwf	___awmod@dividend,w,c
  1550  000B3A  5056               	movf	___awmod@divisor+1,w,c
  1551  000B3C  5854               	subwfb	___awmod@dividend+1,w,c
  1552  000B3E  A0D8               	btfss	status,0,c
  1553  000B40  D004               	goto	l2843
  1554  000B42  5055               	movf	___awmod@divisor,w,c
  1555  000B44  5E53               	subwf	___awmod@dividend,f,c
  1556  000B46  5056               	movf	___awmod@divisor+1,w,c
  1557  000B48  5A54               	subwfb	___awmod@dividend+1,f,c
  1558  000B4A                     l2843:
  1559  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  1560  000B4C  90D8               	bcf	status,0,c
  1561  000B4E  3256               	rrcf	___awmod@divisor+1,f,c
  1562  000B50  3255               	rrcf	___awmod@divisor,f,c
  1563  000B52  2E57               	decfsz	___awmod@counter,f,c
  1564  000B54  D7EF               	goto	u2100
  1565  000B56                     l2847:
  1566  000B56  FFFF               	dw	65535	; assembler added errata NOP
  1567  000B58  5058               	movf	___awmod@sign,w,c
  1568  000B5A  B4D8               	btfsc	status,2,c
  1569  000B5C  D004               	goto	l2851
  1570  000B5E  6C53               	negf	___awmod@dividend,c
  1571  000B60  1E54               	comf	___awmod@dividend+1,f,c
  1572  000B62  B0D8               	btfsc	status,0,c
  1573  000B64  2A54               	incf	___awmod@dividend+1,f,c
  1574  000B66                     l2851:
  1575  000B66  FFFF               	dw	65535	; assembler added errata NOP
  1576  000B68  C053  F053         	movff	___awmod@dividend,?___awmod
  1577  000B6C  C054  F054         	movff	___awmod@dividend+1,?___awmod+1
  1578  000B70  0012               	return		;funcret
  1579  000B72  FFFF               	dw	65535	; errata NOP
  1580  000B74                     __end_of___awmod:
  1581                           	opt callstack 0
  1582                           
  1583 ;; *************** function ___awdiv *****************
  1584 ;; Defined at:
  1585 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  dividend        2    2[COMRAM] int 
  1588 ;;  divisor         2    4[COMRAM] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  quotient        2    8[COMRAM] int 
  1591 ;;  sign            1    7[COMRAM] unsigned char 
  1592 ;;  counter         1    6[COMRAM] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2    2[COMRAM] int 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1602 ;;      Params:         4       0       0       0       0       0       0
  1603 ;;      Locals:         4       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0
  1605 ;;      Totals:         8       0       0       0       0       0       0
  1606 ;;Total ram usage:        8 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_UART_vdSendu8asASCI
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text5
  1617  000932                     __ptext5:
  1618                           	opt callstack 0
  1619  000932                     ___awdiv:
  1620                           	opt callstack 0
  1621  000932  FFFF               	dw	65535	; assembler added errata NOP
  1622                           
  1623                           ;incstack = 0
  1624  000934  0E00               	movlw	0
  1625  000936  6E58               	movwf	___awdiv@sign,c
  1626  000938  AE56               	btfss	___awdiv@divisor+1,7,c
  1627  00093A  D006               	goto	l2783
  1628  00093C  6C55               	negf	___awdiv@divisor,c
  1629  00093E  1E56               	comf	___awdiv@divisor+1,f,c
  1630  000940  B0D8               	btfsc	status,0,c
  1631  000942  2A56               	incf	___awdiv@divisor+1,f,c
  1632  000944  0E01               	movlw	1
  1633  000946  6E58               	movwf	___awdiv@sign,c
  1634  000948                     l2783:
  1635  000948  FFFF               	dw	65535	; assembler added errata NOP
  1636  00094A  AE54               	btfss	___awdiv@dividend+1,7,c
  1637  00094C  D006               	goto	l2789
  1638  00094E  6C53               	negf	___awdiv@dividend,c
  1639  000950  1E54               	comf	___awdiv@dividend+1,f,c
  1640  000952  B0D8               	btfsc	status,0,c
  1641  000954  2A54               	incf	___awdiv@dividend+1,f,c
  1642  000956  0E01               	movlw	1
  1643  000958  1A58               	xorwf	___awdiv@sign,f,c
  1644  00095A                     l2789:
  1645  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1646  00095C  0E00               	movlw	0
  1647  00095E  6E5A               	movwf	___awdiv@quotient+1,c
  1648  000960  0E00               	movlw	0
  1649  000962  6E59               	movwf	___awdiv@quotient,c
  1650  000964  5055               	movf	___awdiv@divisor,w,c
  1651  000966  1056               	iorwf	___awdiv@divisor+1,w,c
  1652  000968  B4D8               	btfsc	status,2,c
  1653  00096A  D020               	goto	l2811
  1654  00096C  0E01               	movlw	1
  1655  00096E  6E57               	movwf	___awdiv@counter,c
  1656  000970  D005               	goto	l2797
  1657  000972                     l2795:
  1658  000972  FFFF               	dw	65535	; assembler added errata NOP
  1659  000974  90D8               	bcf	status,0,c
  1660  000976  3655               	rlcf	___awdiv@divisor,f,c
  1661  000978  3656               	rlcf	___awdiv@divisor+1,f,c
  1662  00097A  2A57               	incf	___awdiv@counter,f,c
  1663  00097C                     l2797:
  1664  00097C  FFFF               	dw	65535	; assembler added errata NOP
  1665  00097E  AE56               	btfss	___awdiv@divisor+1,7,c
  1666  000980  D7F8               	goto	l2795
  1667  000982                     u2040:
  1668  000982  FFFF               	dw	65535	; assembler added errata NOP
  1669  000984  90D8               	bcf	status,0,c
  1670  000986  3659               	rlcf	___awdiv@quotient,f,c
  1671  000988  365A               	rlcf	___awdiv@quotient+1,f,c
  1672  00098A  5055               	movf	___awdiv@divisor,w,c
  1673  00098C  5C53               	subwf	___awdiv@dividend,w,c
  1674  00098E  5056               	movf	___awdiv@divisor+1,w,c
  1675  000990  5854               	subwfb	___awdiv@dividend+1,w,c
  1676  000992  A0D8               	btfss	status,0,c
  1677  000994  D005               	goto	l2807
  1678  000996  5055               	movf	___awdiv@divisor,w,c
  1679  000998  5E53               	subwf	___awdiv@dividend,f,c
  1680  00099A  5056               	movf	___awdiv@divisor+1,w,c
  1681  00099C  5A54               	subwfb	___awdiv@dividend+1,f,c
  1682  00099E  8059               	bsf	___awdiv@quotient,0,c
  1683  0009A0                     l2807:
  1684  0009A0  FFFF               	dw	65535	; assembler added errata NOP
  1685  0009A2  90D8               	bcf	status,0,c
  1686  0009A4  3256               	rrcf	___awdiv@divisor+1,f,c
  1687  0009A6  3255               	rrcf	___awdiv@divisor,f,c
  1688  0009A8  2E57               	decfsz	___awdiv@counter,f,c
  1689  0009AA  D7EB               	goto	u2040
  1690  0009AC                     l2811:
  1691  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  1692  0009AE  5058               	movf	___awdiv@sign,w,c
  1693  0009B0  B4D8               	btfsc	status,2,c
  1694  0009B2  D004               	goto	l2815
  1695  0009B4  6C59               	negf	___awdiv@quotient,c
  1696  0009B6  1E5A               	comf	___awdiv@quotient+1,f,c
  1697  0009B8  B0D8               	btfsc	status,0,c
  1698  0009BA  2A5A               	incf	___awdiv@quotient+1,f,c
  1699  0009BC                     l2815:
  1700  0009BC  FFFF               	dw	65535	; assembler added errata NOP
  1701  0009BE  C059  F053         	movff	___awdiv@quotient,?___awdiv
  1702  0009C2  C05A  F054         	movff	___awdiv@quotient+1,?___awdiv+1
  1703  0009C6  0012               	return		;funcret
  1704  0009C8  FFFF               	dw	65535	; errata NOP
  1705  0009CA                     __end_of___awdiv:
  1706                           	opt callstack 0
  1707                           
  1708 ;; *************** function _UART_vdSendByte *****************
  1709 ;; Defined at:
  1710 ;;		line 22 in file "UART.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  data            1    wreg     unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  data            1    2[COMRAM] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1724 ;;      Params:         0       0       0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0
  1727 ;;      Totals:         1       0       0       0       0       0       0
  1728 ;;Total ram usage:        1 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    3
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;;		_UART_vdSendu8asASCI
  1736 ;;		_UART_vdSendu16asASCI
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text6
  1741  000EC6                     __ptext6:
  1742                           	opt callstack 0
  1743  000EC6                     _UART_vdSendByte:
  1744                           	opt callstack 0
  1745  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  1746                           
  1747                           ;incstack = 0
  1748                           ;UART_vdSendByte@data stored from wreg
  1749  000EC8  6E53               	movwf	UART_vdSendByte@data,c
  1750  000ECA  FFFF               	dw	65535	; assembler added errata NOP
  1751                           
  1752                           ;UART.c: 23:  while (!TXIF);
  1753  000ECC  A89E               	btfss	3998,4,c	;volatile
  1754  000ECE  D7FD               	goto	l2647
  1755                           
  1756                           ;UART.c: 28:  TXREG = data;
  1757  000ED0  C053  FFAD         	movff	UART_vdSendByte@data,4013	;volatile
  1758  000ED4  0012               	return		;funcret
  1759  000ED6  FFFF               	dw	65535	; errata NOP
  1760  000ED8                     __end_of_UART_vdSendByte:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _UART_vdInit *****************
  1764 ;; Defined at:
  1765 ;;		line 13 in file "UART.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  baud            2   16[COMRAM] unsigned short 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         2       0       0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0
  1782 ;;      Totals:         2       0       0       0       0       0       0
  1783 ;;Total ram usage:        2 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    4
  1786 ;; This function calls:
  1787 ;;		___aldiv
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text7
  1794  000CAC                     __ptext7:
  1795                           	opt callstack 0
  1796  000CAC                     _UART_vdInit:
  1797                           	opt callstack 0
  1798  000CAC  FFFF               	dw	65535	; assembler added errata NOP
  1799                           
  1800                           ;UART.c: 14:  BRGH = 1;
  1801                           
  1802                           ;incstack = 0
  1803  000CAE  84AC               	bsf	4012,2,c	;volatile
  1804                           
  1805                           ;UART.c: 15:     SPBRG = ((4000000/16)/baud) - 1;
  1806  000CB0  0E90               	movlw	144
  1807  000CB2  6E53               	movwf	___aldiv@dividend,c
  1808  000CB4  0ED0               	movlw	208
  1809  000CB6  6E54               	movwf	___aldiv@dividend+1,c
  1810  000CB8  0E03               	movlw	3
  1811  000CBA  6E55               	movwf	___aldiv@dividend+2,c
  1812  000CBC  0E00               	movlw	0
  1813  000CBE  6E56               	movwf	___aldiv@dividend+3,c
  1814  000CC0  C061  F057         	movff	UART_vdInit@baud,___aldiv@divisor
  1815  000CC4  C062  F058         	movff	UART_vdInit@baud+1,___aldiv@divisor+1
  1816  000CC8  6A59               	clrf	___aldiv@divisor+2,c
  1817  000CCA  6A5A               	clrf	___aldiv@divisor+3,c
  1818  000CCC  EC86  F003         	call	___aldiv	;wreg free
  1819  000CD0  0453               	decf	?___aldiv,w,c
  1820  000CD2  6EAF               	movwf	4015,c	;volatile
  1821                           
  1822                           ;UART.c: 16:     TXSTAbits.SYNC = 0;
  1823  000CD4  98AC               	bcf	4012,4,c	;volatile
  1824                           
  1825                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  1826  000CD6  8EAB               	bsf	4011,7,c	;volatile
  1827                           
  1828                           ;UART.c: 18:     TRISC6 = 0;
  1829  000CD8  9C94               	bcf	3988,6,c	;volatile
  1830                           
  1831                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1832  000CDA  8AAC               	bsf	4012,5,c	;volatile
  1833  000CDC  0012               	return		;funcret
  1834  000CDE  FFFF               	dw	65535	; errata NOP
  1835  000CE0                     __end_of_UART_vdInit:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function ___aldiv *****************
  1839 ;; Defined at:
  1840 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  dividend        4    2[COMRAM] long 
  1843 ;;  divisor         4    6[COMRAM] long 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  quotient        4   12[COMRAM] long 
  1846 ;;  sign            1   11[COMRAM] unsigned char 
  1847 ;;  counter         1   10[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  4    2[COMRAM] long 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1857 ;;      Params:         8       0       0       0       0       0       0
  1858 ;;      Locals:         6       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0
  1860 ;;      Totals:        14       0       0       0       0       0       0
  1861 ;;Total ram usage:       14 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_UART_vdInit
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text8
  1872  00070C                     __ptext8:
  1873                           	opt callstack 0
  1874  00070C                     ___aldiv:
  1875                           	opt callstack 0
  1876  00070C  FFFF               	dw	65535	; assembler added errata NOP
  1877                           
  1878                           ;incstack = 0
  1879  00070E  0E00               	movlw	0
  1880  000710  6E5C               	movwf	___aldiv@sign,c
  1881  000712  AE5A               	btfss	___aldiv@divisor+3,7,c
  1882  000714  D00A               	goto	l2739
  1883  000716  1E5A               	comf	___aldiv@divisor+3,f,c
  1884  000718  1E59               	comf	___aldiv@divisor+2,f,c
  1885  00071A  1E58               	comf	___aldiv@divisor+1,f,c
  1886  00071C  6C57               	negf	___aldiv@divisor,c
  1887  00071E  0E00               	movlw	0
  1888  000720  2258               	addwfc	___aldiv@divisor+1,f,c
  1889  000722  2259               	addwfc	___aldiv@divisor+2,f,c
  1890  000724  225A               	addwfc	___aldiv@divisor+3,f,c
  1891  000726  0E01               	movlw	1
  1892  000728  6E5C               	movwf	___aldiv@sign,c
  1893  00072A                     l2739:
  1894  00072A  FFFF               	dw	65535	; assembler added errata NOP
  1895  00072C  AE56               	btfss	___aldiv@dividend+3,7,c
  1896  00072E  D00A               	goto	l2745
  1897  000730  1E56               	comf	___aldiv@dividend+3,f,c
  1898  000732  1E55               	comf	___aldiv@dividend+2,f,c
  1899  000734  1E54               	comf	___aldiv@dividend+1,f,c
  1900  000736  6C53               	negf	___aldiv@dividend,c
  1901  000738  0E00               	movlw	0
  1902  00073A  2254               	addwfc	___aldiv@dividend+1,f,c
  1903  00073C  2255               	addwfc	___aldiv@dividend+2,f,c
  1904  00073E  2256               	addwfc	___aldiv@dividend+3,f,c
  1905  000740  0E01               	movlw	1
  1906  000742  1A5C               	xorwf	___aldiv@sign,f,c
  1907  000744                     l2745:
  1908  000744  FFFF               	dw	65535	; assembler added errata NOP
  1909  000746  0E00               	movlw	0
  1910  000748  6E5D               	movwf	___aldiv@quotient,c
  1911  00074A  0E00               	movlw	0
  1912  00074C  6E5E               	movwf	___aldiv@quotient+1,c
  1913  00074E  0E00               	movlw	0
  1914  000750  6E5F               	movwf	___aldiv@quotient+2,c
  1915  000752  0E00               	movlw	0
  1916  000754  6E60               	movwf	___aldiv@quotient+3,c
  1917  000756  5057               	movf	___aldiv@divisor,w,c
  1918  000758  1058               	iorwf	___aldiv@divisor+1,w,c
  1919  00075A  1059               	iorwf	___aldiv@divisor+2,w,c
  1920  00075C  105A               	iorwf	___aldiv@divisor+3,w,c
  1921  00075E  B4D8               	btfsc	status,2,c
  1922  000760  D02E               	goto	l2767
  1923  000762  0E01               	movlw	1
  1924  000764  6E5B               	movwf	___aldiv@counter,c
  1925  000766  D007               	goto	l2753
  1926  000768                     l2751:
  1927  000768  FFFF               	dw	65535	; assembler added errata NOP
  1928  00076A  90D8               	bcf	status,0,c
  1929  00076C  3657               	rlcf	___aldiv@divisor,f,c
  1930  00076E  3658               	rlcf	___aldiv@divisor+1,f,c
  1931  000770  3659               	rlcf	___aldiv@divisor+2,f,c
  1932  000772  365A               	rlcf	___aldiv@divisor+3,f,c
  1933  000774  2A5B               	incf	___aldiv@counter,f,c
  1934  000776                     l2753:
  1935  000776  FFFF               	dw	65535	; assembler added errata NOP
  1936  000778  AE5A               	btfss	___aldiv@divisor+3,7,c
  1937  00077A  D7F6               	goto	l2751
  1938  00077C                     u1980:
  1939  00077C  FFFF               	dw	65535	; assembler added errata NOP
  1940  00077E  90D8               	bcf	status,0,c
  1941  000780  365D               	rlcf	___aldiv@quotient,f,c
  1942  000782  365E               	rlcf	___aldiv@quotient+1,f,c
  1943  000784  365F               	rlcf	___aldiv@quotient+2,f,c
  1944  000786  3660               	rlcf	___aldiv@quotient+3,f,c
  1945  000788  5057               	movf	___aldiv@divisor,w,c
  1946  00078A  5C53               	subwf	___aldiv@dividend,w,c
  1947  00078C  5058               	movf	___aldiv@divisor+1,w,c
  1948  00078E  5854               	subwfb	___aldiv@dividend+1,w,c
  1949  000790  5059               	movf	___aldiv@divisor+2,w,c
  1950  000792  5855               	subwfb	___aldiv@dividend+2,w,c
  1951  000794  505A               	movf	___aldiv@divisor+3,w,c
  1952  000796  5856               	subwfb	___aldiv@dividend+3,w,c
  1953  000798  A0D8               	btfss	status,0,c
  1954  00079A  D009               	goto	l2763
  1955  00079C  5057               	movf	___aldiv@divisor,w,c
  1956  00079E  5E53               	subwf	___aldiv@dividend,f,c
  1957  0007A0  5058               	movf	___aldiv@divisor+1,w,c
  1958  0007A2  5A54               	subwfb	___aldiv@dividend+1,f,c
  1959  0007A4  5059               	movf	___aldiv@divisor+2,w,c
  1960  0007A6  5A55               	subwfb	___aldiv@dividend+2,f,c
  1961  0007A8  505A               	movf	___aldiv@divisor+3,w,c
  1962  0007AA  5A56               	subwfb	___aldiv@dividend+3,f,c
  1963  0007AC  805D               	bsf	___aldiv@quotient,0,c
  1964  0007AE                     l2763:
  1965  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  1966  0007B0  90D8               	bcf	status,0,c
  1967  0007B2  325A               	rrcf	___aldiv@divisor+3,f,c
  1968  0007B4  3259               	rrcf	___aldiv@divisor+2,f,c
  1969  0007B6  3258               	rrcf	___aldiv@divisor+1,f,c
  1970  0007B8  3257               	rrcf	___aldiv@divisor,f,c
  1971  0007BA  2E5B               	decfsz	___aldiv@counter,f,c
  1972  0007BC  D7DF               	goto	u1980
  1973  0007BE                     l2767:
  1974  0007BE  FFFF               	dw	65535	; assembler added errata NOP
  1975  0007C0  505C               	movf	___aldiv@sign,w,c
  1976  0007C2  B4D8               	btfsc	status,2,c
  1977  0007C4  D008               	goto	l2771
  1978  0007C6  1E60               	comf	___aldiv@quotient+3,f,c
  1979  0007C8  1E5F               	comf	___aldiv@quotient+2,f,c
  1980  0007CA  1E5E               	comf	___aldiv@quotient+1,f,c
  1981  0007CC  6C5D               	negf	___aldiv@quotient,c
  1982  0007CE  0E00               	movlw	0
  1983  0007D0  225E               	addwfc	___aldiv@quotient+1,f,c
  1984  0007D2  225F               	addwfc	___aldiv@quotient+2,f,c
  1985  0007D4  2260               	addwfc	___aldiv@quotient+3,f,c
  1986  0007D6                     l2771:
  1987  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  1988  0007D8  C05D  F053         	movff	___aldiv@quotient,?___aldiv
  1989  0007DC  C05E  F054         	movff	___aldiv@quotient+1,?___aldiv+1
  1990  0007E0  C05F  F055         	movff	___aldiv@quotient+2,?___aldiv+2
  1991  0007E4  C060  F056         	movff	___aldiv@quotient+3,?___aldiv+3
  1992  0007E8  0012               	return		;funcret
  1993  0007EA  FFFF               	dw	65535	; errata NOP
  1994  0007EC                     __end_of___aldiv:
  1995                           	opt callstack 0
  1996                           
  1997 ;; *************** function _TMR3_vdStop *****************
  1998 ;; Defined at:
  1999 ;;		line 44 in file "TMR3.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		None
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         0       0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    3
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text9
  2028  000F5C                     __ptext9:
  2029                           	opt callstack 0
  2030  000F5C                     _TMR3_vdStop:
  2031                           	opt callstack 0
  2032  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  2033                           
  2034                           ;TMR3.c: 45:     T3CONbits.TMR3ON = 0;
  2035                           
  2036                           ;incstack = 0
  2037  000F5E  90B1               	bcf	4017,0,c	;volatile
  2038  000F60  0012               	return		;funcret
  2039  000F62  FFFF               	dw	65535	; errata NOP
  2040  000F64                     __end_of_TMR3_vdStop:
  2041                           	opt callstack 0
  2042                           
  2043 ;; *************** function _TMR3_vdSetTMR3Callback *****************
  2044 ;; Defined at:
  2045 ;;		line 59 in file "TMR3.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2048 ;;		 -> tmr3_callback(1), 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         2       0       0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0
  2063 ;;      Totals:         2       0       0       0       0       0       0
  2064 ;;Total ram usage:        2 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    4
  2067 ;; This function calls:
  2068 ;;		_INT_vdSetTMR3Callback
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text10
  2075  000DB2                     __ptext10:
  2076                           	opt callstack 0
  2077  000DB2                     _TMR3_vdSetTMR3Callback:
  2078                           	opt callstack 0
  2079  000DB2  FFFF               	dw	65535	; assembler added errata NOP
  2080                           
  2081                           ;TMR3.c: 60:     INT_vdSetTMR3Callback(pf,initial);
  2082                           
  2083                           ;incstack = 0
  2084  000DB4  C057  F053         	movff	TMR3_vdSetTMR3Callback@pf,INT_vdSetTMR3Callback@pf
  2085  000DB8  C058  F054         	movff	TMR3_vdSetTMR3Callback@pf+1,INT_vdSetTMR3Callback@pf+1
  2086  000DBC  C00D  F055         	movff	TMR3@initial,INT_vdSetTMR3Callback@init
  2087  000DC0  C00E  F056         	movff	TMR3@initial+1,INT_vdSetTMR3Callback@init+1
  2088  000DC4  EC0C  F007         	call	_INT_vdSetTMR3Callback	;wreg free
  2089  000DC8  0012               	return		;funcret
  2090  000DCA  FFFF               	dw	65535	; errata NOP
  2091  000DCC                     __end_of_TMR3_vdSetTMR3Callback:
  2092                           	opt callstack 0
  2093                           
  2094 ;; *************** function _INT_vdSetTMR3Callback *****************
  2095 ;; Defined at:
  2096 ;;		line 74 in file "INT.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2099 ;;		 -> tmr3_callback(1), 
  2100 ;;  init            2    4[COMRAM] unsigned int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         4       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         4       0       0       0       0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_TMR3_vdSetTMR3Callback
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text11
  2127  000E18                     __ptext11:
  2128                           	opt callstack 0
  2129  000E18                     _INT_vdSetTMR3Callback:
  2130                           	opt callstack 0
  2131  000E18  FFFF               	dw	65535	; assembler added errata NOP
  2132                           
  2133                           ;INT.c: 75:     callback_TMR3 = pf;
  2134                           
  2135                           ;incstack = 0
  2136  000E1A  C053  F01B         	movff	INT_vdSetTMR3Callback@pf,_callback_TMR3
  2137  000E1E  C054  F01C         	movff	INT_vdSetTMR3Callback@pf+1,_callback_TMR3+1
  2138                           
  2139                           ;INT.c: 76:     initial_tmr3 = init;
  2140  000E22  C055  F013         	movff	INT_vdSetTMR3Callback@init,_initial_tmr3
  2141  000E26  C056  F014         	movff	INT_vdSetTMR3Callback@init+1,_initial_tmr3+1
  2142  000E2A  0012               	return		;funcret
  2143  000E2C  FFFF               	dw	65535	; errata NOP
  2144  000E2E                     __end_of_INT_vdSetTMR3Callback:
  2145                           	opt callstack 0
  2146                           
  2147 ;; *************** function _TMR3_vdInit *****************
  2148 ;; Defined at:
  2149 ;;		line 15 in file "TMR3.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  mode            1    wreg     unsigned char 
  2152 ;;  bits            1    2[COMRAM] unsigned char 
  2153 ;;  prescaler       1    3[COMRAM] unsigned char 
  2154 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  2155 ;;  init            2    5[COMRAM] unsigned int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  mode            1    9[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2167 ;;      Params:         5       0       0       0       0       0       0
  2168 ;;      Locals:         1       0       0       0       0       0       0
  2169 ;;      Temps:          2       0       0       0       0       0       0
  2170 ;;      Totals:         8       0       0       0       0       0       0
  2171 ;;Total ram usage:        8 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text12
  2182  000A5E                     __ptext12:
  2183                           	opt callstack 0
  2184  000A5E                     _TMR3_vdInit:
  2185                           	opt callstack 0
  2186  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  2187                           
  2188                           ;incstack = 0
  2189                           ;TMR3_vdInit@mode stored from wreg
  2190  000A60  6E5A               	movwf	TMR3_vdInit@mode,c
  2191                           
  2192                           ;TMR3.c: 16:     switch(mode){
  2193  000A62  D006               	goto	l2939
  2194  000A64                     l594:
  2195  000A64  FFFF               	dw	65535	; assembler added errata NOP
  2196                           
  2197                           ;TMR3.c: 18:             T3CONbits.TMR3CS = 1;
  2198  000A66  82B1               	bsf	4017,1,c	;volatile
  2199                           
  2200                           ;TMR3.c: 19:             break;
  2201  000A68  D012               	goto	l595
  2202  000A6A                     l596:
  2203  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  2204                           
  2205                           ;TMR3.c: 21:             T3CONbits.TMR3CS = 0;
  2206  000A6C  92B1               	bcf	4017,1,c	;volatile
  2207                           
  2208                           ;TMR3.c: 22:             break;
  2209  000A6E  D00F               	goto	l595
  2210  000A70                     l2939:
  2211  000A70  FFFF               	dw	65535	; assembler added errata NOP
  2212  000A72  505A               	movf	TMR3_vdInit@mode,w,c
  2213  000A74  6E58               	movwf	??_TMR3_vdInit& (0+255),c
  2214  000A76  6A59               	clrf	(??_TMR3_vdInit+1)& (0+255),c
  2215                           
  2216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2217                           ; Switch size 1, requested type "simple"
  2218                           ; Number of cases is 1, Range of values is 0 to 0
  2219                           ; switch strategies available:
  2220                           ; Name         Instructions Cycles
  2221                           ; simple_byte            4     3 (average)
  2222                           ;	Chosen strategy is simple_byte
  2223  000A78  5059               	movf	??_TMR3_vdInit+1,w,c
  2224  000A7A  0A00               	xorlw	0	; case 0
  2225  000A7C  A4D8               	btfss	status,2,c
  2226  000A7E  D007               	goto	l595
  2227                           
  2228                           ; Switch size 1, requested type "simple"
  2229                           ; Number of cases is 2, Range of values is 0 to 1
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte            7     4 (average)
  2233                           ;	Chosen strategy is simple_byte
  2234  000A80  5058               	movf	??_TMR3_vdInit,w,c
  2235  000A82  0A00               	xorlw	0	; case 0
  2236  000A84  B4D8               	btfsc	status,2,c
  2237  000A86  D7F1               	goto	l596
  2238  000A88  0A01               	xorlw	1	; case 1
  2239  000A8A  B4D8               	btfsc	status,2,c
  2240  000A8C  D7EB               	goto	l594
  2241  000A8E                     l595:
  2242  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ;TMR3.c: 25:     T3CONbits.RD16 = bits;
  2245  000A90  B053               	btfsc	TMR3_vdInit@bits,0,c
  2246  000A92  D002               	bra	u2145
  2247  000A94  9EB1               	bcf	4017,7,c	;volatile
  2248  000A96  D001               	bra	u2146
  2249  000A98                     u2145:
  2250  000A98  8EB1               	bsf	4017,7,c	;volatile
  2251  000A9A                     u2146:
  2252                           
  2253                           ;TMR3.c: 27:     switch(prescaler){
  2254  000A9A  D00E               	goto	l2947
  2255  000A9C                     l2941:
  2256  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  2257                           
  2258                           ;TMR3.c: 29:             T3CONbits.T3CKPS = 0;
  2259  000A9E  0ECF               	movlw	-49
  2260  000AA0  16B1               	andwf	4017,f,c	;volatile
  2261                           
  2262                           ;TMR3.c: 30:             break;
  2263  000AA2  D019               	goto	l599
  2264  000AA4                     l2943:
  2265  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  2266                           
  2267                           ;TMR3.c: 32:             T3CONbits.T3CKPS = prescaler_value;
  2268  000AA6  C055  F058         	movff	TMR3_vdInit@prescaler_value,??_TMR3_vdInit
  2269  000AAA  3A58               	swapf	??_TMR3_vdInit,f,c
  2270  000AAC  50B1               	movf	4017,w,c	;volatile
  2271  000AAE  1858               	xorwf	??_TMR3_vdInit,w,c
  2272  000AB0  0BCF               	andlw	-49
  2273  000AB2  1858               	xorwf	??_TMR3_vdInit,w,c
  2274  000AB4  6EB1               	movwf	4017,c	;volatile
  2275                           
  2276                           ;TMR3.c: 33:             break;
  2277  000AB6  D00F               	goto	l599
  2278  000AB8                     l2947:
  2279  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  2280  000ABA  5054               	movf	TMR3_vdInit@prescaler,w,c
  2281  000ABC  6E58               	movwf	??_TMR3_vdInit& (0+255),c
  2282  000ABE  6A59               	clrf	(??_TMR3_vdInit+1)& (0+255),c
  2283                           
  2284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2285                           ; Switch size 1, requested type "simple"
  2286                           ; Number of cases is 1, Range of values is 0 to 0
  2287                           ; switch strategies available:
  2288                           ; Name         Instructions Cycles
  2289                           ; simple_byte            4     3 (average)
  2290                           ;	Chosen strategy is simple_byte
  2291  000AC0  5059               	movf	??_TMR3_vdInit+1,w,c
  2292  000AC2  0A00               	xorlw	0	; case 0
  2293  000AC4  A4D8               	btfss	status,2,c
  2294  000AC6  D007               	goto	l599
  2295                           
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 2, Range of values is 0 to 1
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            7     4 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  000AC8  5058               	movf	??_TMR3_vdInit,w,c
  2303  000ACA  0A00               	xorlw	0	; case 0
  2304  000ACC  B4D8               	btfsc	status,2,c
  2305  000ACE  D7E6               	goto	l2941
  2306  000AD0  0A01               	xorlw	1	; case 1
  2307  000AD2  B4D8               	btfsc	status,2,c
  2308  000AD4  D7E7               	goto	l2943
  2309  000AD6                     l599:
  2310  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  2311                           
  2312                           ;TMR3.c: 37:     TMR3IF = 0;
  2313  000AD8  92A1               	bcf	4001,1,c	;volatile
  2314                           
  2315                           ;TMR3.c: 38:     initial = init;
  2316  000ADA  C056  F00D         	movff	TMR3_vdInit@init,TMR3@initial
  2317  000ADE  C057  F00E         	movff	TMR3_vdInit@init+1,TMR3@initial+1
  2318                           
  2319                           ;TMR3.c: 39:     TMR3L = initial;
  2320  000AE2  C00D  FFB2         	movff	TMR3@initial,4018	;volatile
  2321                           
  2322                           ;TMR3.c: 40:     TMR3H = (initial>>8);
  2323  000AE6  500E               	movf	TMR3@initial+1,w,c
  2324  000AE8  6EB3               	movwf	4019,c	;volatile
  2325                           
  2326                           ;TMR3.c: 41:     T3CONbits.TMR3ON = 1;
  2327  000AEA  80B1               	bsf	4017,0,c	;volatile
  2328  000AEC  0012               	return		;funcret
  2329  000AEE  FFFF               	dw	65535	; errata NOP
  2330  000AF0                     __end_of_TMR3_vdInit:
  2331                           	opt callstack 0
  2332                           
  2333 ;; *************** function _TMR1_vdStop *****************
  2334 ;; Defined at:
  2335 ;;		line 44 in file "TMR1.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		None
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         0       0       0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    3
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text13
  2364  000F64                     __ptext13:
  2365                           	opt callstack 0
  2366  000F64                     _TMR1_vdStop:
  2367                           	opt callstack 0
  2368  000F64  FFFF               	dw	65535	; assembler added errata NOP
  2369                           
  2370                           ;TMR1.c: 45:     T1CONbits.TMR1ON = 0;
  2371                           
  2372                           ;incstack = 0
  2373  000F66  90CD               	bcf	4045,0,c	;volatile
  2374  000F68  0012               	return		;funcret
  2375  000F6A  FFFF               	dw	65535	; errata NOP
  2376  000F6C                     __end_of_TMR1_vdStop:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _TMR1_vdSetTMR1Callback *****************
  2380 ;; Defined at:
  2381 ;;		line 59 in file "TMR1.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2384 ;;		 -> tmr1_callback(1), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2396 ;;      Params:         2       0       0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0
  2399 ;;      Totals:         2       0       0       0       0       0       0
  2400 ;;Total ram usage:        2 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		_INT_vdSetTMR1Callback
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text14
  2411  000DCC                     __ptext14:
  2412                           	opt callstack 0
  2413  000DCC                     _TMR1_vdSetTMR1Callback:
  2414                           	opt callstack 0
  2415  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  2416                           
  2417                           ;TMR1.c: 60:     INT_vdSetTMR1Callback(pf,initial);
  2418                           
  2419                           ;incstack = 0
  2420  000DCE  C057  F053         	movff	TMR1_vdSetTMR1Callback@pf,INT_vdSetTMR1Callback@pf
  2421  000DD2  C058  F054         	movff	TMR1_vdSetTMR1Callback@pf+1,INT_vdSetTMR1Callback@pf+1
  2422  000DD6  C00F  F055         	movff	TMR1@initial,INT_vdSetTMR1Callback@init
  2423  000DDA  C010  F056         	movff	TMR1@initial+1,INT_vdSetTMR1Callback@init+1
  2424  000DDE  EC17  F007         	call	_INT_vdSetTMR1Callback	;wreg free
  2425  000DE2  0012               	return		;funcret
  2426  000DE4  FFFF               	dw	65535	; errata NOP
  2427  000DE6                     __end_of_TMR1_vdSetTMR1Callback:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _INT_vdSetTMR1Callback *****************
  2431 ;; Defined at:
  2432 ;;		line 70 in file "INT.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2435 ;;		 -> tmr1_callback(1), 
  2436 ;;  init            2    4[COMRAM] unsigned int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2448 ;;      Params:         4       0       0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0
  2451 ;;      Totals:         4       0       0       0       0       0       0
  2452 ;;Total ram usage:        4 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_TMR1_vdSetTMR1Callback
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text15
  2463  000E2E                     __ptext15:
  2464                           	opt callstack 0
  2465  000E2E                     _INT_vdSetTMR1Callback:
  2466                           	opt callstack 0
  2467  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  2468                           
  2469                           ;INT.c: 71:     callback_TMR1 = pf;
  2470                           
  2471                           ;incstack = 0
  2472  000E30  C053  F01D         	movff	INT_vdSetTMR1Callback@pf,_callback_TMR1
  2473  000E34  C054  F01E         	movff	INT_vdSetTMR1Callback@pf+1,_callback_TMR1+1
  2474                           
  2475                           ;INT.c: 72:     initial_tmr1 = init;
  2476  000E38  C055  F015         	movff	INT_vdSetTMR1Callback@init,_initial_tmr1
  2477  000E3C  C056  F016         	movff	INT_vdSetTMR1Callback@init+1,_initial_tmr1+1
  2478  000E40  0012               	return		;funcret
  2479  000E42  FFFF               	dw	65535	; errata NOP
  2480  000E44                     __end_of_INT_vdSetTMR1Callback:
  2481                           	opt callstack 0
  2482                           
  2483 ;; *************** function _TMR1_vdInit *****************
  2484 ;; Defined at:
  2485 ;;		line 15 in file "TMR1.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  mode            1    wreg     unsigned char 
  2488 ;;  bits            1    2[COMRAM] unsigned char 
  2489 ;;  prescaler       1    3[COMRAM] unsigned char 
  2490 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  2491 ;;  init            2    5[COMRAM] unsigned int 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  mode            1    9[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2503 ;;      Params:         5       0       0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0
  2506 ;;      Totals:         8       0       0       0       0       0       0
  2507 ;;Total ram usage:        8 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text16
  2518  0009CA                     __ptext16:
  2519                           	opt callstack 0
  2520  0009CA                     _TMR1_vdInit:
  2521                           	opt callstack 0
  2522  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  2523                           
  2524                           ;incstack = 0
  2525                           ;TMR1_vdInit@mode stored from wreg
  2526  0009CC  6E5A               	movwf	TMR1_vdInit@mode,c
  2527                           
  2528                           ;TMR1.c: 16:     switch(mode){
  2529  0009CE  D006               	goto	l2909
  2530  0009D0                     l496:
  2531  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  2532                           
  2533                           ;TMR1.c: 18:             T1CONbits.TMR1CS = 1;
  2534  0009D2  82CD               	bsf	4045,1,c	;volatile
  2535                           
  2536                           ;TMR1.c: 19:             break;
  2537  0009D4  D012               	goto	l497
  2538  0009D6                     l498:
  2539  0009D6  FFFF               	dw	65535	; assembler added errata NOP
  2540                           
  2541                           ;TMR1.c: 21:             T1CONbits.TMR1CS = 0;
  2542  0009D8  92CD               	bcf	4045,1,c	;volatile
  2543                           
  2544                           ;TMR1.c: 22:             break;
  2545  0009DA  D00F               	goto	l497
  2546  0009DC                     l2909:
  2547  0009DC  FFFF               	dw	65535	; assembler added errata NOP
  2548  0009DE  505A               	movf	TMR1_vdInit@mode,w,c
  2549  0009E0  6E58               	movwf	??_TMR1_vdInit& (0+255),c
  2550  0009E2  6A59               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2551                           
  2552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2553                           ; Switch size 1, requested type "simple"
  2554                           ; Number of cases is 1, Range of values is 0 to 0
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte            4     3 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  0009E4  5059               	movf	??_TMR1_vdInit+1,w,c
  2560  0009E6  0A00               	xorlw	0	; case 0
  2561  0009E8  A4D8               	btfss	status,2,c
  2562  0009EA  D007               	goto	l497
  2563                           
  2564                           ; Switch size 1, requested type "simple"
  2565                           ; Number of cases is 2, Range of values is 0 to 1
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte            7     4 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570  0009EC  5058               	movf	??_TMR1_vdInit,w,c
  2571  0009EE  0A00               	xorlw	0	; case 0
  2572  0009F0  B4D8               	btfsc	status,2,c
  2573  0009F2  D7F1               	goto	l498
  2574  0009F4  0A01               	xorlw	1	; case 1
  2575  0009F6  B4D8               	btfsc	status,2,c
  2576  0009F8  D7EB               	goto	l496
  2577  0009FA                     l497:
  2578  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  2579                           
  2580                           ;TMR1.c: 25:     T1CONbits.RD16 = bits;
  2581  0009FC  B053               	btfsc	TMR1_vdInit@bits,0,c
  2582  0009FE  D002               	bra	u2135
  2583  000A00  9ECD               	bcf	4045,7,c	;volatile
  2584  000A02  D001               	bra	u2136
  2585  000A04                     u2135:
  2586  000A04  8ECD               	bsf	4045,7,c	;volatile
  2587  000A06                     u2136:
  2588                           
  2589                           ;TMR1.c: 27:     switch(prescaler){
  2590  000A06  D00E               	goto	l2917
  2591  000A08                     l2911:
  2592  000A08  FFFF               	dw	65535	; assembler added errata NOP
  2593                           
  2594                           ;TMR1.c: 29:             T1CONbits.T1CKPS = 0;
  2595  000A0A  0ECF               	movlw	-49
  2596  000A0C  16CD               	andwf	4045,f,c	;volatile
  2597                           
  2598                           ;TMR1.c: 30:             break;
  2599  000A0E  D019               	goto	l501
  2600  000A10                     l2913:
  2601  000A10  FFFF               	dw	65535	; assembler added errata NOP
  2602                           
  2603                           ;TMR1.c: 32:             T1CONbits.T1CKPS = prescaler_value;
  2604  000A12  C055  F058         	movff	TMR1_vdInit@prescaler_value,??_TMR1_vdInit
  2605  000A16  3A58               	swapf	??_TMR1_vdInit,f,c
  2606  000A18  50CD               	movf	4045,w,c	;volatile
  2607  000A1A  1858               	xorwf	??_TMR1_vdInit,w,c
  2608  000A1C  0BCF               	andlw	-49
  2609  000A1E  1858               	xorwf	??_TMR1_vdInit,w,c
  2610  000A20  6ECD               	movwf	4045,c	;volatile
  2611                           
  2612                           ;TMR1.c: 33:             break;
  2613  000A22  D00F               	goto	l501
  2614  000A24                     l2917:
  2615  000A24  FFFF               	dw	65535	; assembler added errata NOP
  2616  000A26  5054               	movf	TMR1_vdInit@prescaler,w,c
  2617  000A28  6E58               	movwf	??_TMR1_vdInit& (0+255),c
  2618  000A2A  6A59               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2619                           
  2620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2621                           ; Switch size 1, requested type "simple"
  2622                           ; Number of cases is 1, Range of values is 0 to 0
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte            4     3 (average)
  2626                           ;	Chosen strategy is simple_byte
  2627  000A2C  5059               	movf	??_TMR1_vdInit+1,w,c
  2628  000A2E  0A00               	xorlw	0	; case 0
  2629  000A30  A4D8               	btfss	status,2,c
  2630  000A32  D007               	goto	l501
  2631                           
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 2, Range of values is 0 to 1
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte            7     4 (average)
  2637                           ;	Chosen strategy is simple_byte
  2638  000A34  5058               	movf	??_TMR1_vdInit,w,c
  2639  000A36  0A00               	xorlw	0	; case 0
  2640  000A38  B4D8               	btfsc	status,2,c
  2641  000A3A  D7E6               	goto	l2911
  2642  000A3C  0A01               	xorlw	1	; case 1
  2643  000A3E  B4D8               	btfsc	status,2,c
  2644  000A40  D7E7               	goto	l2913
  2645  000A42                     l501:
  2646  000A42  FFFF               	dw	65535	; assembler added errata NOP
  2647                           
  2648                           ;TMR1.c: 36:     T1CONbits.T1OSCEN = 0;
  2649  000A44  96CD               	bcf	4045,3,c	;volatile
  2650                           
  2651                           ;TMR1.c: 37:     TMR1IF = 0;
  2652  000A46  909E               	bcf	3998,0,c	;volatile
  2653                           
  2654                           ;TMR1.c: 38:     initial = init;
  2655  000A48  C056  F00F         	movff	TMR1_vdInit@init,TMR1@initial
  2656  000A4C  C057  F010         	movff	TMR1_vdInit@init+1,TMR1@initial+1
  2657                           
  2658                           ;TMR1.c: 39:     TMR1L = initial;
  2659  000A50  C00F  FFCE         	movff	TMR1@initial,4046	;volatile
  2660                           
  2661                           ;TMR1.c: 40:     TMR1H = (initial>>8);
  2662  000A54  5010               	movf	TMR1@initial+1,w,c
  2663  000A56  6ECF               	movwf	4047,c	;volatile
  2664                           
  2665                           ;TMR1.c: 41:     T1CONbits.TMR1ON = 1;
  2666  000A58  80CD               	bsf	4045,0,c	;volatile
  2667  000A5A  0012               	return		;funcret
  2668  000A5C  FFFF               	dw	65535	; errata NOP
  2669  000A5E                     __end_of_TMR1_vdInit:
  2670                           	opt callstack 0
  2671                           
  2672 ;; *************** function _TMR0_vdStop *****************
  2673 ;; Defined at:
  2674 ;;		line 51 in file "TMR0.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2688 ;;      Params:         0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text17
  2703  000F6C                     __ptext17:
  2704                           	opt callstack 0
  2705  000F6C                     _TMR0_vdStop:
  2706                           	opt callstack 0
  2707  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  2708                           
  2709                           ;TMR0.c: 52:     T0CONbits.TMR0ON = 0;
  2710                           
  2711                           ;incstack = 0
  2712  000F6E  9ED5               	bcf	4053,7,c	;volatile
  2713  000F70  0012               	return		;funcret
  2714  000F72  FFFF               	dw	65535	; errata NOP
  2715  000F74                     __end_of_TMR0_vdStop:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _TMR0_vdSetTMR0Callback *****************
  2719 ;; Defined at:
  2720 ;;		line 66 in file "TMR0.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2723 ;;		 -> tmr0_callback(1), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2735 ;;      Params:         2       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0
  2738 ;;      Totals:         2       0       0       0       0       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    4
  2742 ;; This function calls:
  2743 ;;		_INT_vdSetTMR0Callback
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text18
  2750  000DE6                     __ptext18:
  2751                           	opt callstack 0
  2752  000DE6                     _TMR0_vdSetTMR0Callback:
  2753                           	opt callstack 0
  2754  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  2755                           
  2756                           ;TMR0.c: 67:     INT_vdSetTMR0Callback(pf,initial);
  2757                           
  2758                           ;incstack = 0
  2759  000DE8  C057  F053         	movff	TMR0_vdSetTMR0Callback@pf,INT_vdSetTMR0Callback@pf
  2760  000DEC  C058  F054         	movff	TMR0_vdSetTMR0Callback@pf+1,INT_vdSetTMR0Callback@pf+1
  2761  000DF0  C011  F055         	movff	_initial,INT_vdSetTMR0Callback@init
  2762  000DF4  C012  F056         	movff	_initial+1,INT_vdSetTMR0Callback@init+1
  2763  000DF8  EC22  F007         	call	_INT_vdSetTMR0Callback	;wreg free
  2764  000DFC  0012               	return		;funcret
  2765  000DFE  FFFF               	dw	65535	; errata NOP
  2766  000E00                     __end_of_TMR0_vdSetTMR0Callback:
  2767                           	opt callstack 0
  2768                           
  2769 ;; *************** function _INT_vdSetTMR0Callback *****************
  2770 ;; Defined at:
  2771 ;;		line 66 in file "INT.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2774 ;;		 -> tmr0_callback(1), 
  2775 ;;  init            2    4[COMRAM] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2787 ;;      Params:         4       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0
  2790 ;;      Totals:         4       0       0       0       0       0       0
  2791 ;;Total ram usage:        4 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    3
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_TMR0_vdSetTMR0Callback
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text19
  2802  000E44                     __ptext19:
  2803                           	opt callstack 0
  2804  000E44                     _INT_vdSetTMR0Callback:
  2805                           	opt callstack 0
  2806  000E44  FFFF               	dw	65535	; assembler added errata NOP
  2807                           
  2808                           ;INT.c: 67:     callback_TMR0 = pf;
  2809                           
  2810                           ;incstack = 0
  2811  000E46  C053  F01F         	movff	INT_vdSetTMR0Callback@pf,_callback_TMR0
  2812  000E4A  C054  F020         	movff	INT_vdSetTMR0Callback@pf+1,_callback_TMR0+1
  2813                           
  2814                           ;INT.c: 68:     initial_tmr0 = init;
  2815  000E4E  C055  F017         	movff	INT_vdSetTMR0Callback@init,_initial_tmr0
  2816  000E52  C056  F018         	movff	INT_vdSetTMR0Callback@init+1,_initial_tmr0+1
  2817  000E56  0012               	return		;funcret
  2818  000E58  FFFF               	dw	65535	; errata NOP
  2819  000E5A                     __end_of_INT_vdSetTMR0Callback:
  2820                           	opt callstack 0
  2821                           
  2822 ;; *************** function _TMR0_vdInit *****************
  2823 ;; Defined at:
  2824 ;;		line 15 in file "TMR0.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  mode            1    wreg     unsigned char 
  2827 ;;  bits            1    2[COMRAM] unsigned char 
  2828 ;;  prescaler       1    3[COMRAM] unsigned char 
  2829 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  2830 ;;  init            2    5[COMRAM] unsigned int 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  mode            1    9[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2842 ;;      Params:         5       0       0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0       0
  2844 ;;      Temps:          2       0       0       0       0       0       0
  2845 ;;      Totals:         8       0       0       0       0       0       0
  2846 ;;Total ram usage:        8 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text20
  2857  0007EC                     __ptext20:
  2858                           	opt callstack 0
  2859  0007EC                     _TMR0_vdInit:
  2860                           	opt callstack 0
  2861  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  2862                           
  2863                           ;incstack = 0
  2864                           ;TMR0_vdInit@mode stored from wreg
  2865  0007EE  6E5A               	movwf	TMR0_vdInit@mode,c
  2866                           
  2867                           ;TMR0.c: 16:     switch(mode){
  2868  0007F0  D006               	goto	l2869
  2869  0007F2                     l457:
  2870  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  2871                           
  2872                           ;TMR0.c: 18:             T0CONbits.T0CS = 1;
  2873  0007F4  8AD5               	bsf	4053,5,c	;volatile
  2874                           
  2875                           ;TMR0.c: 19:             break;
  2876  0007F6  D019               	goto	l2873
  2877  0007F8                     l459:
  2878  0007F8  FFFF               	dw	65535	; assembler added errata NOP
  2879                           
  2880                           ;TMR0.c: 21:             T0CONbits.T0CS = 0;
  2881  0007FA  9AD5               	bcf	4053,5,c	;volatile
  2882                           
  2883                           ;TMR0.c: 22:             break;
  2884  0007FC  D016               	goto	l2873
  2885  0007FE                     l2869:
  2886  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  2887  000800  505A               	movf	TMR0_vdInit@mode,w,c
  2888  000802  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  2889  000804  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2890                           
  2891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2892                           ; Switch size 1, requested type "simple"
  2893                           ; Number of cases is 1, Range of values is 0 to 0
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; simple_byte            4     3 (average)
  2897                           ;	Chosen strategy is simple_byte
  2898  000806  5059               	movf	??_TMR0_vdInit+1,w,c
  2899  000808  0A00               	xorlw	0	; case 0
  2900  00080A  A4D8               	btfss	status,2,c
  2901  00080C  D00E               	goto	l2873
  2902                           
  2903                           ; Switch size 1, requested type "simple"
  2904                           ; Number of cases is 2, Range of values is 0 to 1
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte            7     4 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909  00080E  5058               	movf	??_TMR0_vdInit,w,c
  2910  000810  0A00               	xorlw	0	; case 0
  2911  000812  B4D8               	btfsc	status,2,c
  2912  000814  D7F1               	goto	l459
  2913  000816  0A01               	xorlw	1	; case 1
  2914  000818  B4D8               	btfsc	status,2,c
  2915  00081A  D7EB               	goto	l457
  2916  00081C  D006               	goto	l2873
  2917  00081E                     l461:
  2918  00081E  FFFF               	dw	65535	; assembler added errata NOP
  2919                           
  2920                           ;TMR0.c: 26:             T0CONbits.T08BIT = 1;
  2921  000820  8CD5               	bsf	4053,6,c	;volatile
  2922                           
  2923                           ;TMR0.c: 27:             break;
  2924  000822  D012               	goto	l462
  2925  000824                     l463:
  2926  000824  FFFF               	dw	65535	; assembler added errata NOP
  2927                           
  2928                           ;TMR0.c: 29:             T0CONbits.T08BIT = 0;
  2929  000826  9CD5               	bcf	4053,6,c	;volatile
  2930                           
  2931                           ;TMR0.c: 30:             break;
  2932  000828  D00F               	goto	l462
  2933  00082A                     l2873:
  2934  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2935  00082C  5053               	movf	TMR0_vdInit@bits,w,c
  2936  00082E  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  2937  000830  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2938                           
  2939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2940                           ; Switch size 1, requested type "simple"
  2941                           ; Number of cases is 1, Range of values is 0 to 0
  2942                           ; switch strategies available:
  2943                           ; Name         Instructions Cycles
  2944                           ; simple_byte            4     3 (average)
  2945                           ;	Chosen strategy is simple_byte
  2946  000832  5059               	movf	??_TMR0_vdInit+1,w,c
  2947  000834  0A00               	xorlw	0	; case 0
  2948  000836  A4D8               	btfss	status,2,c
  2949  000838  D007               	goto	l462
  2950                           
  2951                           ; Switch size 1, requested type "simple"
  2952                           ; Number of cases is 2, Range of values is 0 to 1
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte            7     4 (average)
  2956                           ;	Chosen strategy is simple_byte
  2957  00083A  5058               	movf	??_TMR0_vdInit,w,c
  2958  00083C  0A00               	xorlw	0	; case 0
  2959  00083E  B4D8               	btfsc	status,2,c
  2960  000840  D7EE               	goto	l461
  2961  000842  0A01               	xorlw	1	; case 1
  2962  000844  B4D8               	btfsc	status,2,c
  2963  000846  D7EE               	goto	l463
  2964  000848                     l462:
  2965  000848  FFFF               	dw	65535	; assembler added errata NOP
  2966                           
  2967                           ;TMR0.c: 33:     T0CONbits.T0SE = 0;
  2968  00084A  98D5               	bcf	4053,4,c	;volatile
  2969                           
  2970                           ;TMR0.c: 35:     switch(prescaler){
  2971  00084C  D006               	goto	l2877
  2972  00084E                     l465:
  2973  00084E  FFFF               	dw	65535	; assembler added errata NOP
  2974                           
  2975                           ;TMR0.c: 37:             T0CONbits.PSA = 1;
  2976  000850  86D5               	bsf	4053,3,c	;volatile
  2977                           
  2978                           ;TMR0.c: 38:             break;
  2979  000852  D012               	goto	l2879
  2980  000854                     l467:
  2981  000854  FFFF               	dw	65535	; assembler added errata NOP
  2982                           
  2983                           ;TMR0.c: 40:             T0CONbits.PSA = 0;
  2984  000856  96D5               	bcf	4053,3,c	;volatile
  2985                           
  2986                           ;TMR0.c: 41:             break;
  2987  000858  D00F               	goto	l2879
  2988  00085A                     l2877:
  2989  00085A  FFFF               	dw	65535	; assembler added errata NOP
  2990  00085C  5054               	movf	TMR0_vdInit@prescaler,w,c
  2991  00085E  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  2992  000860  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2993                           
  2994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2995                           ; Switch size 1, requested type "simple"
  2996                           ; Number of cases is 1, Range of values is 0 to 0
  2997                           ; switch strategies available:
  2998                           ; Name         Instructions Cycles
  2999                           ; simple_byte            4     3 (average)
  3000                           ;	Chosen strategy is simple_byte
  3001  000862  5059               	movf	??_TMR0_vdInit+1,w,c
  3002  000864  0A00               	xorlw	0	; case 0
  3003  000866  A4D8               	btfss	status,2,c
  3004  000868  D007               	goto	l2879
  3005                           
  3006                           ; Switch size 1, requested type "simple"
  3007                           ; Number of cases is 2, Range of values is 0 to 1
  3008                           ; switch strategies available:
  3009                           ; Name         Instructions Cycles
  3010                           ; simple_byte            7     4 (average)
  3011                           ;	Chosen strategy is simple_byte
  3012  00086A  5058               	movf	??_TMR0_vdInit,w,c
  3013  00086C  0A00               	xorlw	0	; case 0
  3014  00086E  B4D8               	btfsc	status,2,c
  3015  000870  D7EE               	goto	l465
  3016  000872  0A01               	xorlw	1	; case 1
  3017  000874  B4D8               	btfsc	status,2,c
  3018  000876  D7EE               	goto	l467
  3019  000878                     l2879:
  3020  000878  FFFF               	dw	65535	; assembler added errata NOP
  3021                           
  3022                           ;TMR0.c: 44:     T0CONbits.T0PS = prescaler_value;
  3023  00087A  50D5               	movf	4053,w,c	;volatile
  3024  00087C  1855               	xorwf	TMR0_vdInit@prescaler_value,w,c
  3025  00087E  0BF8               	andlw	-8
  3026  000880  1855               	xorwf	TMR0_vdInit@prescaler_value,w,c
  3027  000882  6ED5               	movwf	4053,c	;volatile
  3028                           
  3029                           ;TMR0.c: 45:     initial = init;
  3030  000884  C056  F011         	movff	TMR0_vdInit@init,_initial
  3031  000888  C057  F012         	movff	TMR0_vdInit@init+1,_initial+1
  3032                           
  3033                           ;TMR0.c: 46:     TMR0L = initial;
  3034  00088C  C011  FFD6         	movff	_initial,4054	;volatile
  3035                           
  3036                           ;TMR0.c: 47:     TMR0H = (initial>>8);
  3037  000890  5012               	movf	_initial+1,w,c
  3038  000892  6ED7               	movwf	4055,c	;volatile
  3039                           
  3040                           ;TMR0.c: 48:     T0CONbits.TMR0ON = 1;
  3041  000894  8ED5               	bsf	4053,7,c	;volatile
  3042  000896  0012               	return		;funcret
  3043  000898  FFFF               	dw	65535	; errata NOP
  3044  00089A                     __end_of_TMR0_vdInit:
  3045                           	opt callstack 0
  3046                           
  3047 ;; *************** function _LED_vdSetStatus *****************
  3048 ;; Defined at:
  3049 ;;		line 25 in file "LED.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  led             2    7[COMRAM] PTR struct .
  3052 ;;		 -> LED3(7), LED2(7), LED1(7), 
  3053 ;;  status          1    9[COMRAM] unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3065 ;;      Params:         3       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0
  3068 ;;      Totals:         3       0       0       0       0       0       0
  3069 ;;Total ram usage:        3 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    4
  3072 ;; This function calls:
  3073 ;;		_DIO_vdWritePin
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text21
  3080  000D3E                     __ptext21:
  3081                           	opt callstack 0
  3082  000D3E                     _LED_vdSetStatus:
  3083                           	opt callstack 0
  3084  000D3E  FFFF               	dw	65535	; assembler added errata NOP
  3085                           
  3086                           ;LED.c: 26:  DIO_vdWritePin(status,led->PORT,led->pin);
  3087                           
  3088                           ;incstack = 0
  3089  000D40  C058  FFD9         	movff	LED_vdSetStatus@led,fsr2l
  3090  000D44  C059  FFDA         	movff	LED_vdSetStatus@led+1,fsr2h
  3091  000D48  50DF               	movf	indf2,w,c
  3092  000D4A  6E53               	movwf	DIO_vdWritePin@port,c
  3093  000D4C  EE20 F001          	lfsr	2,1
  3094  000D50  5058               	movf	LED_vdSetStatus@led,w,c
  3095  000D52  26D9               	addwf	fsr2l,f,c
  3096  000D54  5059               	movf	LED_vdSetStatus@led+1,w,c
  3097  000D56  22DA               	addwfc	fsr2h,f,c
  3098  000D58  50DF               	movf	indf2,w,c
  3099  000D5A  6E54               	movwf	DIO_vdWritePin@pin,c
  3100  000D5C  505A               	movf	LED_vdSetStatus@status,w,c
  3101  000D5E  EC30  F002         	call	_DIO_vdWritePin
  3102  000D62  0012               	return		;funcret
  3103  000D64  FFFF               	dw	65535	; errata NOP
  3104  000D66                     __end_of_LED_vdSetStatus:
  3105                           	opt callstack 0
  3106                           
  3107 ;; *************** function _DIO_vdWritePin *****************
  3108 ;; Defined at:
  3109 ;;		line 19 in file "DIO.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  data            1    wreg     unsigned char 
  3112 ;;  port            1    2[COMRAM] unsigned char 
  3113 ;;  pin             1    3[COMRAM] unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  data            1    6[COMRAM] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         2       0       0       0       0       0       0
  3126 ;;      Locals:         1       0       0       0       0       0       0
  3127 ;;      Temps:          2       0       0       0       0       0       0
  3128 ;;      Totals:         5       0       0       0       0       0       0
  3129 ;;Total ram usage:        5 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    3
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_LED_vdSetStatus
  3136 ;;		_LED_vdOn
  3137 ;;		_LED_vdOff
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text22
  3142  000460                     __ptext22:
  3143                           	opt callstack 0
  3144  000460                     _DIO_vdWritePin:
  3145                           	opt callstack 0
  3146  000460  FFFF               	dw	65535	; assembler added errata NOP
  3147                           
  3148                           ;incstack = 0
  3149                           ;DIO_vdWritePin@data stored from wreg
  3150  000462  6E57               	movwf	DIO_vdWritePin@data,c
  3151                           
  3152                           ;DIO.c: 20:  switch(port){
  3153  000464  D090               	goto	l2713
  3154  000466                     l2687:
  3155  000466  FFFF               	dw	65535	; assembler added errata NOP
  3156                           
  3157                           ;DIO.c: 22:    if(data){
  3158  000468  5057               	movf	DIO_vdWritePin@data,w,c
  3159  00046A  B4D8               	btfsc	status,2,c
  3160  00046C  D00F               	goto	l2691
  3161                           
  3162                           ;DIO.c: 23:     (*p_PORTAdata).PORT |= (1<<pin);
  3163  00046E  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3164  000472  0E01               	movlw	1
  3165  000474  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3166  000476  2A55               	incf	??_DIO_vdWritePin,f,c
  3167  000478  D003               	goto	u1844
  3168  00047A                     u1845:
  3169  00047A  FFFF               	dw	65535	; assembler added errata NOP
  3170  00047C  90D8               	bcf	status,0,c
  3171  00047E  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3172  000480                     u1844:
  3173  000480  FFFF               	dw	65535	; assembler added errata NOP
  3174  000482  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3175  000484  D7FA               	goto	u1845
  3176  000486  5056               	movf	??_DIO_vdWritePin+1,w,c
  3177  000488  1280               	iorwf	3968,f,c	;volatile
  3178                           
  3179                           ;DIO.c: 24:    }else{
  3180  00048A  D092               	goto	l247
  3181  00048C                     l2691:
  3182  00048C  FFFF               	dw	65535	; assembler added errata NOP
  3183                           
  3184                           ;DIO.c: 25:     (*p_PORTAdata).PORT &= ~(1<<pin);
  3185  00048E  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3186  000492  0E01               	movlw	1
  3187  000494  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3188  000496  2A55               	incf	??_DIO_vdWritePin,f,c
  3189  000498  D003               	goto	u1854
  3190  00049A                     u1855:
  3191  00049A  FFFF               	dw	65535	; assembler added errata NOP
  3192  00049C  90D8               	bcf	status,0,c
  3193  00049E  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3194  0004A0                     u1854:
  3195  0004A0  FFFF               	dw	65535	; assembler added errata NOP
  3196  0004A2  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3197  0004A4  D7FA               	goto	u1855
  3198  0004A6  5056               	movf	??_DIO_vdWritePin+1,w,c
  3199  0004A8  0AFF               	xorlw	255
  3200  0004AA  1680               	andwf	3968,f,c	;volatile
  3201  0004AC  D081               	goto	l247
  3202  0004AE                     l2693:
  3203  0004AE  FFFF               	dw	65535	; assembler added errata NOP
  3204                           
  3205                           ;DIO.c: 29:    if(data){
  3206  0004B0  5057               	movf	DIO_vdWritePin@data,w,c
  3207  0004B2  B4D8               	btfsc	status,2,c
  3208  0004B4  D00F               	goto	l2697
  3209                           
  3210                           ;DIO.c: 30:     (*p_PORTBdata).PORT |= (1<<pin);
  3211  0004B6  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3212  0004BA  0E01               	movlw	1
  3213  0004BC  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3214  0004BE  2A55               	incf	??_DIO_vdWritePin,f,c
  3215  0004C0  D003               	goto	u1874
  3216  0004C2                     u1875:
  3217  0004C2  FFFF               	dw	65535	; assembler added errata NOP
  3218  0004C4  90D8               	bcf	status,0,c
  3219  0004C6  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3220  0004C8                     u1874:
  3221  0004C8  FFFF               	dw	65535	; assembler added errata NOP
  3222  0004CA  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3223  0004CC  D7FA               	goto	u1875
  3224  0004CE  5056               	movf	??_DIO_vdWritePin+1,w,c
  3225  0004D0  1281               	iorwf	3969,f,c	;volatile
  3226                           
  3227                           ;DIO.c: 31:     }else{
  3228  0004D2  D06E               	goto	l247
  3229  0004D4                     l2697:
  3230  0004D4  FFFF               	dw	65535	; assembler added errata NOP
  3231                           
  3232                           ;DIO.c: 32:     (*p_PORTBdata).PORT &= ~(1<<pin);
  3233  0004D6  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3234  0004DA  0E01               	movlw	1
  3235  0004DC  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3236  0004DE  2A55               	incf	??_DIO_vdWritePin,f,c
  3237  0004E0  D003               	goto	u1884
  3238  0004E2                     u1885:
  3239  0004E2  FFFF               	dw	65535	; assembler added errata NOP
  3240  0004E4  90D8               	bcf	status,0,c
  3241  0004E6  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3242  0004E8                     u1884:
  3243  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  3244  0004EA  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3245  0004EC  D7FA               	goto	u1885
  3246  0004EE  5056               	movf	??_DIO_vdWritePin+1,w,c
  3247  0004F0  0AFF               	xorlw	255
  3248  0004F2  1681               	andwf	3969,f,c	;volatile
  3249  0004F4  D05D               	goto	l247
  3250  0004F6                     l2699:
  3251  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3252                           
  3253                           ;DIO.c: 36:    if(data){
  3254  0004F8  5057               	movf	DIO_vdWritePin@data,w,c
  3255  0004FA  B4D8               	btfsc	status,2,c
  3256  0004FC  D00F               	goto	l2703
  3257                           
  3258                           ;DIO.c: 37:     (*p_PORTCdata).PORT |= (1<<pin);
  3259  0004FE  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3260  000502  0E01               	movlw	1
  3261  000504  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3262  000506  2A55               	incf	??_DIO_vdWritePin,f,c
  3263  000508  D003               	goto	u1904
  3264  00050A                     u1905:
  3265  00050A  FFFF               	dw	65535	; assembler added errata NOP
  3266  00050C  90D8               	bcf	status,0,c
  3267  00050E  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3268  000510                     u1904:
  3269  000510  FFFF               	dw	65535	; assembler added errata NOP
  3270  000512  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3271  000514  D7FA               	goto	u1905
  3272  000516  5056               	movf	??_DIO_vdWritePin+1,w,c
  3273  000518  1282               	iorwf	3970,f,c	;volatile
  3274                           
  3275                           ;DIO.c: 38:     }else{
  3276  00051A  D04A               	goto	l247
  3277  00051C                     l2703:
  3278  00051C  FFFF               	dw	65535	; assembler added errata NOP
  3279                           
  3280                           ;DIO.c: 39:     (*p_PORTCdata).PORT &= ~(1<<pin);
  3281  00051E  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3282  000522  0E01               	movlw	1
  3283  000524  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3284  000526  2A55               	incf	??_DIO_vdWritePin,f,c
  3285  000528  D003               	goto	u1914
  3286  00052A                     u1915:
  3287  00052A  FFFF               	dw	65535	; assembler added errata NOP
  3288  00052C  90D8               	bcf	status,0,c
  3289  00052E  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3290  000530                     u1914:
  3291  000530  FFFF               	dw	65535	; assembler added errata NOP
  3292  000532  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3293  000534  D7FA               	goto	u1915
  3294  000536  5056               	movf	??_DIO_vdWritePin+1,w,c
  3295  000538  0AFF               	xorlw	255
  3296  00053A  1682               	andwf	3970,f,c	;volatile
  3297  00053C  D039               	goto	l247
  3298  00053E                     l2705:
  3299  00053E  FFFF               	dw	65535	; assembler added errata NOP
  3300                           
  3301                           ;DIO.c: 43:    if(data){
  3302  000540  5057               	movf	DIO_vdWritePin@data,w,c
  3303  000542  B4D8               	btfsc	status,2,c
  3304  000544  D00F               	goto	l2709
  3305                           
  3306                           ;DIO.c: 44:     (*p_PORTDdata).PORT |= (1<<pin);
  3307  000546  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3308  00054A  0E01               	movlw	1
  3309  00054C  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3310  00054E  2A55               	incf	??_DIO_vdWritePin,f,c
  3311  000550  D003               	goto	u1934
  3312  000552                     u1935:
  3313  000552  FFFF               	dw	65535	; assembler added errata NOP
  3314  000554  90D8               	bcf	status,0,c
  3315  000556  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3316  000558                     u1934:
  3317  000558  FFFF               	dw	65535	; assembler added errata NOP
  3318  00055A  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3319  00055C  D7FA               	goto	u1935
  3320  00055E  5056               	movf	??_DIO_vdWritePin+1,w,c
  3321  000560  1283               	iorwf	3971,f,c	;volatile
  3322                           
  3323                           ;DIO.c: 45:     }else{
  3324  000562  D026               	goto	l247
  3325  000564                     l2709:
  3326  000564  FFFF               	dw	65535	; assembler added errata NOP
  3327                           
  3328                           ;DIO.c: 46:     (*p_PORTDdata).PORT &= ~(1<<pin);
  3329  000566  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3330  00056A  0E01               	movlw	1
  3331  00056C  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3332  00056E  2A55               	incf	??_DIO_vdWritePin,f,c
  3333  000570  D003               	goto	u1944
  3334  000572                     u1945:
  3335  000572  FFFF               	dw	65535	; assembler added errata NOP
  3336  000574  90D8               	bcf	status,0,c
  3337  000576  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3338  000578                     u1944:
  3339  000578  FFFF               	dw	65535	; assembler added errata NOP
  3340  00057A  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3341  00057C  D7FA               	goto	u1945
  3342  00057E  5056               	movf	??_DIO_vdWritePin+1,w,c
  3343  000580  0AFF               	xorlw	255
  3344  000582  1683               	andwf	3971,f,c	;volatile
  3345  000584  D015               	goto	l247
  3346  000586                     l2713:
  3347  000586  FFFF               	dw	65535	; assembler added errata NOP
  3348  000588  5053               	movf	DIO_vdWritePin@port,w,c
  3349  00058A  6E55               	movwf	??_DIO_vdWritePin& (0+255),c
  3350  00058C  6A56               	clrf	(??_DIO_vdWritePin+1)& (0+255),c
  3351                           
  3352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 1, Range of values is 0 to 0
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte            4     3 (average)
  3358                           ;	Chosen strategy is simple_byte
  3359  00058E  5056               	movf	??_DIO_vdWritePin+1,w,c
  3360  000590  0A00               	xorlw	0	; case 0
  3361  000592  A4D8               	btfss	status,2,c
  3362  000594  D00D               	goto	l247
  3363                           
  3364                           ; Switch size 1, requested type "simple"
  3365                           ; Number of cases is 4, Range of values is 65 to 68
  3366                           ; switch strategies available:
  3367                           ; Name         Instructions Cycles
  3368                           ; simple_byte           13     7 (average)
  3369                           ;	Chosen strategy is simple_byte
  3370  000596  5055               	movf	??_DIO_vdWritePin,w,c
  3371  000598  0A41               	xorlw	65	; case 65
  3372  00059A  B4D8               	btfsc	status,2,c
  3373  00059C  D764               	goto	l2687
  3374  00059E  0A03               	xorlw	3	; case 66
  3375  0005A0  B4D8               	btfsc	status,2,c
  3376  0005A2  D785               	goto	l2693
  3377  0005A4  0A01               	xorlw	1	; case 67
  3378  0005A6  B4D8               	btfsc	status,2,c
  3379  0005A8  D7A6               	goto	l2699
  3380  0005AA  0A07               	xorlw	7	; case 68
  3381  0005AC  B4D8               	btfsc	status,2,c
  3382  0005AE  D7C7               	goto	l2705
  3383  0005B0                     l247:
  3384  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  3385  0005B2  0012               	return		;funcret
  3386  0005B4  FFFF               	dw	65535	; errata NOP
  3387  0005B6                     __end_of_DIO_vdWritePin:
  3388                           	opt callstack 0
  3389                           
  3390 ;; *************** function _INT_vdinit *****************
  3391 ;; Defined at:
  3392 ;;		line 24 in file "INT.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		None
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3406 ;;      Params:         0       0       0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0
  3409 ;;      Totals:         0       0       0       0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text23
  3421  000D66                     __ptext23:
  3422                           	opt callstack 0
  3423  000D66                     _INT_vdinit:
  3424                           	opt callstack 0
  3425  000D66  FFFF               	dw	65535	; assembler added errata NOP
  3426                           
  3427                           ;INT.c: 25:     INTCON1bits.GIE = 1;
  3428                           
  3429                           ;incstack = 0
  3430  000D68  8EF2               	bsf	4082,7,c	;volatile
  3431                           
  3432                           ;INT.c: 26:     PEIE = 1;
  3433  000D6A  8CF2               	bsf	4082,6,c	;volatile
  3434                           
  3435                           ;INT.c: 29:     INTCON1bits.INT0IE = 1;
  3436  000D6C  88F2               	bsf	4082,4,c	;volatile
  3437                           
  3438                           ;INT.c: 30:     INTCON3bits.INT1IE = 1;
  3439  000D6E  86F0               	bsf	4080,3,c	;volatile
  3440                           
  3441                           ;INT.c: 31:     INTCON3bits.INT2IE = 1;
  3442  000D70  88F0               	bsf	4080,4,c	;volatile
  3443                           
  3444                           ;INT.c: 33:     INTCON2bits.INTEDG0 = 1;
  3445  000D72  8CF1               	bsf	4081,6,c	;volatile
  3446                           
  3447                           ;INT.c: 34:     INTCON2bits.INTEDG1 = 1;
  3448  000D74  8AF1               	bsf	4081,5,c	;volatile
  3449                           
  3450                           ;INT.c: 35:     INTCON2bits.INTEDG2 = 1;
  3451  000D76  88F1               	bsf	4081,4,c	;volatile
  3452                           
  3453                           ;INT.c: 38:     INTCON1bits.RBIE = 0;
  3454  000D78  96F2               	bcf	4082,3,c	;volatile
  3455                           
  3456                           ;INT.c: 41:     INTCON1bits.TMR0IE = 1;
  3457  000D7A  8AF2               	bsf	4082,5,c	;volatile
  3458                           
  3459                           ;INT.c: 44:     TMR1IF = 0;
  3460  000D7C  909E               	bcf	3998,0,c	;volatile
  3461                           
  3462                           ;INT.c: 45:     PIE1bits.TMR1IE = 1;
  3463  000D7E  809D               	bsf	3997,0,c	;volatile
  3464                           
  3465                           ;INT.c: 46:     IPR1bits.TMR1IP = 0;
  3466  000D80  909F               	bcf	3999,0,c	;volatile
  3467                           
  3468                           ;INT.c: 49:     TMR3IF = 0;
  3469  000D82  92A1               	bcf	4001,1,c	;volatile
  3470                           
  3471                           ;INT.c: 50:     PIE2bits.TMR3IE = 1;
  3472  000D84  82A0               	bsf	4000,1,c	;volatile
  3473                           
  3474                           ;INT.c: 51:     IPR2bits.TMR3IP = 0;
  3475  000D86  92A2               	bcf	4002,1,c	;volatile
  3476  000D88  0012               	return		;funcret
  3477  000D8A  FFFF               	dw	65535	; errata NOP
  3478  000D8C                     __end_of_INT_vdinit:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _INT_vdSetINT2Callback *****************
  3482 ;; Defined at:
  3483 ;;		line 60 in file "INT.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3486 ;;		 -> int2_callback(1), 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         2       0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0
  3501 ;;      Totals:         2       0       0       0       0       0       0
  3502 ;;Total ram usage:        2 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    3
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text24
  3513  000F32                     __ptext24:
  3514                           	opt callstack 0
  3515  000F32                     _INT_vdSetINT2Callback:
  3516                           	opt callstack 0
  3517  000F32  FFFF               	dw	65535	; assembler added errata NOP
  3518                           
  3519                           ;INT.c: 61:     callback_INT2 = pf;
  3520                           
  3521                           ;incstack = 0
  3522  000F34  C053  F023         	movff	INT_vdSetINT2Callback@pf,_callback_INT2
  3523  000F38  C054  F024         	movff	INT_vdSetINT2Callback@pf+1,_callback_INT2+1
  3524  000F3C  0012               	return		;funcret
  3525  000F3E  FFFF               	dw	65535	; errata NOP
  3526  000F40                     __end_of_INT_vdSetINT2Callback:
  3527                           	opt callstack 0
  3528                           
  3529 ;; *************** function _INT_vdSetINT1Callback *****************
  3530 ;; Defined at:
  3531 ;;		line 57 in file "INT.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3534 ;;		 -> int1_callback(1), 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3546 ;;      Params:         2       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    3
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text25
  3561  000F40                     __ptext25:
  3562                           	opt callstack 0
  3563  000F40                     _INT_vdSetINT1Callback:
  3564                           	opt callstack 0
  3565  000F40  FFFF               	dw	65535	; assembler added errata NOP
  3566                           
  3567                           ;INT.c: 58:     callback_INT1 = pf;
  3568                           
  3569                           ;incstack = 0
  3570  000F42  C053  F025         	movff	INT_vdSetINT1Callback@pf,_callback_INT1
  3571  000F46  C054  F026         	movff	INT_vdSetINT1Callback@pf+1,_callback_INT1+1
  3572  000F4A  0012               	return		;funcret
  3573  000F4C  FFFF               	dw	65535	; errata NOP
  3574  000F4E                     __end_of_INT_vdSetINT1Callback:
  3575                           	opt callstack 0
  3576                           
  3577 ;; *************** function _INT_vdSetINT0Callback *****************
  3578 ;; Defined at:
  3579 ;;		line 54 in file "INT.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3582 ;;		 -> int0_callback(1), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3594 ;;      Params:         2       0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0
  3597 ;;      Totals:         2       0       0       0       0       0       0
  3598 ;;Total ram usage:        2 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    3
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text26
  3609  000F4E                     __ptext26:
  3610                           	opt callstack 0
  3611  000F4E                     _INT_vdSetINT0Callback:
  3612                           	opt callstack 0
  3613  000F4E  FFFF               	dw	65535	; assembler added errata NOP
  3614                           
  3615                           ;INT.c: 55:     callback_INT0 = pf;
  3616                           
  3617                           ;incstack = 0
  3618  000F50  C053  F027         	movff	INT_vdSetINT0Callback@pf,_callback_INT0
  3619  000F54  C054  F028         	movff	INT_vdSetINT0Callback@pf+1,_callback_INT0+1
  3620  000F58  0012               	return		;funcret
  3621  000F5A  FFFF               	dw	65535	; errata NOP
  3622  000F5C                     __end_of_INT_vdSetINT0Callback:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _DIO_vdInit *****************
  3626 ;; Defined at:
  3627 ;;		line 15 in file "DIO.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  dev             2    7[COMRAM] PTR struct .
  3630 ;;		 -> BTN3(7), BTN2(7), BTN1(7), LED3(7), 
  3631 ;;		 -> LED2(7), LED1(7), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3643 ;;      Params:         2       0       0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0
  3646 ;;      Totals:         2       0       0       0       0       0       0
  3647 ;;Total ram usage:        2 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    4
  3650 ;; This function calls:
  3651 ;;		_DIO_vdWriteDirPin
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text27
  3658  000CE0                     __ptext27:
  3659                           	opt callstack 0
  3660  000CE0                     _DIO_vdInit:
  3661                           	opt callstack 0
  3662  000CE0  FFFF               	dw	65535	; assembler added errata NOP
  3663                           
  3664                           ;DIO.c: 16:     DIO_vdWriteDirPin(dev->mode,dev->PORT,dev->pin);
  3665                           
  3666                           ;incstack = 0
  3667  000CE2  C058  FFD9         	movff	DIO_vdInit@dev,fsr2l
  3668  000CE6  C059  FFDA         	movff	DIO_vdInit@dev+1,fsr2h
  3669  000CEA  50DF               	movf	indf2,w,c
  3670  000CEC  6E53               	movwf	DIO_vdWriteDirPin@port,c
  3671  000CEE  EE20 F001          	lfsr	2,1
  3672  000CF2  5058               	movf	DIO_vdInit@dev,w,c
  3673  000CF4  26D9               	addwf	fsr2l,f,c
  3674  000CF6  5059               	movf	DIO_vdInit@dev+1,w,c
  3675  000CF8  22DA               	addwfc	fsr2h,f,c
  3676  000CFA  50DF               	movf	indf2,w,c
  3677  000CFC  6E54               	movwf	DIO_vdWriteDirPin@pin,c
  3678  000CFE  EE20 F002          	lfsr	2,2
  3679  000D02  5058               	movf	DIO_vdInit@dev,w,c
  3680  000D04  26D9               	addwf	fsr2l,f,c
  3681  000D06  5059               	movf	DIO_vdInit@dev+1,w,c
  3682  000D08  22DA               	addwfc	fsr2h,f,c
  3683  000D0A  50DF               	movf	indf2,w,c
  3684  000D0C  ECDB  F002         	call	_DIO_vdWriteDirPin
  3685  000D10  0012               	return		;funcret
  3686  000D12  FFFF               	dw	65535	; errata NOP
  3687  000D14                     __end_of_DIO_vdInit:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _DIO_vdWriteDirPin *****************
  3691 ;; Defined at:
  3692 ;;		line 52 in file "DIO.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  data            1    wreg     unsigned char 
  3695 ;;  port            1    2[COMRAM] unsigned char 
  3696 ;;  pin             1    3[COMRAM] unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  data            1    6[COMRAM] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3708 ;;      Params:         2       0       0       0       0       0       0
  3709 ;;      Locals:         1       0       0       0       0       0       0
  3710 ;;      Temps:          2       0       0       0       0       0       0
  3711 ;;      Totals:         5       0       0       0       0       0       0
  3712 ;;Total ram usage:        5 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    3
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_DIO_vdInit
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text28
  3723  0005B6                     __ptext28:
  3724                           	opt callstack 0
  3725  0005B6                     _DIO_vdWriteDirPin:
  3726                           	opt callstack 0
  3727  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  3728                           
  3729                           ;incstack = 0
  3730                           ;DIO_vdWriteDirPin@data stored from wreg
  3731  0005B8  6E57               	movwf	DIO_vdWriteDirPin@data,c
  3732                           
  3733                           ;DIO.c: 53:  switch(port){
  3734  0005BA  D090               	goto	l2679
  3735  0005BC                     l2653:
  3736  0005BC  FFFF               	dw	65535	; assembler added errata NOP
  3737                           
  3738                           ;DIO.c: 55:    if(data){
  3739  0005BE  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3740  0005C0  B4D8               	btfsc	status,2,c
  3741  0005C2  D00F               	goto	l2657
  3742                           
  3743                           ;DIO.c: 56:     (*p_PORTAdirection).PORT |= (1<<pin);
  3744  0005C4  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3745  0005C8  0E01               	movlw	1
  3746  0005CA  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3747  0005CC  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3748  0005CE  D003               	goto	u1724
  3749  0005D0                     u1725:
  3750  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  3751  0005D2  90D8               	bcf	status,0,c
  3752  0005D4  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3753  0005D6                     u1724:
  3754  0005D6  FFFF               	dw	65535	; assembler added errata NOP
  3755  0005D8  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3756  0005DA  D7FA               	goto	u1725
  3757  0005DC  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3758  0005DE  1292               	iorwf	3986,f,c	;volatile
  3759                           
  3760                           ;DIO.c: 57:    }else{
  3761  0005E0  D092               	goto	l264
  3762  0005E2                     l2657:
  3763  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  3764                           
  3765                           ;DIO.c: 58:     (*p_PORTAdirection).PORT &= ~(1<<pin);
  3766  0005E4  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3767  0005E8  0E01               	movlw	1
  3768  0005EA  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3769  0005EC  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3770  0005EE  D003               	goto	u1734
  3771  0005F0                     u1735:
  3772  0005F0  FFFF               	dw	65535	; assembler added errata NOP
  3773  0005F2  90D8               	bcf	status,0,c
  3774  0005F4  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3775  0005F6                     u1734:
  3776  0005F6  FFFF               	dw	65535	; assembler added errata NOP
  3777  0005F8  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3778  0005FA  D7FA               	goto	u1735
  3779  0005FC  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3780  0005FE  0AFF               	xorlw	255
  3781  000600  1692               	andwf	3986,f,c	;volatile
  3782  000602  D081               	goto	l264
  3783  000604                     l2659:
  3784  000604  FFFF               	dw	65535	; assembler added errata NOP
  3785                           
  3786                           ;DIO.c: 62:    if(data){
  3787  000606  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3788  000608  B4D8               	btfsc	status,2,c
  3789  00060A  D00F               	goto	l2663
  3790                           
  3791                           ;DIO.c: 63:     (*p_PORTBdirection).PORT |= (1<<pin);
  3792  00060C  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3793  000610  0E01               	movlw	1
  3794  000612  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3795  000614  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3796  000616  D003               	goto	u1754
  3797  000618                     u1755:
  3798  000618  FFFF               	dw	65535	; assembler added errata NOP
  3799  00061A  90D8               	bcf	status,0,c
  3800  00061C  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3801  00061E                     u1754:
  3802  00061E  FFFF               	dw	65535	; assembler added errata NOP
  3803  000620  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3804  000622  D7FA               	goto	u1755
  3805  000624  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3806  000626  1293               	iorwf	3987,f,c	;volatile
  3807                           
  3808                           ;DIO.c: 64:     }else{
  3809  000628  D06E               	goto	l264
  3810  00062A                     l2663:
  3811  00062A  FFFF               	dw	65535	; assembler added errata NOP
  3812                           
  3813                           ;DIO.c: 65:     (*p_PORTBdirection).PORT &= ~(1<<pin);
  3814  00062C  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3815  000630  0E01               	movlw	1
  3816  000632  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3817  000634  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3818  000636  D003               	goto	u1764
  3819  000638                     u1765:
  3820  000638  FFFF               	dw	65535	; assembler added errata NOP
  3821  00063A  90D8               	bcf	status,0,c
  3822  00063C  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3823  00063E                     u1764:
  3824  00063E  FFFF               	dw	65535	; assembler added errata NOP
  3825  000640  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3826  000642  D7FA               	goto	u1765
  3827  000644  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3828  000646  0AFF               	xorlw	255
  3829  000648  1693               	andwf	3987,f,c	;volatile
  3830  00064A  D05D               	goto	l264
  3831  00064C                     l2665:
  3832  00064C  FFFF               	dw	65535	; assembler added errata NOP
  3833                           
  3834                           ;DIO.c: 69:    if(data){
  3835  00064E  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3836  000650  B4D8               	btfsc	status,2,c
  3837  000652  D00F               	goto	l2669
  3838                           
  3839                           ;DIO.c: 70:     (*p_PORTCdirection).PORT |= (1<<pin);
  3840  000654  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3841  000658  0E01               	movlw	1
  3842  00065A  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3843  00065C  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3844  00065E  D003               	goto	u1784
  3845  000660                     u1785:
  3846  000660  FFFF               	dw	65535	; assembler added errata NOP
  3847  000662  90D8               	bcf	status,0,c
  3848  000664  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3849  000666                     u1784:
  3850  000666  FFFF               	dw	65535	; assembler added errata NOP
  3851  000668  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3852  00066A  D7FA               	goto	u1785
  3853  00066C  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3854  00066E  1294               	iorwf	3988,f,c	;volatile
  3855                           
  3856                           ;DIO.c: 71:     }else{
  3857  000670  D04A               	goto	l264
  3858  000672                     l2669:
  3859  000672  FFFF               	dw	65535	; assembler added errata NOP
  3860                           
  3861                           ;DIO.c: 72:     (*p_PORTCdirection).PORT &= ~(1<<pin);
  3862  000674  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3863  000678  0E01               	movlw	1
  3864  00067A  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3865  00067C  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3866  00067E  D003               	goto	u1794
  3867  000680                     u1795:
  3868  000680  FFFF               	dw	65535	; assembler added errata NOP
  3869  000682  90D8               	bcf	status,0,c
  3870  000684  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3871  000686                     u1794:
  3872  000686  FFFF               	dw	65535	; assembler added errata NOP
  3873  000688  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3874  00068A  D7FA               	goto	u1795
  3875  00068C  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3876  00068E  0AFF               	xorlw	255
  3877  000690  1694               	andwf	3988,f,c	;volatile
  3878  000692  D039               	goto	l264
  3879  000694                     l2671:
  3880  000694  FFFF               	dw	65535	; assembler added errata NOP
  3881                           
  3882                           ;DIO.c: 76:    if(data){
  3883  000696  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3884  000698  B4D8               	btfsc	status,2,c
  3885  00069A  D00F               	goto	l2675
  3886                           
  3887                           ;DIO.c: 77:     (*p_PORTDdirection).PORT |= (1<<pin);
  3888  00069C  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3889  0006A0  0E01               	movlw	1
  3890  0006A2  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3891  0006A4  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3892  0006A6  D003               	goto	u1814
  3893  0006A8                     u1815:
  3894  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  3895  0006AA  90D8               	bcf	status,0,c
  3896  0006AC  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3897  0006AE                     u1814:
  3898  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  3899  0006B0  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3900  0006B2  D7FA               	goto	u1815
  3901  0006B4  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3902  0006B6  1295               	iorwf	3989,f,c	;volatile
  3903                           
  3904                           ;DIO.c: 78:     }else{
  3905  0006B8  D026               	goto	l264
  3906  0006BA                     l2675:
  3907  0006BA  FFFF               	dw	65535	; assembler added errata NOP
  3908                           
  3909                           ;DIO.c: 79:     (*p_PORTDdirection).PORT &= ~(1<<pin);
  3910  0006BC  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3911  0006C0  0E01               	movlw	1
  3912  0006C2  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3913  0006C4  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3914  0006C6  D003               	goto	u1824
  3915  0006C8                     u1825:
  3916  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  3917  0006CA  90D8               	bcf	status,0,c
  3918  0006CC  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3919  0006CE                     u1824:
  3920  0006CE  FFFF               	dw	65535	; assembler added errata NOP
  3921  0006D0  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3922  0006D2  D7FA               	goto	u1825
  3923  0006D4  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3924  0006D6  0AFF               	xorlw	255
  3925  0006D8  1695               	andwf	3989,f,c	;volatile
  3926  0006DA  D015               	goto	l264
  3927  0006DC                     l2679:
  3928  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  3929  0006DE  5053               	movf	DIO_vdWriteDirPin@port,w,c
  3930  0006E0  6E55               	movwf	??_DIO_vdWriteDirPin& (0+255),c
  3931  0006E2  6A56               	clrf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3932                           
  3933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3934                           ; Switch size 1, requested type "simple"
  3935                           ; Number of cases is 1, Range of values is 0 to 0
  3936                           ; switch strategies available:
  3937                           ; Name         Instructions Cycles
  3938                           ; simple_byte            4     3 (average)
  3939                           ;	Chosen strategy is simple_byte
  3940  0006E4  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3941  0006E6  0A00               	xorlw	0	; case 0
  3942  0006E8  A4D8               	btfss	status,2,c
  3943  0006EA  D00D               	goto	l264
  3944                           
  3945                           ; Switch size 1, requested type "simple"
  3946                           ; Number of cases is 4, Range of values is 65 to 68
  3947                           ; switch strategies available:
  3948                           ; Name         Instructions Cycles
  3949                           ; simple_byte           13     7 (average)
  3950                           ;	Chosen strategy is simple_byte
  3951  0006EC  5055               	movf	??_DIO_vdWriteDirPin,w,c
  3952  0006EE  0A41               	xorlw	65	; case 65
  3953  0006F0  B4D8               	btfsc	status,2,c
  3954  0006F2  D764               	goto	l2653
  3955  0006F4  0A03               	xorlw	3	; case 66
  3956  0006F6  B4D8               	btfsc	status,2,c
  3957  0006F8  D785               	goto	l2659
  3958  0006FA  0A01               	xorlw	1	; case 67
  3959  0006FC  B4D8               	btfsc	status,2,c
  3960  0006FE  D7A6               	goto	l2665
  3961  000700  0A07               	xorlw	7	; case 68
  3962  000702  B4D8               	btfsc	status,2,c
  3963  000704  D7C7               	goto	l2671
  3964  000706                     l264:
  3965  000706  FFFF               	dw	65535	; assembler added errata NOP
  3966  000708  0012               	return		;funcret
  3967  00070A  FFFF               	dw	65535	; errata NOP
  3968  00070C                     __end_of_DIO_vdWriteDirPin:
  3969                           	opt callstack 0
  3970                           
  3971 ;; *************** function _ADC_vdInit *****************
  3972 ;; Defined at:
  3973 ;;		line 13 in file "ADC.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         0       0       0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    3
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text29
  4002  000E00                     __ptext29:
  4003                           	opt callstack 0
  4004  000E00                     _ADC_vdInit:
  4005                           	opt callstack 0
  4006  000E00  FFFF               	dw	65535	; assembler added errata NOP
  4007                           
  4008                           ;ADC.c: 14:     ADCON1bits.PCFG = 0b0000;
  4009                           
  4010                           ;incstack = 0
  4011  000E02  0EF0               	movlw	-16
  4012  000E04  16C1               	andwf	4033,f,c	;volatile
  4013                           
  4014                           ;ADC.c: 15:     ADCON1bits.ADFM = 1;
  4015  000E06  8EC1               	bsf	4033,7,c	;volatile
  4016                           
  4017                           ;ADC.c: 16:     ADCON0bits.ADCS = 0b001;
  4018  000E08  50C2               	movf	4034,w,c	;volatile
  4019  000E0A  0B3F               	andlw	-193
  4020  000E0C  0940               	iorlw	64
  4021  000E0E  6EC2               	movwf	4034,c	;volatile
  4022                           
  4023                           ;ADC.c: 17:     ADCON1bits.ADCS2 = (0b001>>2);
  4024  000E10  9CC1               	bcf	4033,6,c	;volatile
  4025                           
  4026                           ;ADC.c: 18:     ADCON0bits.ADON = 1;
  4027  000E12  80C2               	bsf	4034,0,c	;volatile
  4028  000E14  0012               	return		;funcret
  4029  000E16  FFFF               	dw	65535	; errata NOP
  4030  000E18                     __end_of_ADC_vdInit:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _ADC_u16getValue *****************
  4034 ;; Defined at:
  4035 ;;		line 21 in file "ADC.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  pin             1    wreg     unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  pin             1    8[COMRAM] unsigned char 
  4040 ;;  data            2    6[COMRAM] unsigned short 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2    2[COMRAM] unsigned short 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4050 ;;      Params:         2       0       0       0       0       0       0
  4051 ;;      Locals:         3       0       0       0       0       0       0
  4052 ;;      Temps:          2       0       0       0       0       0       0
  4053 ;;      Totals:         7       0       0       0       0       0       0
  4054 ;;Total ram usage:        7 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text30
  4065  000B74                     __ptext30:
  4066                           	opt callstack 0
  4067  000B74                     _ADC_u16getValue:
  4068                           	opt callstack 0
  4069  000B74  FFFF               	dw	65535	; assembler added errata NOP
  4070                           
  4071                           ;incstack = 0
  4072                           ;ADC_u16getValue@pin stored from wreg
  4073  000B76  6E59               	movwf	ADC_u16getValue@pin,c
  4074                           
  4075                           ;ADC.c: 22:     ADCON0bits.CHS = pin;
  4076  000B78  C059  F055         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  4077  000B7C  4655               	rlncf	??_ADC_u16getValue,f,c
  4078  000B7E  4655               	rlncf	??_ADC_u16getValue,f,c
  4079  000B80  4655               	rlncf	??_ADC_u16getValue,f,c
  4080  000B82  50C2               	movf	4034,w,c	;volatile
  4081  000B84  1855               	xorwf	??_ADC_u16getValue,w,c
  4082  000B86  0BC7               	andlw	-57
  4083  000B88  1855               	xorwf	??_ADC_u16getValue,w,c
  4084  000B8A  6EC2               	movwf	4034,c	;volatile
  4085                           
  4086                           ;ADC.c: 23:     TRISA |= (1<<pin);
  4087  000B8C  C059  F055         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  4088  000B90  0E01               	movlw	1
  4089  000B92  6E56               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  4090  000B94  2A55               	incf	??_ADC_u16getValue,f,c
  4091  000B96  D003               	goto	u2154
  4092  000B98                     u2155:
  4093  000B98  FFFF               	dw	65535	; assembler added errata NOP
  4094  000B9A  90D8               	bcf	status,0,c
  4095  000B9C  3656               	rlcf	??_ADC_u16getValue+1,f,c
  4096  000B9E                     u2154:
  4097  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  4098  000BA0  2E55               	decfsz	??_ADC_u16getValue,f,c
  4099  000BA2  D7FA               	goto	u2155
  4100  000BA4  5056               	movf	??_ADC_u16getValue+1,w,c
  4101  000BA6  1292               	iorwf	3986,f,c	;volatile
  4102                           
  4103                           ;ADC.c: 24:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4104  000BA8  0E02               	movlw	2
  4105  000BAA  6E55               	movwf	??_ADC_u16getValue& (0+255),c
  4106  000BAC  0EF2               	movlw	242
  4107  000BAE                     u2397:
  4108  000BAE  FFFF               	dw	65535	; errata NOP
  4109  000BB0  2EE8               	decfsz	wreg,f,c
  4110  000BB2  D7FD               	bra	u2397
  4111  000BB4  2E55               	decfsz	??_ADC_u16getValue& (0+255),f,c
  4112  000BB6  D7FB               	bra	u2397
  4113  000BB8  D000               	nop2	
  4114                           
  4115                           ;ADC.c: 25:     ADCON0bits.GO = 1;
  4116  000BBA  84C2               	bsf	4034,2,c	;volatile
  4117  000BBC                     l168:
  4118  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  4119  000BBE  AC9E               	btfss	3998,6,c	;volatile
  4120  000BC0  D7FD               	goto	l168
  4121                           
  4122                           ;ADC.c: 27:     unsigned short int data = ( (ADRESH<<8)|(ADRESL) );
  4123  000BC2  50C3               	movf	4035,w,c	;volatile
  4124  000BC4  CFC4 F055          	movff	4036,??_ADC_u16getValue	;volatile
  4125  000BC8  6A56               	clrf	(??_ADC_u16getValue+1)& (0+255),c
  4126  000BCA  C055  F056         	movff	??_ADC_u16getValue,??_ADC_u16getValue+1
  4127  000BCE  6A55               	clrf	??_ADC_u16getValue,c
  4128  000BD0  1055               	iorwf	??_ADC_u16getValue,w,c
  4129  000BD2  6E57               	movwf	ADC_u16getValue@data,c
  4130  000BD4  5056               	movf	??_ADC_u16getValue+1,w,c
  4131  000BD6  6E58               	movwf	ADC_u16getValue@data+1,c
  4132                           
  4133                           ;ADC.c: 28:     ADIF = 0;
  4134  000BD8  9C9E               	bcf	3998,6,c	;volatile
  4135                           
  4136                           ;ADC.c: 29:     return data;
  4137  000BDA  C057  F053         	movff	ADC_u16getValue@data,?_ADC_u16getValue
  4138  000BDE  C058  F054         	movff	ADC_u16getValue@data+1,?_ADC_u16getValue+1
  4139  000BE2  0012               	return		;funcret
  4140  000BE4  FFFF               	dw	65535	; errata NOP
  4141  000BE6                     __end_of_ADC_u16getValue:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function _ISR *****************
  4145 ;; Defined at:
  4146 ;;		line 82 in file "INT.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4160 ;;      Params:         0       0       0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0
  4162 ;;      Temps:          2       0       0       0       0       0       0
  4163 ;;      Totals:         2       0       0       0       0       0       0
  4164 ;;Total ram usage:        2 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    2
  4167 ;; This function calls:
  4168 ;;		Absolute function
  4169 ;;		_int0_callback
  4170 ;;		_int1_callback
  4171 ;;		_int2_callback
  4172 ;;		_tmr0_callback
  4173 ;;		_tmr1_callback
  4174 ;;		_tmr3_callback
  4175 ;; This function is called by:
  4176 ;;		Interrupt level 2
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	intcode
  4181  000008                     __pintcode:
  4182                           	opt callstack 0
  4183  000008                     _ISR:
  4184                           	opt callstack 0
  4185  000008  FFFF               	dw	65535	; assembler added errata NOP
  4186                           
  4187                           ;incstack = 0
  4188  00000A  826B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4189  00000C  CFFA F051          	movff	pclath,??_ISR
  4190  000010  CFFB F052          	movff	pclatu,??_ISR+1
  4191                           
  4192                           ;INT.c: 84:     if(INT0IF){
  4193  000014  A2F2               	btfss	4082,1,c	;volatile
  4194  000016  D010               	goto	i2l1941
  4195                           
  4196                           ;INT.c: 85:         callback_INT0();
  4197  000018  D801               	call	i2u83_48
  4198  00001A  D00C               	goto	i2u83_49
  4199  00001C                     i2u83_48:
  4200  00001C  FFFF               	dw	65535	; assembler added errata NOP
  4201  00001E  0005               	push	
  4202  000020  6EFA               	movwf	pclath,c
  4203  000022  5027               	movf	_callback_INT0,w,c
  4204  000024  6EFD               	movwf	tosl,c
  4205  000026  5028               	movf	_callback_INT0+1,w,c
  4206  000028  6EFE               	movwf	tosh,c
  4207  00002A  50F8               	movf	tblptru,w,c
  4208  00002C  6EFF               	movwf	tosu,c
  4209  00002E  50FA               	movf	pclath,w,c
  4210  000030  0012               	return		;indir
  4211  000032  FFFF               	dw	65535	; errata NOP
  4212  000034                     i2u83_49:
  4213  000034  FFFF               	dw	65535	; assembler added errata NOP
  4214                           
  4215                           ;INT.c: 86:         INT0IF = 0;
  4216  000036  92F2               	bcf	4082,1,c	;volatile
  4217  000038                     i2l1941:
  4218  000038  FFFF               	dw	65535	; assembler added errata NOP
  4219                           
  4220                           ;INT.c: 88:     if(INT1IF){
  4221  00003A  A0F0               	btfss	4080,0,c	;volatile
  4222  00003C  D010               	goto	i2l1947
  4223                           
  4224                           ;INT.c: 89:         callback_INT1();
  4225  00003E  D801               	call	i2u85_48
  4226  000040  D00C               	goto	i2u85_49
  4227  000042                     i2u85_48:
  4228  000042  FFFF               	dw	65535	; assembler added errata NOP
  4229  000044  0005               	push	
  4230  000046  6EFA               	movwf	pclath,c
  4231  000048  5025               	movf	_callback_INT1,w,c
  4232  00004A  6EFD               	movwf	tosl,c
  4233  00004C  5026               	movf	_callback_INT1+1,w,c
  4234  00004E  6EFE               	movwf	tosh,c
  4235  000050  50F8               	movf	tblptru,w,c
  4236  000052  6EFF               	movwf	tosu,c
  4237  000054  50FA               	movf	pclath,w,c
  4238  000056  0012               	return		;indir
  4239  000058  FFFF               	dw	65535	; errata NOP
  4240  00005A                     i2u85_49:
  4241  00005A  FFFF               	dw	65535	; assembler added errata NOP
  4242                           
  4243                           ;INT.c: 90:         INT1IF = 0;
  4244  00005C  90F0               	bcf	4080,0,c	;volatile
  4245  00005E                     i2l1947:
  4246  00005E  FFFF               	dw	65535	; assembler added errata NOP
  4247                           
  4248                           ;INT.c: 92:     if(INT2IF){
  4249  000060  A2F0               	btfss	4080,1,c	;volatile
  4250  000062  D010               	goto	i2l1953
  4251                           
  4252                           ;INT.c: 93:         callback_INT2();
  4253  000064  D801               	call	i2u87_48
  4254  000066  D00C               	goto	i2u87_49
  4255  000068                     i2u87_48:
  4256  000068  FFFF               	dw	65535	; assembler added errata NOP
  4257  00006A  0005               	push	
  4258  00006C  6EFA               	movwf	pclath,c
  4259  00006E  5023               	movf	_callback_INT2,w,c
  4260  000070  6EFD               	movwf	tosl,c
  4261  000072  5024               	movf	_callback_INT2+1,w,c
  4262  000074  6EFE               	movwf	tosh,c
  4263  000076  50F8               	movf	tblptru,w,c
  4264  000078  6EFF               	movwf	tosu,c
  4265  00007A  50FA               	movf	pclath,w,c
  4266  00007C  0012               	return		;indir
  4267  00007E  FFFF               	dw	65535	; errata NOP
  4268  000080                     i2u87_49:
  4269  000080  FFFF               	dw	65535	; assembler added errata NOP
  4270                           
  4271                           ;INT.c: 94:         INT2IF = 0;
  4272  000082  92F0               	bcf	4080,1,c	;volatile
  4273  000084                     i2l1953:
  4274  000084  FFFF               	dw	65535	; assembler added errata NOP
  4275                           
  4276                           ;INT.c: 97:         callback_INTonChange();
  4277  000086  B0F2               	btfsc	4082,0,c	;volatile
  4278                           
  4279                           ;INT.c: 98:         RBIF = 0;
  4280  000088  90F2               	bcf	4082,0,c	;volatile
  4281                           
  4282                           ;INT.c: 102:     if(TMR0IF){
  4283                           
  4284                           ;INT.c: 99:     }
  4285  00008A  A4F2               	btfss	4082,2,c	;volatile
  4286  00008C  D014               	goto	i2l1965
  4287                           
  4288                           ;INT.c: 103:         callback_TMR0();
  4289  00008E  D801               	call	i2u90_48
  4290  000090  D00C               	goto	i2u90_49
  4291  000092                     i2u90_48:
  4292  000092  FFFF               	dw	65535	; assembler added errata NOP
  4293  000094  0005               	push	
  4294  000096  6EFA               	movwf	pclath,c
  4295  000098  501F               	movf	_callback_TMR0,w,c
  4296  00009A  6EFD               	movwf	tosl,c
  4297  00009C  5020               	movf	_callback_TMR0+1,w,c
  4298  00009E  6EFE               	movwf	tosh,c
  4299  0000A0  50F8               	movf	tblptru,w,c
  4300  0000A2  6EFF               	movwf	tosu,c
  4301  0000A4  50FA               	movf	pclath,w,c
  4302  0000A6  0012               	return		;indir
  4303  0000A8  FFFF               	dw	65535	; errata NOP
  4304  0000AA                     i2u90_49:
  4305  0000AA  FFFF               	dw	65535	; assembler added errata NOP
  4306                           
  4307                           ;INT.c: 104:         TMR0L = initial_tmr0;
  4308  0000AC  C017  FFD6         	movff	_initial_tmr0,4054	;volatile
  4309                           
  4310                           ;INT.c: 105:         TMR0H = (initial_tmr0>>8);
  4311  0000B0  5018               	movf	_initial_tmr0+1,w,c
  4312  0000B2  6ED7               	movwf	4055,c	;volatile
  4313                           
  4314                           ;INT.c: 106:         TMR0IF = 0;
  4315  0000B4  94F2               	bcf	4082,2,c	;volatile
  4316  0000B6                     i2l1965:
  4317  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  4318                           
  4319                           ;INT.c: 110:     if(TMR1IF){
  4320  0000B8  A09E               	btfss	3998,0,c	;volatile
  4321  0000BA  D014               	goto	i2l1975
  4322                           
  4323                           ;INT.c: 111:         callback_TMR1();
  4324  0000BC  D801               	call	i2u92_48
  4325  0000BE  D00C               	goto	i2u92_49
  4326  0000C0                     i2u92_48:
  4327  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  4328  0000C2  0005               	push	
  4329  0000C4  6EFA               	movwf	pclath,c
  4330  0000C6  501D               	movf	_callback_TMR1,w,c
  4331  0000C8  6EFD               	movwf	tosl,c
  4332  0000CA  501E               	movf	_callback_TMR1+1,w,c
  4333  0000CC  6EFE               	movwf	tosh,c
  4334  0000CE  50F8               	movf	tblptru,w,c
  4335  0000D0  6EFF               	movwf	tosu,c
  4336  0000D2  50FA               	movf	pclath,w,c
  4337  0000D4  0012               	return		;indir
  4338  0000D6  FFFF               	dw	65535	; errata NOP
  4339  0000D8                     i2u92_49:
  4340  0000D8  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ;INT.c: 112:         TMR1L = initial_tmr1;
  4343  0000DA  C015  FFCE         	movff	_initial_tmr1,4046	;volatile
  4344                           
  4345                           ;INT.c: 113:         TMR1H = (initial_tmr1>>8);
  4346  0000DE  5016               	movf	_initial_tmr1+1,w,c
  4347  0000E0  6ECF               	movwf	4047,c	;volatile
  4348                           
  4349                           ;INT.c: 114:         TMR1IF = 0;
  4350  0000E2  909E               	bcf	3998,0,c	;volatile
  4351  0000E4                     i2l1975:
  4352  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  4353                           
  4354                           ;INT.c: 118:     if(TMR3IF){
  4355  0000E6  A2A1               	btfss	4001,1,c	;volatile
  4356  0000E8  D014               	goto	i2l1985
  4357                           
  4358                           ;INT.c: 119:         callback_TMR3();
  4359  0000EA  D801               	call	i2u94_48
  4360  0000EC  D00C               	goto	i2u94_49
  4361  0000EE                     i2u94_48:
  4362  0000EE  FFFF               	dw	65535	; assembler added errata NOP
  4363  0000F0  0005               	push	
  4364  0000F2  6EFA               	movwf	pclath,c
  4365  0000F4  501B               	movf	_callback_TMR3,w,c
  4366  0000F6  6EFD               	movwf	tosl,c
  4367  0000F8  501C               	movf	_callback_TMR3+1,w,c
  4368  0000FA  6EFE               	movwf	tosh,c
  4369  0000FC  50F8               	movf	tblptru,w,c
  4370  0000FE  6EFF               	movwf	tosu,c
  4371  000100  50FA               	movf	pclath,w,c
  4372  000102  0012               	return		;indir
  4373  000104  FFFF               	dw	65535	; errata NOP
  4374  000106                     i2u94_49:
  4375  000106  FFFF               	dw	65535	; assembler added errata NOP
  4376                           
  4377                           ;INT.c: 120:         TMR3L = initial_tmr3;
  4378  000108  C013  FFB2         	movff	_initial_tmr3,4018	;volatile
  4379                           
  4380                           ;INT.c: 121:         TMR3H = (initial_tmr3>>8);
  4381  00010C  5014               	movf	_initial_tmr3+1,w,c
  4382  00010E  6EB3               	movwf	4019,c	;volatile
  4383                           
  4384                           ;INT.c: 122:         TMR3IF = 0;
  4385  000110  92A1               	bcf	4001,1,c	;volatile
  4386  000112                     i2l1985:
  4387  000112  FFFF               	dw	65535	; assembler added errata NOP
  4388                           
  4389                           ;INT.c: 127:         callback_CCP1();
  4390  000114  B49E               	btfsc	3998,2,c	;volatile
  4391                           
  4392                           ;INT.c: 128:         CCP1IF = 0;
  4393  000116  949E               	bcf	3998,2,c	;volatile
  4394  000118  C052  FFFB         	movff	??_ISR+1,pclatu
  4395  00011C  C051  FFFA         	movff	??_ISR,pclath
  4396  000120  926B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4397  000122  0011               	retfie		f
  4398  000124  FFFF               	dw	65535	; errata NOP
  4399  000126                     __end_of_ISR:
  4400                           	opt callstack 0
  4401                           
  4402 ;; *************** function _tmr3_callback *****************
  4403 ;; Defined at:
  4404 ;;		line 153 in file "main.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4418 ;;      Params:         0       0       0       0       0       0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0
  4421 ;;      Totals:         0       0       0       0       0       0       0
  4422 ;;Total ram usage:        0 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;;		_ISR
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text32
  4433  000ED8                     __ptext32:
  4434                           	opt callstack 0
  4435  000ED8                     _tmr3_callback:
  4436                           	opt callstack 0
  4437  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  4438                           
  4439                           ;main.c: 154:     x3++;
  4440                           
  4441                           ;incstack = 0
  4442  000EDA  0E01               	movlw	1
  4443  000EDC  2601               	addwf	_x3,f,c	;volatile
  4444  000EDE  0E00               	movlw	0
  4445  000EE0  2202               	addwfc	_x3+1,f,c	;volatile
  4446  000EE2  2203               	addwfc	_x3+2,f,c	;volatile
  4447  000EE4  2204               	addwfc	_x3+3,f,c	;volatile
  4448  000EE6  0012               	return		;funcret
  4449  000EE8  FFFF               	dw	65535	; errata NOP
  4450  000EEA                     __end_of_tmr3_callback:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _tmr1_callback *****************
  4454 ;; Defined at:
  4455 ;;		line 149 in file "main.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4469 ;;      Params:         0       0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;;		_ISR
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text33
  4484  000EEA                     __ptext33:
  4485                           	opt callstack 0
  4486  000EEA                     _tmr1_callback:
  4487                           	opt callstack 0
  4488  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  4489                           
  4490                           ;main.c: 150:     x2++;
  4491                           
  4492                           ;incstack = 0
  4493  000EEC  0E01               	movlw	1
  4494  000EEE  2605               	addwf	_x2,f,c	;volatile
  4495  000EF0  0E00               	movlw	0
  4496  000EF2  2206               	addwfc	_x2+1,f,c	;volatile
  4497  000EF4  2207               	addwfc	_x2+2,f,c	;volatile
  4498  000EF6  2208               	addwfc	_x2+3,f,c	;volatile
  4499  000EF8  0012               	return		;funcret
  4500  000EFA  FFFF               	dw	65535	; errata NOP
  4501  000EFC                     __end_of_tmr1_callback:
  4502                           	opt callstack 0
  4503                           
  4504 ;; *************** function _tmr0_callback *****************
  4505 ;; Defined at:
  4506 ;;		line 145 in file "main.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4520 ;;      Params:         0       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;;		_ISR
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text34
  4535  000EFC                     __ptext34:
  4536                           	opt callstack 0
  4537  000EFC                     _tmr0_callback:
  4538                           	opt callstack 0
  4539  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  4540                           
  4541                           ;main.c: 146:     x1++;
  4542                           
  4543                           ;incstack = 0
  4544  000EFE  0E01               	movlw	1
  4545  000F00  2609               	addwf	_x1,f,c	;volatile
  4546  000F02  0E00               	movlw	0
  4547  000F04  220A               	addwfc	_x1+1,f,c	;volatile
  4548  000F06  220B               	addwfc	_x1+2,f,c	;volatile
  4549  000F08  220C               	addwfc	_x1+3,f,c	;volatile
  4550  000F0A  0012               	return		;funcret
  4551  000F0C  FFFF               	dw	65535	; errata NOP
  4552  000F0E                     __end_of_tmr0_callback:
  4553                           	opt callstack 0
  4554                           
  4555 ;; *************** function _int2_callback *****************
  4556 ;; Defined at:
  4557 ;;		line 138 in file "main.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4571 ;;      Params:         0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    1
  4578 ;; This function calls:
  4579 ;;		_TMR3_vdReset
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;;		_ISR
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text35
  4587  000E5A                     __ptext35:
  4588                           	opt callstack 0
  4589  000E5A                     _int2_callback:
  4590                           	opt callstack 0
  4591  000E5A  FFFF               	dw	65535	; assembler added errata NOP
  4592                           
  4593                           ;main.c: 139:     if(!status3){
  4594                           
  4595                           ;incstack = 0
  4596  000E5C  5029               	movf	_status3,w,c	;volatile
  4597  000E5E  A4D8               	btfss	status,2,c
  4598  000E60  D004               	goto	i2l123
  4599                           
  4600                           ;main.c: 140:         status3 = 1;
  4601  000E62  0E01               	movlw	1
  4602  000E64  6E29               	movwf	_status3,c	;volatile
  4603                           
  4604                           ;main.c: 141:         TMR3_vdReset();
  4605  000E66  EC87  F007         	call	_TMR3_vdReset	;wreg free
  4606  000E6A                     i2l123:
  4607  000E6A  FFFF               	dw	65535	; assembler added errata NOP
  4608  000E6C  0012               	return		;funcret
  4609  000E6E  FFFF               	dw	65535	; errata NOP
  4610  000E70                     __end_of_int2_callback:
  4611                           	opt callstack 0
  4612                           
  4613 ;; *************** function _TMR3_vdReset *****************
  4614 ;; Defined at:
  4615 ;;		line 52 in file "TMR3.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4629 ;;      Params:         0       0       0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_int2_callback
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text36
  4643  000F0E                     __ptext36:
  4644                           	opt callstack 0
  4645  000F0E                     _TMR3_vdReset:
  4646                           	opt callstack 0
  4647  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  4648                           
  4649                           ;TMR3.c: 53:     T3CONbits.TMR3ON = 0;
  4650                           
  4651                           ;incstack = 0
  4652  000F10  90B1               	bcf	4017,0,c	;volatile
  4653                           
  4654                           ;TMR3.c: 54:     TMR3L = initial;
  4655  000F12  C00D  FFB2         	movff	TMR3@initial,4018	;volatile
  4656                           
  4657                           ;TMR3.c: 55:     TMR3H = (initial>>8);
  4658  000F16  500E               	movf	TMR3@initial+1,w,c
  4659  000F18  6EB3               	movwf	4019,c	;volatile
  4660                           
  4661                           ;TMR3.c: 56:     T3CONbits.TMR3ON = 1;
  4662  000F1A  80B1               	bsf	4017,0,c	;volatile
  4663  000F1C  0012               	return		;funcret
  4664  000F1E  FFFF               	dw	65535	; errata NOP
  4665  000F20                     __end_of_TMR3_vdReset:
  4666                           	opt callstack 0
  4667                           
  4668 ;; *************** function _int1_callback *****************
  4669 ;; Defined at:
  4670 ;;		line 131 in file "main.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         0       0       0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0
  4687 ;;      Totals:         0       0       0       0       0       0       0
  4688 ;;Total ram usage:        0 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    1
  4691 ;; This function calls:
  4692 ;;		_TMR1_vdReset
  4693 ;; This function is called by:
  4694 ;;		_main
  4695 ;;		_ISR
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text37
  4700  000E70                     __ptext37:
  4701                           	opt callstack 0
  4702  000E70                     _int1_callback:
  4703                           	opt callstack 0
  4704  000E70  FFFF               	dw	65535	; assembler added errata NOP
  4705                           
  4706                           ;main.c: 132:     if(!status2){
  4707                           
  4708                           ;incstack = 0
  4709  000E72  502A               	movf	_status2,w,c	;volatile
  4710  000E74  A4D8               	btfss	status,2,c
  4711  000E76  D004               	goto	i2l119
  4712                           
  4713                           ;main.c: 133:         status2 = 1;
  4714  000E78  0E01               	movlw	1
  4715  000E7A  6E2A               	movwf	_status2,c	;volatile
  4716                           
  4717                           ;main.c: 134:         TMR1_vdReset();
  4718  000E7C  EC90  F007         	call	_TMR1_vdReset	;wreg free
  4719  000E80                     i2l119:
  4720  000E80  FFFF               	dw	65535	; assembler added errata NOP
  4721  000E82  0012               	return		;funcret
  4722  000E84  FFFF               	dw	65535	; errata NOP
  4723  000E86                     __end_of_int1_callback:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _TMR1_vdReset *****************
  4727 ;; Defined at:
  4728 ;;		line 52 in file "TMR1.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4742 ;;      Params:         0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_int1_callback
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text38
  4756  000F20                     __ptext38:
  4757                           	opt callstack 0
  4758  000F20                     _TMR1_vdReset:
  4759                           	opt callstack 0
  4760  000F20  FFFF               	dw	65535	; assembler added errata NOP
  4761                           
  4762                           ;TMR1.c: 53:     T1CONbits.TMR1ON = 0;
  4763                           
  4764                           ;incstack = 0
  4765  000F22  90CD               	bcf	4045,0,c	;volatile
  4766                           
  4767                           ;TMR1.c: 54:     TMR1L = initial;
  4768  000F24  C00F  FFCE         	movff	TMR1@initial,4046	;volatile
  4769                           
  4770                           ;TMR1.c: 55:     TMR1H = (initial>>8);
  4771  000F28  5010               	movf	TMR1@initial+1,w,c
  4772  000F2A  6ECF               	movwf	4047,c	;volatile
  4773                           
  4774                           ;TMR1.c: 56:     T1CONbits.TMR1ON = 1;
  4775  000F2C  80CD               	bsf	4045,0,c	;volatile
  4776  000F2E  0012               	return		;funcret
  4777  000F30  FFFF               	dw	65535	; errata NOP
  4778  000F32                     __end_of_TMR1_vdReset:
  4779                           	opt callstack 0
  4780                           
  4781 ;; *************** function _int0_callback *****************
  4782 ;; Defined at:
  4783 ;;		line 123 in file "main.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4797 ;;      Params:         0       0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    1
  4804 ;; This function calls:
  4805 ;;		_TMR0_vdReset
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;;		_ISR
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text39
  4813  000E86                     __ptext39:
  4814                           	opt callstack 0
  4815  000E86                     _int0_callback:
  4816                           	opt callstack 0
  4817  000E86  FFFF               	dw	65535	; assembler added errata NOP
  4818                           
  4819                           ;main.c: 124:     if(!status1){
  4820                           
  4821                           ;incstack = 0
  4822  000E88  502B               	movf	_status1,w,c	;volatile
  4823  000E8A  A4D8               	btfss	status,2,c
  4824  000E8C  D004               	goto	i2l115
  4825                           
  4826                           ;main.c: 125:         status1 = 1;
  4827  000E8E  0E01               	movlw	1
  4828  000E90  6E2B               	movwf	_status1,c	;volatile
  4829                           
  4830                           ;main.c: 126:         TMR0_vdReset();
  4831  000E92  EC59  F007         	call	_TMR0_vdReset	;wreg free
  4832  000E96                     i2l115:
  4833  000E96  FFFF               	dw	65535	; assembler added errata NOP
  4834  000E98  0012               	return		;funcret
  4835  000E9A  FFFF               	dw	65535	; errata NOP
  4836  000E9C                     __end_of_int0_callback:
  4837                           	opt callstack 0
  4838                           
  4839 ;; *************** function _TMR0_vdReset *****************
  4840 ;; Defined at:
  4841 ;;		line 59 in file "TMR0.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         0       0       0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_int0_callback
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text40
  4869  000EB2                     __ptext40:
  4870                           	opt callstack 0
  4871  000EB2                     _TMR0_vdReset:
  4872                           	opt callstack 0
  4873  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  4874                           
  4875                           ;TMR0.c: 60:     T0CONbits.TMR0ON = 0;
  4876                           
  4877                           ;incstack = 0
  4878  000EB4  9ED5               	bcf	4053,7,c	;volatile
  4879                           
  4880                           ;TMR0.c: 61:     TMR0L = initial;
  4881  000EB6  C011  FFD6         	movff	_initial,4054	;volatile
  4882                           
  4883                           ;TMR0.c: 62:     TMR0H = (initial>>8);
  4884  000EBA  5012               	movf	_initial+1,w,c
  4885  000EBC  6ED7               	movwf	4055,c	;volatile
  4886                           
  4887                           ;TMR0.c: 63:     T0CONbits.TMR0ON = 1;
  4888  000EBE  8ED5               	bsf	4053,7,c	;volatile
  4889  000EC0  0012               	return		;funcret
  4890  000EC2  FFFF               	dw	65535	; errata NOP
  4891  000EC4                     __end_of_TMR0_vdReset:
  4892                           	opt callstack 0
  4893  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  4894                           
  4895                           	psect	text41
  4896  000000                     __ptext41:
  4897                           	opt callstack 0
  4898                           
  4899                           	psect	rparam
  4900  0000                     
  4901                           	psect	temp
  4902  00006B                     btemp:
  4903                           	opt callstack 0
  4904  00006B                     	ds	1
  4905  0000                     int$flags	set	btemp
  4906  0000                     wtemp8	set	btemp+1
  4907  0000                     ttemp5	set	btemp+1
  4908  0000                     ttemp6	set	btemp+4
  4909  0000                     ttemp7	set	btemp+8
  4910                           tosu	equ	0xFFF
  4911                           tosh	equ	0xFFE
  4912                           tosl	equ	0xFFD
  4913                           stkptr	equ	0xFFC
  4914                           pclatu	equ	0xFFB
  4915                           pclath	equ	0xFFA
  4916                           pcl	equ	0xFF9
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           indf0	equ	0xFEF
  4924                           postinc0	equ	0xFEE
  4925                           postdec0	equ	0xFED
  4926                           preinc0	equ	0xFEC
  4927                           plusw0	equ	0xFEB
  4928                           fsr0h	equ	0xFEA
  4929                           fsr0l	equ	0xFE9
  4930                           wreg	equ	0xFE8
  4931                           indf1	equ	0xFE7
  4932                           postinc1	equ	0xFE6
  4933                           postdec1	equ	0xFE5
  4934                           preinc1	equ	0xFE4
  4935                           plusw1	equ	0xFE3
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           bsr	equ	0xFE0
  4939                           indf2	equ	0xFDF
  4940                           postinc2	equ	0xFDE
  4941                           postdec2	equ	0xFDD
  4942                           preinc2	equ	0xFDC
  4943                           plusw2	equ	0xFDB
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26     106
    BANK0           128     19      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    TMR3_vdSetTMR3Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr3_callback(), 

    TMR1_vdSetTMR1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_callback(), 

    TMR0_vdSetTMR0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_callback(), 

    LED_vdSetStatus@led	PTR struct . size(2) Largest target is 7
		 -> LED3(COMRAM[7]), LED2(COMRAM[7]), LED1(COMRAM[7]), 

    callback_CCP1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetTMR3Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr3_callback(), 

    callback_TMR3	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr3_callback(), 

    INT_vdSetTMR1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_callback(), 

    callback_TMR1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr1_callback(), 

    INT_vdSetTMR0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_callback(), 

    callback_TMR0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr0_callback(), 

    callback_INTonChange	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetINT2Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int2_callback(), 

    callback_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int2_callback(), 

    INT_vdSetINT1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int1_callback(), 

    callback_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int1_callback(), 

    INT_vdSetINT0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int0_callback(), 

    callback_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int0_callback(), 

    DIO_vdInit@dev	PTR struct . size(2) Largest target is 7
		 -> BTN3(BANK0[7]), BTN2(BANK0[7]), BTN1(BANK0[7]), LED3(COMRAM[7]), 
		 -> LED2(COMRAM[7]), LED1(COMRAM[7]), 

    p_PORTDdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTDdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    _main->_UART_vdInit
    ___lwdiv->___wmul
    _UART_vdSendu8asASCI->___awdiv
    _UART_vdInit->___aldiv
    _TMR3_vdSetTMR3Callback->_INT_vdSetTMR3Callback
    _TMR1_vdSetTMR1Callback->_INT_vdSetTMR1Callback
    _TMR0_vdSetTMR0Callback->_INT_vdSetTMR0Callback
    _LED_vdSetStatus->_DIO_vdWritePin
    _DIO_vdInit->_DIO_vdWriteDirPin

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    9851
                                             18 COMRAM     8     8      0
                                              0 BANK0     19    19      0
                    _ADC_u16getValue
                         _ADC_vdInit
                         _DIO_vdInit
              _INT_vdSetINT0Callback
              _INT_vdSetINT1Callback
              _INT_vdSetINT2Callback
                         _INT_vdinit
                    _LED_vdSetStatus
                        _TMR0_vdInit
             _TMR0_vdSetTMR0Callback
                        _TMR0_vdStop
                        _TMR1_vdInit
             _TMR1_vdSetTMR1Callback
                        _TMR1_vdStop
                        _TMR3_vdInit
             _TMR3_vdSetTMR3Callback
                        _TMR3_vdStop
                        _UART_vdInit
                    _UART_vdSendByte
                _UART_vdSendu8asASCI
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     412
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     601
                                              8 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu8asASCI                                  6     6      0    1947
                                             10 COMRAM     6     6      0
                    _UART_vdSendByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_vdSendByte                                      1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_vdInit                                          2     0      2     746
                                             16 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdSetTMR3Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR3Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR3Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdSetTMR1Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR1Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR1Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdSetTMR0Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR0Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR0Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LED_vdSetStatus                                      3     0      3    1576
                                              7 COMRAM     3     0      3
                     _DIO_vdWritePin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWritePin                                       5     3      2     943
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT2Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT1Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT0Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DIO_vdInit                                           2     0      2    1216
                                              7 COMRAM     2     0      2
                  _DIO_vdWriteDirPin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWriteDirPin                                    5     3      2     583
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_vdInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_u16getValue                                      7     5      2      96
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                      _int0_callback *
                      _int1_callback *
                      _int2_callback *
                      _tmr0_callback *
                      _tmr1_callback *
                      _tmr3_callback *
 ---------------------------------------------------------------------------------
 (4) _tmr3_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _tmr1_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _tmr0_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int2_callback                                        0     0      0       0
                       _TMR3_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR3_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int1_callback                                        0     0      0       0
                       _TMR1_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR1_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int0_callback                                        0     0      0       0
                       _TMR0_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR0_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_u16getValue
   _ADC_vdInit
   _DIO_vdInit
     _DIO_vdWriteDirPin
   _INT_vdSetINT0Callback
   _INT_vdSetINT1Callback
   _INT_vdSetINT2Callback
   _INT_vdinit
   _LED_vdSetStatus
     _DIO_vdWritePin
   _TMR0_vdInit
   _TMR0_vdSetTMR0Callback
     _INT_vdSetTMR0Callback
   _TMR0_vdStop
   _TMR1_vdInit
   _TMR1_vdSetTMR1Callback
     _INT_vdSetTMR1Callback
   _TMR1_vdStop
   _TMR3_vdInit
   _TMR3_vdSetTMR3Callback
     _INT_vdSetTMR3Callback
   _TMR3_vdStop
   _UART_vdInit
     ___aldiv
   _UART_vdSendByte
   _UART_vdSendu8asASCI
     _UART_vdSendByte
     ___awdiv
     ___awmod
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _ISR (ROOT)
   Absolute function(Fake) *
   _int0_callback *
     _TMR0_vdReset
   _int1_callback *
     _TMR1_vdReset
   _int2_callback *
     _TMR3_vdReset
   _tmr0_callback *
   _tmr1_callback *
   _tmr3_callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     13      30       5       37.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      15        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Dec 30 09:19:59 2019

                                            _DIO_vdWritePin 0460  
                                               ?_DIO_vdInit 0058  
                                        ADC_u16getValue@pin 0059  
                                              ___awdiv@sign 0058  
                                      _callback_INTonChange 0021  
                                                        _x1 0009  
                                                        _x2 0005  
                                                        _x3 0001  
                                               __CFG_BOR$ON 000000  
                                         _DIO_vdWriteDirPin 05B6  
                                       ___wmul@multiplicand 0055  
                                              __CFG_CP0$OFF 000000  
                                              __CFG_CP1$OFF 000000  
                                              __CFG_CP2$OFF 000000  
                                              __CFG_CP3$OFF 000000  
                                               __CFG_OSC$XT 000000  
                                        ?_DIO_vdWriteDirPin 0053  
                                       ADC_u16getValue@data 0057  
                                                       l501 0A42  
                                                       l247 05B0  
                                                       l168 0BBC  
                                                       l264 0706  
                                                       l461 081E  
                                                       l462 0848  
                                                       l463 0824  
                                                       l465 084E  
                                                       l457 07F2  
                                                       l467 0854  
                                                       l459 07F8  
                                                       l563 092C  
                                                       l496 09D0  
                                                       l497 09FA  
                                                       l498 09D6  
                                                       l594 0A64  
                                                       l595 0A8E  
                                                       l596 0A6A  
                                                       l599 0AD6  
                                              __CFG_CPB$OFF 000000  
                                              __CFG_CPD$OFF 000000  
                                                       _ISR 0008  
                                              __CFG_BORV$20 000000  
                                              ___awmod@sign 0058  
                                                       tosl 000FFD  
                                                       wreg 000FE8  
                                  TMR3_vdSetTMR3Callback@pf 0057  
                                 INT_vdSetTMR3Callback@init 0055  
                                       ??_DIO_vdWriteDirPin 0055  
                                       __size_of_ADC_vdInit 0018  
                                              __CFG_LVP$OFF 000000  
                                                      ?_ISR 0051  
                                              __CFG_WDT$OFF 000000  
                                                      l1107 0C9E  
                                                      l3023 08FE  
                                                      l3111 0398  
                                                      l3103 0324  
                                                      l3025 0912  
                                                      l3009 08A6  
                                                      l3041 0C6E  
                                                      l3051 0C92  
                                                      l3039 0C64  
                                                      l3119 040C  
                                                      l2703 051C  
                                                      l3087 022A  
                                                      l2705 053E  
                                                      l2713 0586  
                                                      l2811 09AC  
                                                      l2653 05BC  
                                                      l2709 0564  
                                                      l2671 0694  
                                                      l2663 062A  
                                                      l2911 0A08  
                                                      l2751 0768  
                                                      l2647 0ECA  
                                                      l2815 09BC  
                                                      l2807 09A0  
                                                      l2831 0B14  
                                                      l2665 064C  
                                                      l2657 05E2  
                                                      l2913 0A10  
                                                      l2753 0776  
                                                      l2745 0744  
                                                      l2675 06BA  
                                                      l2659 0604  
                                                      l2691 048C  
                                                      l2771 07D6  
                                                      l2763 07AE  
                                                      l2739 072A  
                                                      l2851 0B66  
                                                      l2843 0B4A  
                                                      l2835 0B24  
                                                      l2827 0B06  
                                                      l2669 0672  
                                                      l2693 04AE  
                                                      l2917 0A24  
                                                      l2909 09DC  
                                                      l2941 0A9C  
                                                      l2837 0B2E  
                                                      l2679 06DC  
                                                      l2687 0466  
                                                      l2943 0AA4  
                                                      l2767 07BE  
                                                      l2783 0948  
                                                      l2847 0B56  
                                                      l2697 04D4  
                                                      l2873 082A  
                                                      l2699 04F6  
                                                      l2947 0AB8  
                                                      l2939 0A70  
                                                      l2795 0972  
                                                      l2877 085A  
                                                      l2869 07FE  
                                                      l2797 097C  
                                                      l2789 095A  
                                                      l2879 0878  
                                                      _ADIF 007CF6  
                                                      _BTN1 008E  
                                                      _LED1 004A  
                                                      _BRGH 007D62  
                                                      _BTN2 0087  
                                                      _LED2 0043  
                                                      _BTN3 0080  
                                                      _LED3 003C  
                                                      u2100 0B34  
                                                      u2040 0982  
                                                      u2210 0C74  
                                                      u2300 0404  
                                                      u2310 0408  
                                                      u2135 0A04  
                                                      u2136 0A06  
                                                      u2240 031C  
                                                      u2145 0A98  
                                                      u2154 0B9E  
                                                      u2146 0A9A  
                                                      u2250 0320  
                                                      u2155 0B98  
                                                      u2270 0390  
                                                      u2280 0394  
                                                      u1724 05D6  
                                                      u1725 05D0  
                                                      u1814 06AE  
                                                      u1734 05F6  
                                                      u1815 06A8  
                                                      u1735 05F0  
                                                      u1824 06CE  
                                                      u1904 0510  
                                                      u1825 06C8  
                                                      u1905 050A  
                                                      u1754 061E  
                                                      u1914 0530  
                                                      u1755 0618  
                                                      u1915 052A  
                                                      u2387 0452  
                                                      u1764 063E  
                                                      u1844 0480  
                                                      u2397 0BAE  
                                                      u1765 0638  
                                                      u1845 047A  
                                                      u1934 0558  
                                                      u1854 04A0  
                                                      u1935 0552  
                                                      u1855 049A  
                                                      u1784 0666  
                                                      u1944 0578  
                                                      u1785 0660  
                                                      u1945 0572  
                                                      u1794 0686  
                                                      u1874 04C8  
                                                      u1795 0680  
                                                      u1875 04C2  
                                                      _PEIE 007F96  
                                                      u1884 04E8  
                                                      u1980 077C  
                                                      u1885 04E2  
                                                      _RBIF 007F90  
                                                      _TXIF 007CF4  
                                               main@input_T 009D  
                                              __CFG_STVR$ON 000000  
                                               main@x_max16 009F  
                               __end_of_UART_vdSendu8asASCI 0932  
                                                      _main 012A  
                                                      fsr2h 000FDA  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      btemp 006B  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0126  
                                    __end_of_DIO_vdWritePin 05B6  
                                              ___param_bank 000000  
                                 __end_of_DIO_vdWriteDirPin 070C  
                                                     ??_ISR 0051  
                                             __CFG_OSCS$OFF 000000  
                                           ??_int0_callback 0051  
                                               ?_INT_vdinit 0051  
                                           __end_of___aldiv 07EC  
                                           _ADC_u16getValue 0B74  
                                                     ?_main 0051  
                                           __end_of___awdiv 09CA  
                                     _INT_vdSetTMR0Callback 0E44  
                                           __end_of___awmod 0B74  
                                           ___awdiv@divisor 0055  
                                           __end_of___lwdiv 0CAC  
                                                     i2l115 0E96  
                                                     i2l123 0E6A  
                                                     i2l119 0E80  
                                           ___awdiv@counter 0057  
                                     _INT_vdSetTMR1Callback 0E2E  
                                           ??_int1_callback 0051  
                                                     _TMR0H 000FD7  
                                                     _TMR1H 000FCF  
                                                     _TMR0L 000FD6  
                                                     _TMR1L 000FCE  
                                                     _TMR3H 000FB3  
                                                     _TMR3L 000FB2  
                                                     _SPBRG 000FAF  
                                                     _TRISA 000F92  
                                          ?_LED_vdSetStatus 0058  
                                                     _TXREG 000FAD  
                                             __CFG_PWRT$OFF 000000  
                                             __CFG_WRT0$OFF 000000  
                                             __CFG_WRT1$OFF 000000  
                                             __CFG_WRT2$OFF 000000  
                                             __CFG_WRT3$OFF 000000  
                                            __CFG_EBTR0$OFF 000000  
                                            __CFG_EBTR1$OFF 000000  
                                            __CFG_EBTR2$OFF 000000  
                                            __CFG_EBTR3$OFF 000000  
                                     _INT_vdSetTMR3Callback 0E18  
                                           ??_int2_callback 0051  
                                     __end_of_tmr0_callback 0F0E  
                                           _UART_vdSendByte 0EC6  
                                             __CFG_WRTB$OFF 000000  
                                             __CFG_WRTC$OFF 000000  
                                             __CFG_WRTD$OFF 000000  
                                            __CFG_EBTRB$OFF 000000  
                                     __end_of_tmr1_callback 0EFC  
                                                     main@T 00A7  
                                       __size_of_DIO_vdInit 0034  
                                                     pclath 000FFA  
                                                     tablat 000FF5  
                                        LED_vdSetStatus@led 0058  
                                                     ttemp5 006C  
                                                     ttemp6 006F  
                                                     ttemp7 0073  
                                                     status 000FD8  
                                                     wtemp8 006C  
                                      UART_vdSendu8asASCI@i 0060  
                                          _p_PORTAdirection 0038  
                                     __end_of_tmr3_callback 0EEA  
                                           ?_DIO_vdWritePin 0053  
                                   ??_INT_vdSetINT0Callback 0055  
                                          _p_PORTBdirection 0034  
                                           __initialization 0BE6  
                                   ??_INT_vdSetINT1Callback 0055  
                                              __end_of_main 0460  
                                   ??_INT_vdSetINT2Callback 0055  
                                          _p_PORTCdirection 0030  
                                          _p_PORTDdirection 002C  
                                                    ??_main 0063  
                                             __activetblptr 000002  
                                      TMR1_vdInit@prescaler 0054  
                                           __CFG_CCP2MUX$ON 000000  
                                                    _CCP1IF 007CF2  
                                                    _ADRESH 000FC4  
                                                    _ADRESL 000FC3  
                                          ___awdiv@dividend 0053  
                                                    _INT0IF 007F91  
                                                    _INT1IF 007F80  
                                                    _INT2IF 007F81  
                                                    i2l1941 0038  
                                                    i2l1953 0084  
                                                    i2l1947 005E  
                                                    i2l1965 00B6  
                                                    i2l1975 00E4  
                                                    i2l1985 0112  
                                                    _TMR0IF 007F92  
                                                    _TMR1IF 007CF0  
                                            __CFG_WDTPS$128 000000  
                                                    _TMR3IF 007D09  
                                                    _TRISC6 007CA6  
                                       __size_of_INT_vdinit 0026  
                                   ?_TMR1_vdSetTMR1Callback 0057  
                                              ??_ADC_vdInit 0053  
                                   __end_of_ADC_u16getValue 0BE6  
                                __size_of_DIO_vdWriteDirPin 0156  
                                                 ??___aldiv 005B  
                                                    ___wmul 0D14  
                                                 ??___awdiv 0057  
                                                 ??___awmod 0057  
                                              ?_UART_vdInit 0061  
                                                 ??___lwdiv 005D  
                                                    clear_0 0C2C  
                                                    clear_1 0C38  
                                    ?_INT_vdSetTMR0Callback 0053  
                                          ___awdiv@quotient 0059  
                                           ___awmod@divisor 0055  
                                              ?_TMR0_vdInit 0053  
                                   __end_of_UART_vdSendByte 0ED8  
                                           ___awmod@counter 0057  
                                    ?_INT_vdSetTMR1Callback 0053  
                                              ?_TMR0_vdStop 0051  
                                              ?_TMR1_vdInit 0053  
                                              ?_TMR1_vdStop 0051  
                                              ?_TMR3_vdInit 0053  
                                              ?_TMR3_vdStop 0051  
                                              __pdataCOMRAM 002C  
                                    ?_INT_vdSetTMR3Callback 0053  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                             DIO_vdInit@dev 0058  
                                        __end_of_ADC_vdInit 0E18  
                                                __accesstop 0080  
                                   __end_of__initialization 0C3E  
                            __end_of_TMR1_vdSetTMR1Callback 0DE6  
                                           UART_vdInit@baud 0061  
                                             ___rparam_used 000001  
                                   INT_vdSetTMR0Callback@pf 0053  
                                            __pcstackCOMRAM 0051  
                                              ??_DIO_vdInit 005A  
                                              __pidataBANK0 0E9C  
                                   INT_vdSetTMR1Callback@pf 0053  
                                                __pbssBANK0 00A8  
                                        __end_of_DIO_vdInit 0D14  
                                          ?_ADC_u16getValue 0053  
                                                   ?___wmul 0053  
                                              ??_INT_vdinit 0053  
                                          ?_UART_vdSendByte 0051  
                                         DIO_vdWritePin@pin 0054  
                                   INT_vdSetTMR3Callback@pf 0053  
                                  ??_TMR0_vdSetTMR0Callback 0059  
                                                   i2u90_48 0092  
                                                   i2u90_49 00AA  
                                                   i2u83_48 001C  
                                                   i2u83_49 0034  
                                                   i2u92_48 00C0  
                                                   i2u92_49 00D8  
                                                   i2u85_48 0042  
                                                   i2u85_49 005A  
                                                   i2u94_48 00EE  
                                                   i2u94_49 0106  
                                                   i2u87_48 0068  
                                                   i2u87_49 0080  
                                  ??_TMR3_vdSetTMR3Callback 0059  
                                          ??_DIO_vdWritePin 0055  
                                        __end_of_INT_vdinit 0D8C  
                                                   __Hparam 0000  
                                                   __Lparam 0000  
                              __size_of_UART_vdSendu8asASCI 0098  
                            __size_of_INT_vdSetINT0Callback 000E  
                                                   ___aldiv 070C  
                             __end_of_INT_vdSetINT0Callback 0F5C  
                                                   ___awdiv 0932  
                                                   ___awmod 0AF0  
                                           __size_of___wmul 002A  
                            __size_of_INT_vdSetINT1Callback 000E  
                                                   ___lwdiv 0C4C  
                                               TMR1@initial 000F  
                             __end_of_INT_vdSetINT1Callback 0F4E  
                            __size_of_INT_vdSetINT2Callback 000E  
                             __end_of_INT_vdSetINT2Callback 0F40  
                                                   __pcinit 0BE6  
                                                   __ramtop 0600  
                                               TMR3@initial 000D  
                                      __size_of_UART_vdInit 0034  
                                                   __ptext0 012A  
                                                   __ptext1 0D14  
                                                   __ptext2 0C4C  
                                                   __ptext3 089A  
                                                   __ptext4 0AF0  
                                                   __ptext5 0932  
                                                   __ptext6 0EC6  
                                                   __ptext7 0CAC  
                                                   __ptext8 070C  
                                                   __ptext9 0F5C  
                                             _callback_CCP1 0019  
                                             _callback_INT0 0027  
                                             _callback_INT1 0025  
                                             _callback_INT2 0023  
                                                 _T0CONbits 000FD5  
                                             _callback_TMR0 001F  
                                             _callback_TMR1 001D  
                                             _callback_TMR3 001B  
                                              __size_of_ISR 011E  
                                     __end_of_int0_callback 0E9C  
                                                 _T1CONbits 000FCD  
                                                   _initial 0011  
                                      __size_of_TMR0_vdInit 00AE  
                                                 _T3CONbits 000FB1  
                                          ___awmod@dividend 0053  
                                      __size_of_TMR0_vdStop 0008  
                                      __size_of_TMR1_vdInit 0094  
                                          ___aldiv@dividend 0053  
                                      __size_of_TMR1_vdStop 0008  
                                     __end_of_int1_callback 0E86  
                                      __size_of_TMR3_vdInit 0092  
                                      __size_of_TMR3_vdStop 0008  
                                             ?_TMR0_vdReset 0051  
                                                   _status1 002B  
                                                   _status2 002A  
                                                   _status3 0029  
                                     __end_of_int2_callback 0E70  
                                             ?_TMR1_vdReset 0051  
                                      end_of_initialization 0C3E  
                                  __size_of_LED_vdSetStatus 0028  
                                             ?_TMR3_vdReset 0051  
                                             __Lmediumconst 0000  
                                                 _BTNstatus 00A8  
                                                 _RCSTAbits 000FAB  
                                          ___aldiv@quotient 005D  
                                   ??_INT_vdSetTMR0Callback 0057  
                                                   postdec1 000FE5  
                                    __size_of_tmr0_callback 0012  
                                                   postinc0 000FEE  
                                   ??_INT_vdSetTMR1Callback 0057  
                                    __size_of_tmr1_callback 0012  
                                   ??_INT_vdSetTMR3Callback 0057  
                                TMR1_vdInit@prescaler_value 0055  
                                      TMR3_vdInit@prescaler 0054  
                                    __size_of_tmr3_callback 0012  
                                            ??_TMR0_vdReset 0051  
                                       UART_vdSendByte@data 0053  
                           __size_of_TMR0_vdSetTMR0Callback 001A  
                                            ??_TMR1_vdReset 0051  
                                            ??_TMR3_vdReset 0051  
                           __size_of_TMR3_vdSetTMR3Callback 001A  
                                                 _TXSTAbits 000FAC  
                                                main@x_max8 0095  
                                           TMR0_vdInit@bits 0053  
                                           TMR0_vdInit@init 0056  
                                           TMR0_vdInit@mode 005A  
                                            __end_of___wmul 0D3E  
                                     DIO_vdWriteDirPin@data 0057  
                                             __pidataCOMRAM 0D8C  
                                     DIO_vdWriteDirPin@port 0053  
                                   INT_vdSetINT0Callback@pf 0053  
                                       start_initialization 0BE6  
                                               __end_of_ISR 0126  
                                             _tmr0_callback 0EFC  
                                             _tmr1_callback 0EEA  
                                   INT_vdSetINT1Callback@pf 0053  
                                           TMR1_vdInit@bits 0053  
                                             _tmr3_callback 0ED8  
                                               _p_PORTAdata 003A  
                                               _p_PORTBdata 0036  
                                               _p_PORTCdata 0032  
                                           TMR1_vdInit@init 0056  
                                               _p_PORTDdata 002E  
                                           TMR1_vdInit@mode 005A  
                                         ??_LED_vdSetStatus 005B  
                                    _TMR0_vdSetTMR0Callback 0DE6  
                                                  ??___wmul 0057  
                                               __pdataBANK0 0080  
                                    _TMR3_vdSetTMR3Callback 0DB2  
                                   INT_vdSetINT2Callback@pf 0053  
                                               __pbssCOMRAM 0001  
                                 INT_vdSetTMR0Callback@init 0055  
                                  TMR1_vdSetTMR1Callback@pf 0057  
                                             __pcstackBANK0 0095  
                                            ?_tmr0_callback 0051  
                                       _UART_vdSendu8asASCI 089A  
                                            ?_tmr1_callback 0051  
                                            ?_tmr3_callback 0051  
                                          ___lwdiv@dividend 0059  
                                              _initial_tmr0 0017  
                                              _initial_tmr1 0015  
                                              _initial_tmr3 0013  
                                      __end_of_TMR0_vdReset 0EC4  
                                                 __pintcode 0008  
                                      ?_UART_vdSendu8asASCI 0051  
                                                  ?___aldiv 0053  
                                                  ?___awdiv 0053  
                                                  ?___awmod 0053  
                                      __end_of_TMR1_vdReset 0F32  
                                                  ?___lwdiv 0059  
                                      __end_of_TMR3_vdReset 0F20  
                                  __size_of_ADC_u16getValue 0072  
                                  ??_TMR1_vdSetTMR1Callback 0059  
                                          ___lwdiv@quotient 005E  
                                  __size_of_UART_vdSendByte 0012  
                                        DIO_vdWritePin@data 0057  
                                        DIO_vdWritePin@port 0053  
                                           ___aldiv@divisor 0057  
                                           ___aldiv@counter 005B  
                                            ___wmul@product 0057  
                                                  _IPR1bits 000F9F  
                                                  _IPR2bits 000FA2  
                                                  _PIE1bits 000F9D  
                                                  _PIE2bits 000FA0  
                                           TMR3_vdInit@bits 0053  
                                           TMR3_vdInit@init 0056  
                                           TMR3_vdInit@mode 005A  
                                     ??_UART_vdSendu8asASCI 005B  
                                             ??_UART_vdInit 0063  
                            __size_of_INT_vdSetTMR0Callback 0016  
                             __end_of_INT_vdSetTMR0Callback 0E5A  
                            __size_of_INT_vdSetTMR1Callback 0016  
                                     _INT_vdSetINT0Callback 0F4E  
                                             ??_TMR0_vdInit 0058  
                             __end_of_INT_vdSetTMR1Callback 0E44  
                                             ??_TMR0_vdStop 0053  
                                             ??_TMR1_vdInit 0058  
                                                _ADCON0bits 000FC2  
                                                _ADCON1bits 000FC1  
                                             ??_TMR1_vdStop 0053  
                                     _INT_vdSetINT1Callback 0F40  
                                         ___wmul@multiplier 0053  
                                             ??_TMR3_vdInit 0058  
                            __size_of_INT_vdSetTMR3Callback 0016  
                                             ??_TMR3_vdStop 0053  
                                     _INT_vdSetINT2Callback 0F32  
                             __end_of_INT_vdSetTMR3Callback 0E2E  
                                           ??_tmr0_callback 0051  
                                 INT_vdSetTMR1Callback@init 0055  
                                           ??_tmr1_callback 0051  
                                               _INTCON1bits 000FF2  
                                               _INTCON2bits 000FF1  
                                               _INTCON3bits 000FF0  
                                      DIO_vdWriteDirPin@pin 0054  
                                                 copy_data0 0BFA  
                                                 copy_data1 0C1A  
                                           ??_tmr3_callback 0051  
                                    __size_of_int0_callback 0016  
                                                  __Hrparam 0000  
                                                  __Lrparam 0000  
                                                _ADC_vdInit 0E00  
                                    __size_of_int1_callback 0016  
                                   __size_of_DIO_vdWritePin 0156  
                                          __size_of___aldiv 00E0  
                                          __size_of___awdiv 0098  
                                          __size_of___awmod 0084  
                                    __size_of_int2_callback 0016  
                                          __size_of___lwdiv 0060  
                                TMR0_vdInit@prescaler_value 0055  
                                       __end_of_UART_vdInit 0CE0  
                                           ___lwdiv@divisor 005B  
                                       __end_of_TMR0_vdInit 089A  
                                TMR3_vdInit@prescaler_value 0055  
                                           ___lwdiv@counter 005D  
                                       __end_of_TMR0_vdStop 0F74  
                                       __end_of_TMR1_vdInit 0A5E  
                                                  __ptext10 0DB2  
                                                  __ptext11 0E18  
                                                  __ptext20 07EC  
                                                  __ptext12 0A5E  
                                                  __ptext21 0D3E  
                                                  __ptext13 0F64  
                                                  __ptext30 0B74  
                                                  __ptext22 0460  
                                                  __ptext14 0DCC  
                                                  __ptext23 0D66  
                                                  __ptext15 0E2E  
                                                  __ptext40 0EB2  
                                                  __ptext32 0ED8  
                                                  __ptext24 0F32  
                                                  __ptext16 09CA  
                                                  __ptext41 0000  
                                                  __ptext33 0EEA  
                                                  __ptext25 0F40  
                                                  __ptext17 0F6C  
                                                  __ptext34 0EFC  
                                                  __ptext26 0F4E  
                                                  __ptext18 0DE6  
                                                  __ptext35 0E5A  
                                                  __ptext27 0CE0  
                                                  __ptext19 0E44  
                                                  __ptext36 0F0E  
                                                  __ptext28 05B6  
                                                  __ptext37 0E70  
                                                  __ptext29 0E00  
                                                  __ptext38 0F20  
                                                  __ptext39 0E86  
                                       __end_of_TMR1_vdStop 0F6C  
                                       __end_of_TMR3_vdInit 0AF0  
                           __size_of_TMR1_vdSetTMR1Callback 001A  
                                         ??_ADC_u16getValue 0055  
                                       __end_of_TMR3_vdStop 0F64  
                                           _LED_vdSetStatus 0D3E  
                                             __size_of_main 0336  
                                     __size_of_TMR0_vdReset 0012  
                                   ?_TMR0_vdSetTMR0Callback 0057  
                                         ??_UART_vdSendByte 0053  
                                     __size_of_TMR1_vdReset 0012  
                                     __size_of_TMR3_vdReset 0012  
                                   ?_TMR3_vdSetTMR3Callback 0057  
                                                _DIO_vdInit 0CE0  
                                                  int$flags 006B  
                                    ?_INT_vdSetINT0Callback 0053  
                                    ?_INT_vdSetINT1Callback 0053  
                                    ?_INT_vdSetINT2Callback 0053  
                                             _int0_callback 0E86  
                                             _int1_callback 0E70  
                                              _TMR0_vdReset 0EB2  
                                              _TMR1_vdReset 0F20  
                                             _int2_callback 0E5A  
                                                  intlevel2 0F74  
                            __end_of_TMR0_vdSetTMR0Callback 0E00  
                                              _TMR3_vdReset 0F0E  
                                  TMR0_vdSetTMR0Callback@pf 0057  
                            __end_of_TMR3_vdSetTMR3Callback 0DCC  
                                               ?_ADC_vdInit 0051  
                                    _TMR1_vdSetTMR1Callback 0DCC  
                                     LED_vdSetStatus@status 005A  
                                               _UART_vdInit 0CAC  
                                                _INT_vdinit 0D66  
                                               _TMR0_vdInit 07EC  
                                               _TMR0_vdStop 0F6C  
                                               _TMR1_vdInit 09CA  
                                               _TMR1_vdStop 0F64  
                                            ?_int0_callback 0051  
                                               _TMR3_vdInit 0A5E  
                                   __end_of_LED_vdSetStatus 0D66  
                                               _TMR3_vdStop 0F5C  
                                            ?_int1_callback 0051  
                                              ___aldiv@sign 005C  
                                  UART_vdSendu8asASCI@temp2 005C  
                                            ?_int2_callback 0051  
                                   UART_vdSendu8asASCI@data 005B  
                                   UART_vdSendu8asASCI@temp 005D  
                                      TMR0_vdInit@prescaler 0054  
