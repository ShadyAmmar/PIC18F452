

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jan 02 08:47:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           ; Version 2.05
    63                           ; Generated 20/12/2018 GMT
    64                           ; 
    65                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F452 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataCOMRAM
    98  000F12                     __pidataCOMRAM:
    99                           	opt callstack 0
   100                           
   101                           ;initializer for _p_PORTDdirection
   102  000F12  95                 	db	149
   103  000F13  0F                 	db	15
   104                           
   105                           ;initializer for _p_PORTDdata
   106  000F14  83                 	db	131
   107  000F15  0F                 	db	15
   108                           
   109                           ;initializer for _p_PORTCdirection
   110  000F16  94                 	db	148
   111  000F17  0F                 	db	15
   112                           
   113                           ;initializer for _p_PORTCdata
   114  000F18  82                 	db	130
   115  000F19  0F                 	db	15
   116                           
   117                           ;initializer for _p_PORTBdirection
   118  000F1A  93                 	db	147
   119  000F1B  0F                 	db	15
   120                           
   121                           ;initializer for _p_PORTBdata
   122  000F1C  81                 	db	129
   123  000F1D  0F                 	db	15
   124                           
   125                           ;initializer for _p_PORTAdirection
   126  000F1E  92                 	db	146
   127  000F1F  0F                 	db	15
   128                           
   129                           ;initializer for _p_PORTAdata
   130  000F20  80                 	db	128
   131  000F21  0F                 	db	15
   132                           
   133                           ;initializer for _LED3
   134  000F22  44                 	db	68
   135  000F23  02                 	db	2
   136  000F24  00                 	db	0
   137  000F25  00                 	db	0
   138  000F26  00                 	db	0
   139  000F27  00                 	db	0
   140  000F28  00                 	db	0
   141                           
   142                           ;initializer for _LED2
   143  000F29  44                 	db	68
   144  000F2A  01                 	db	1
   145  000F2B  00                 	db	0
   146  000F2C  00                 	db	0
   147  000F2D  00                 	db	0
   148  000F2E  00                 	db	0
   149  000F2F  00                 	db	0
   150                           
   151                           ;initializer for _LED1
   152  000F30  44                 	db	68
   153  000F31  00                 	db	0
   154  000F32  00                 	db	0
   155  000F33  00                 	db	0
   156  000F34  00                 	db	0
   157  000F35  00                 	db	0
   158  000F36  00                 	db	0
   159                           
   160                           	psect	idataBANK0
   161  000E68                     __pidataBANK0:
   162                           	opt callstack 0
   163                           
   164                           ;initializer for _btnStop3
   165  000E68  42                 	db	66
   166  000E69  05                 	db	5
   167  000E6A  01                 	db	1
   168  000E6B  00                 	db	0
   169  000E6C  00                 	db	0
   170  000E6D  00                 	db	0
   171  000E6E  00                 	db	0
   172                           
   173                           ;initializer for _btnStop2
   174  000E6F  42                 	db	66
   175  000E70  04                 	db	4
   176  000E71  01                 	db	1
   177  000E72  00                 	db	0
   178  000E73  00                 	db	0
   179  000E74  00                 	db	0
   180  000E75  00                 	db	0
   181                           
   182                           ;initializer for _btnStop1
   183  000E76  42                 	db	66
   184  000E77  03                 	db	3
   185  000E78  01                 	db	1
   186  000E79  00                 	db	0
   187  000E7A  00                 	db	0
   188  000E7B  00                 	db	0
   189  000E7C  00                 	db	0
   190                           
   191                           ;initializer for _BTN3
   192  000E7D  42                 	db	66
   193  000E7E  02                 	db	2
   194  000E7F  01                 	db	1
   195  000E80  00                 	db	0
   196  000E81  00                 	db	0
   197  000E82  00                 	db	0
   198  000E83  00                 	db	0
   199                           
   200                           ;initializer for _BTN2
   201  000E84  42                 	db	66
   202  000E85  01                 	db	1
   203  000E86  01                 	db	1
   204  000E87  00                 	db	0
   205  000E88  00                 	db	0
   206  000E89  00                 	db	0
   207  000E8A  00                 	db	0
   208                           
   209                           ;initializer for _BTN1
   210  000E8B  42                 	db	66
   211  000E8C  00                 	db	0
   212  000E8D  01                 	db	1
   213  000E8E  00                 	db	0
   214  000E8F  00                 	db	0
   215  000E90  00                 	db	0
   216  000E91  00                 	db	0
   217                           
   218                           ;initializer for _LED4
   219  000E92  44                 	db	68
   220  000E93  03                 	db	3
   221  000E94  00                 	db	0
   222  000E95  00                 	db	0
   223  000E96  00                 	db	0
   224  000E97  00                 	db	0
   225  000E98  00                 	db	0
   226  0000                     _T3CONbits	set	4017
   227  0000                     _TXREG	set	4013
   228  0000                     _RCSTAbits	set	4011
   229  0000                     _TXSTAbits	set	4012
   230  0000                     _SPBRG	set	4015
   231  0000                     _T1CONbits	set	4045
   232  0000                     _T0CONbits	set	4053
   233  0000                     _TMR3H	set	4019
   234  0000                     _TMR3L	set	4018
   235  0000                     _TMR1H	set	4047
   236  0000                     _TMR1L	set	4046
   237  0000                     _TMR0H	set	4055
   238  0000                     _TMR0L	set	4054
   239  0000                     _IPR2bits	set	4002
   240  0000                     _PIE2bits	set	4000
   241  0000                     _IPR1bits	set	3999
   242  0000                     _PIE1bits	set	3997
   243  0000                     _INTCON2bits	set	4081
   244  0000                     _INTCON3bits	set	4080
   245  0000                     _INTCON1bits	set	4082
   246  0000                     _ADRESL	set	4035
   247  0000                     _ADRESH	set	4036
   248  0000                     _TRISA	set	3986
   249  0000                     _ADCON0bits	set	4034
   250  0000                     _ADCON1bits	set	4033
   251  0000                     _TXIF	set	31988
   252  0000                     _TRISC6	set	31910
   253  0000                     _BRGH	set	32098
   254  0000                     _CCP1IF	set	31986
   255  0000                     _TMR0IF	set	32658
   256  0000                     _RBIF	set	32656
   257  0000                     _INT2IF	set	32641
   258  0000                     _INT1IF	set	32640
   259  0000                     _INT0IF	set	32657
   260  0000                     _TMR3IF	set	32009
   261  0000                     _TMR1IF	set	31984
   262  0000                     _PEIE	set	32662
   263  0000                     _ADIF	set	31990
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  000D3A                     __pcinit:
   269                           	opt callstack 0
   270  000D3A                     start_initialization:
   271                           	opt callstack 0
   272  000D3A                     __initialization:
   273                           	opt callstack 0
   274                           
   275                           ; Initialize objects allocated to BANK0 (49 bytes)
   276                           ; load TBLPTR registers with __pidataBANK0
   277  000D3A  0E68               	movlw	low __pidataBANK0
   278  000D3C  6EF6               	movwf	tblptrl,c
   279  000D3E  0E0E               	movlw	high __pidataBANK0
   280  000D40  6EF7               	movwf	tblptrh,c
   281  000D42  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   282  000D44  6EF8               	movwf	tblptru,c
   283  000D46  EE00  F080         	lfsr	0,__pdataBANK0
   284  000D4A  EE10 F031          	lfsr	1,49
   285  000D4E                     copy_data0:
   286  000D4E  0009               	tblrd		*+
   287  000D50  CFF5 FFEE          	movff	tablat,postinc0
   288  000D54  50E5               	movf	postdec1,w,c
   289  000D56  50E1               	movf	fsr1l,w,c
   290  000D58  E1FA               	bnz	copy_data0
   291                           
   292                           ; Initialize objects allocated to COMRAM (37 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  000D5A  0E12               	movlw	low __pidataCOMRAM
   295  000D5C  6EF6               	movwf	tblptrl,c
   296  000D5E  0E0F               	movlw	high __pidataCOMRAM
   297  000D60  6EF7               	movwf	tblptrh,c
   298  000D62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  000D64  6EF8               	movwf	tblptru,c
   300  000D66  EE00  F02C         	lfsr	0,__pdataCOMRAM
   301  000D6A  EE10 F025          	lfsr	1,37
   302  000D6E                     copy_data1:
   303  000D6E  0009               	tblrd		*+
   304  000D70  CFF5 FFEE          	movff	tablat,postinc0
   305  000D74  50E5               	movf	postdec1,w,c
   306  000D76  50E1               	movf	fsr1l,w,c
   307  000D78  E1FA               	bnz	copy_data1
   308                           
   309                           ; Clear objects allocated to BANK0 (8 bytes)
   310  000D7A  EE00  F0C5         	lfsr	0,__pbssBANK0
   311  000D7E  0E08               	movlw	8
   312  000D80                     clear_0:
   313  000D80  6AEE               	clrf	postinc0,c
   314  000D82  06E8               	decf	wreg,f,c
   315  000D84  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to COMRAM (43 bytes)
   318  000D86  EE00  F001         	lfsr	0,__pbssCOMRAM
   319  000D8A  0E2B               	movlw	43
   320  000D8C                     clear_1:
   321  000D8C  6AEE               	clrf	postinc0,c
   322  000D8E  06E8               	decf	wreg,f,c
   323  000D90  E1FD               	bnz	clear_1
   324  000D92                     end_of_initialization:
   325                           	opt callstack 0
   326  000D92                     __end_of__initialization:
   327                           	opt callstack 0
   328  000D92  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  000D94  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  000D96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  000D98  6EF8               	movwf	tblptru,c
   332  000D9A  0100               	movlb	0
   333  000D9C  EF95  F000         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  000001                     __pbssCOMRAM:
   337                           	opt callstack 0
   338  000001                     _x3:
   339                           	opt callstack 0
   340  000001                     	ds	4
   341  000005                     _x2:
   342                           	opt callstack 0
   343  000005                     	ds	4
   344  000009                     _x1:
   345                           	opt callstack 0
   346  000009                     	ds	4
   347  00000D                     TMR3@initial:
   348                           	opt callstack 0
   349  00000D                     	ds	2
   350  00000F                     TMR1@initial:
   351                           	opt callstack 0
   352  00000F                     	ds	2
   353  000011                     _initial:
   354                           	opt callstack 0
   355  000011                     	ds	2
   356  000013                     _initial_tmr3:
   357                           	opt callstack 0
   358  000013                     	ds	2
   359  000015                     _initial_tmr1:
   360                           	opt callstack 0
   361  000015                     	ds	2
   362  000017                     _initial_tmr0:
   363                           	opt callstack 0
   364  000017                     	ds	2
   365  000019                     _callback_CCP1:
   366                           	opt callstack 0
   367  000019                     	ds	2
   368  00001B                     _callback_TMR3:
   369                           	opt callstack 0
   370  00001B                     	ds	2
   371  00001D                     _callback_TMR1:
   372                           	opt callstack 0
   373  00001D                     	ds	2
   374  00001F                     _callback_TMR0:
   375                           	opt callstack 0
   376  00001F                     	ds	2
   377  000021                     _callback_INTonChange:
   378                           	opt callstack 0
   379  000021                     	ds	2
   380  000023                     _callback_INT2:
   381                           	opt callstack 0
   382  000023                     	ds	2
   383  000025                     _callback_INT1:
   384                           	opt callstack 0
   385  000025                     	ds	2
   386  000027                     _callback_INT0:
   387                           	opt callstack 0
   388  000027                     	ds	2
   389  000029                     _status3:
   390                           	opt callstack 0
   391  000029                     	ds	1
   392  00002A                     _status2:
   393                           	opt callstack 0
   394  00002A                     	ds	1
   395  00002B                     _status1:
   396                           	opt callstack 0
   397  00002B                     	ds	1
   398                           
   399                           	psect	dataCOMRAM
   400  00002C                     __pdataCOMRAM:
   401                           	opt callstack 0
   402  00002C                     _p_PORTDdirection:
   403                           	opt callstack 0
   404  00002C                     	ds	2
   405  00002E                     _p_PORTDdata:
   406                           	opt callstack 0
   407  00002E                     	ds	2
   408  000030                     _p_PORTCdirection:
   409                           	opt callstack 0
   410  000030                     	ds	2
   411  000032                     _p_PORTCdata:
   412                           	opt callstack 0
   413  000032                     	ds	2
   414  000034                     _p_PORTBdirection:
   415                           	opt callstack 0
   416  000034                     	ds	2
   417  000036                     _p_PORTBdata:
   418                           	opt callstack 0
   419  000036                     	ds	2
   420  000038                     _p_PORTAdirection:
   421                           	opt callstack 0
   422  000038                     	ds	2
   423  00003A                     _p_PORTAdata:
   424                           	opt callstack 0
   425  00003A                     	ds	2
   426  00003C                     _LED3:
   427                           	opt callstack 0
   428  00003C                     	ds	7
   429  000043                     _LED2:
   430                           	opt callstack 0
   431  000043                     	ds	7
   432  00004A                     _LED1:
   433                           	opt callstack 0
   434  00004A                     	ds	7
   435                           
   436                           	psect	bssBANK0
   437  0000C5                     __pbssBANK0:
   438                           	opt callstack 0
   439  0000C5                     	ds	8
   440                           
   441                           	psect	dataBANK0
   442  000080                     __pdataBANK0:
   443                           	opt callstack 0
   444  000080                     _btnStop3:
   445                           	opt callstack 0
   446  000080                     	ds	7
   447  000087                     _btnStop2:
   448                           	opt callstack 0
   449  000087                     	ds	7
   450  00008E                     _btnStop1:
   451                           	opt callstack 0
   452  00008E                     	ds	7
   453  000095                     _BTN3:
   454                           	opt callstack 0
   455  000095                     	ds	7
   456  00009C                     _BTN2:
   457                           	opt callstack 0
   458  00009C                     	ds	7
   459  0000A3                     _BTN1:
   460                           	opt callstack 0
   461  0000A3                     	ds	7
   462  0000AA                     _LED4:
   463                           	opt callstack 0
   464  0000AA                     	ds	7
   465                           
   466                           	psect	cstackBANK0
   467  0000B1                     __pcstackBANK0:
   468                           	opt callstack 0
   469  0000B1                     main@x_max8:
   470                           	opt callstack 0
   471                           
   472                           ; 8 bytes @ 0x0
   473  0000B1                     	ds	8
   474  0000B9                     main@input_T:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x8
   478  0000B9                     	ds	2
   479  0000BB                     _main$381:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483  0000BB                     	ds	1
   484  0000BC                     main@x_max16:
   485                           	opt callstack 0
   486                           
   487                           ; 8 bytes @ 0xB
   488  0000BC                     	ds	8
   489  0000C4                     main@T:
   490                           	opt callstack 0
   491                           
   492                           ; 1 bytes @ 0x13
   493  0000C4                     	ds	1
   494                           
   495                           	psect	cstackCOMRAM
   496  000051                     __pcstackCOMRAM:
   497                           	opt callstack 0
   498  000051                     ??_ISR:
   499                           
   500                           ; 1 bytes @ 0x0
   501  000051                     	ds	2
   502  000053                     ?_ADC_u16getValue:
   503                           	opt callstack 0
   504  000053                     ?___wmul:
   505                           	opt callstack 0
   506  000053                     ?___awdiv:
   507                           	opt callstack 0
   508  000053                     ?___awmod:
   509                           	opt callstack 0
   510  000053                     ?___aldiv:
   511                           	opt callstack 0
   512  000053                     DIO_vdWritePin@port:
   513                           	opt callstack 0
   514  000053                     DIO_vdWriteDirPin@port:
   515                           	opt callstack 0
   516  000053                     DIO_u8ReadPin@pin:
   517                           	opt callstack 0
   518  000053                     TMR0_vdInit@bits:
   519                           	opt callstack 0
   520  000053                     TMR1_vdInit@bits:
   521                           	opt callstack 0
   522  000053                     UART_vdSendByte@data:
   523                           	opt callstack 0
   524  000053                     TMR3_vdInit@bits:
   525                           	opt callstack 0
   526  000053                     INT_vdSetINT0Callback@pf:
   527                           	opt callstack 0
   528  000053                     INT_vdSetINT1Callback@pf:
   529                           	opt callstack 0
   530  000053                     INT_vdSetINT2Callback@pf:
   531                           	opt callstack 0
   532  000053                     INT_vdSetTMR0Callback@pf:
   533                           	opt callstack 0
   534  000053                     INT_vdSetTMR1Callback@pf:
   535                           	opt callstack 0
   536  000053                     INT_vdSetTMR3Callback@pf:
   537                           	opt callstack 0
   538  000053                     ___wmul@multiplier:
   539                           	opt callstack 0
   540  000053                     ___awdiv@dividend:
   541                           	opt callstack 0
   542  000053                     ___awmod@dividend:
   543                           	opt callstack 0
   544  000053                     ___aldiv@dividend:
   545                           	opt callstack 0
   546                           
   547                           ; 4 bytes @ 0x2
   548  000053                     	ds	1
   549  000054                     ??_DIO_u8ReadPin:
   550  000054                     DIO_vdWritePin@pin:
   551                           	opt callstack 0
   552  000054                     DIO_vdWriteDirPin@pin:
   553                           	opt callstack 0
   554  000054                     TMR0_vdInit@prescaler:
   555                           	opt callstack 0
   556  000054                     TMR1_vdInit@prescaler:
   557                           	opt callstack 0
   558  000054                     TMR3_vdInit@prescaler:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x3
   562  000054                     	ds	1
   563  000055                     ??_ADC_u16getValue:
   564  000055                     ??_DIO_vdWriteDirPin:
   565  000055                     ??_DIO_vdWritePin:
   566  000055                     TMR0_vdInit@prescaler_value:
   567                           	opt callstack 0
   568  000055                     TMR1_vdInit@prescaler_value:
   569                           	opt callstack 0
   570  000055                     TMR3_vdInit@prescaler_value:
   571                           	opt callstack 0
   572  000055                     INT_vdSetTMR0Callback@init:
   573                           	opt callstack 0
   574  000055                     INT_vdSetTMR1Callback@init:
   575                           	opt callstack 0
   576  000055                     INT_vdSetTMR3Callback@init:
   577                           	opt callstack 0
   578  000055                     ___wmul@multiplicand:
   579                           	opt callstack 0
   580  000055                     ___awdiv@divisor:
   581                           	opt callstack 0
   582  000055                     ___awmod@divisor:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x4
   586  000055                     	ds	1
   587  000056                     DIO_u8ReadPin@port:
   588                           	opt callstack 0
   589  000056                     TMR0_vdInit@init:
   590                           	opt callstack 0
   591  000056                     TMR1_vdInit@init:
   592                           	opt callstack 0
   593  000056                     TMR3_vdInit@init:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x5
   597  000056                     	ds	1
   598  000057                     DIO_vdWritePin@data:
   599                           	opt callstack 0
   600  000057                     DIO_vdWriteDirPin@data:
   601                           	opt callstack 0
   602  000057                     ___awdiv@counter:
   603                           	opt callstack 0
   604  000057                     ___awmod@counter:
   605                           	opt callstack 0
   606  000057                     ADC_u16getValue@data:
   607                           	opt callstack 0
   608  000057                     BTN_u8getStatus@btn:
   609                           	opt callstack 0
   610  000057                     TMR0_vdSetTMR0Callback@pf:
   611                           	opt callstack 0
   612  000057                     TMR1_vdSetTMR1Callback@pf:
   613                           	opt callstack 0
   614  000057                     TMR3_vdSetTMR3Callback@pf:
   615                           	opt callstack 0
   616  000057                     ___wmul@product:
   617                           	opt callstack 0
   618  000057                     ___aldiv@divisor:
   619                           	opt callstack 0
   620                           
   621                           ; 4 bytes @ 0x6
   622  000057                     	ds	1
   623  000058                     ??_TMR0_vdInit:
   624  000058                     ??_TMR1_vdInit:
   625  000058                     ??_TMR3_vdInit:
   626  000058                     ___awdiv@sign:
   627                           	opt callstack 0
   628  000058                     ___awmod@sign:
   629                           	opt callstack 0
   630  000058                     DIO_vdInit@dev:
   631                           	opt callstack 0
   632  000058                     LED_vdSetStatus@led:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x7
   636  000058                     	ds	1
   637  000059                     ?___lwdiv:
   638                           	opt callstack 0
   639  000059                     ADC_u16getValue@pin:
   640                           	opt callstack 0
   641  000059                     ___awdiv@quotient:
   642                           	opt callstack 0
   643  000059                     ___lwdiv@dividend:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x8
   647  000059                     	ds	1
   648  00005A                     LED_vdSetStatus@status:
   649                           	opt callstack 0
   650  00005A                     TMR0_vdInit@mode:
   651                           	opt callstack 0
   652  00005A                     TMR1_vdInit@mode:
   653                           	opt callstack 0
   654  00005A                     TMR3_vdInit@mode:
   655                           	opt callstack 0
   656                           
   657                           ; 1 bytes @ 0x9
   658  00005A                     	ds	1
   659  00005B                     UART_vdSendu8asASCI@data:
   660                           	opt callstack 0
   661  00005B                     ___aldiv@counter:
   662                           	opt callstack 0
   663  00005B                     ___lwdiv@divisor:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0xA
   667  00005B                     	ds	1
   668  00005C                     UART_vdSendu8asASCI@temp2:
   669                           	opt callstack 0
   670  00005C                     ___aldiv@sign:
   671                           	opt callstack 0
   672                           
   673                           ; 1 bytes @ 0xB
   674  00005C                     	ds	1
   675  00005D                     ___lwdiv@counter:
   676                           	opt callstack 0
   677  00005D                     UART_vdSendu8asASCI@temp:
   678                           	opt callstack 0
   679  00005D                     ___aldiv@quotient:
   680                           	opt callstack 0
   681                           
   682                           ; 4 bytes @ 0xC
   683  00005D                     	ds	1
   684  00005E                     ___lwdiv@quotient:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0xD
   688  00005E                     	ds	2
   689  000060                     UART_vdSendu8asASCI@i:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0xF
   693  000060                     	ds	1
   694  000061                     UART_vdInit@baud:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x10
   698  000061                     	ds	2
   699  000063                     ??_main:
   700                           
   701                           ; 1 bytes @ 0x12
   702  000063                     	ds	8
   703                           
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 51 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  x_max16         8   11[BANK0 ] unsigned long long 
   714 ;;  x_max8          8    0[BANK0 ] unsigned long long 
   715 ;;  input_T         2    8[BANK0 ] unsigned int 
   716 ;;  T               1   19[BANK0 ] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   726 ;;      Params:         0       0       0       0       0       0       0
   727 ;;      Locals:         0      20       0       0       0       0       0
   728 ;;      Temps:          8       0       0       0       0       0       0
   729 ;;      Totals:         8      20       0       0       0       0       0
   730 ;;Total ram usage:       28 bytes
   731 ;; Hardware stack levels required when called:    5
   732 ;; This function calls:
   733 ;;		_ADC_u16getValue
   734 ;;		_ADC_vdInit
   735 ;;		_BTN_u8getStatus
   736 ;;		_DIO_vdInit
   737 ;;		_INT_vdSetINT0Callback
   738 ;;		_INT_vdSetINT1Callback
   739 ;;		_INT_vdSetINT2Callback
   740 ;;		_INT_vdinit
   741 ;;		_LED_vdSetStatus
   742 ;;		_TMR0_vdInit
   743 ;;		_TMR0_vdSetTMR0Callback
   744 ;;		_TMR0_vdStop
   745 ;;		_TMR1_vdInit
   746 ;;		_TMR1_vdSetTMR1Callback
   747 ;;		_TMR1_vdStop
   748 ;;		_TMR3_vdInit
   749 ;;		_TMR3_vdSetTMR3Callback
   750 ;;		_TMR3_vdStop
   751 ;;		_UART_vdInit
   752 ;;		_UART_vdSendByte
   753 ;;		_UART_vdSendu8asASCI
   754 ;;		___lwdiv
   755 ;;		___wmul
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text0
   762  00012A                     __ptext0:
   763                           	opt callstack 0
   764  00012A                     _main:
   765                           	opt callstack 0
   766  00012A  FFFF               	dw	65535	; assembler added errata NOP
   767                           
   768                           ;main.c: 53:     DIO_vdInit(&LED1);
   769                           
   770                           ;incstack = 0
   771  00012C  0E4A               	movlw	low _LED1
   772  00012E  6E58               	movwf	DIO_vdInit@dev,c
   773  000130  0E00               	movlw	high _LED1
   774  000132  6E59               	movwf	DIO_vdInit@dev+1,c
   775  000134  EC1A  F007         	call	_DIO_vdInit	;wreg free
   776                           
   777                           ;main.c: 54:     DIO_vdInit(&LED2);
   778  000138  0E43               	movlw	low _LED2
   779  00013A  6E58               	movwf	DIO_vdInit@dev,c
   780  00013C  0E00               	movlw	high _LED2
   781  00013E  6E59               	movwf	DIO_vdInit@dev+1,c
   782  000140  EC1A  F007         	call	_DIO_vdInit	;wreg free
   783                           
   784                           ;main.c: 55:     DIO_vdInit(&LED3);
   785  000144  0E3C               	movlw	low _LED3
   786  000146  6E58               	movwf	DIO_vdInit@dev,c
   787  000148  0E00               	movlw	high _LED3
   788  00014A  6E59               	movwf	DIO_vdInit@dev+1,c
   789  00014C  EC1A  F007         	call	_DIO_vdInit	;wreg free
   790                           
   791                           ;main.c: 56:     DIO_vdInit(&LED4);
   792  000150  0EAA               	movlw	low _LED4
   793  000152  6E58               	movwf	DIO_vdInit@dev,c
   794  000154  0E00               	movlw	high _LED4
   795  000156  6E59               	movwf	DIO_vdInit@dev+1,c
   796  000158  EC1A  F007         	call	_DIO_vdInit	;wreg free
   797                           
   798                           ;main.c: 57:     DIO_vdInit(&BTN1);
   799  00015C  0EA3               	movlw	low _BTN1
   800  00015E  6E58               	movwf	DIO_vdInit@dev,c
   801  000160  0E00               	movlw	high _BTN1
   802  000162  6E59               	movwf	DIO_vdInit@dev+1,c
   803  000164  EC1A  F007         	call	_DIO_vdInit	;wreg free
   804                           
   805                           ;main.c: 58:     DIO_vdInit(&BTN2);
   806  000168  0E9C               	movlw	low _BTN2
   807  00016A  6E58               	movwf	DIO_vdInit@dev,c
   808  00016C  0E00               	movlw	high _BTN2
   809  00016E  6E59               	movwf	DIO_vdInit@dev+1,c
   810  000170  EC1A  F007         	call	_DIO_vdInit	;wreg free
   811                           
   812                           ;main.c: 59:     DIO_vdInit(&BTN3);
   813  000174  0E95               	movlw	low _BTN3
   814  000176  6E58               	movwf	DIO_vdInit@dev,c
   815  000178  0E00               	movlw	high _BTN3
   816  00017A  6E59               	movwf	DIO_vdInit@dev+1,c
   817  00017C  EC1A  F007         	call	_DIO_vdInit	;wreg free
   818                           
   819                           ;main.c: 60:     DIO_vdInit(&btnStop1);
   820  000180  0E8E               	movlw	low _btnStop1
   821  000182  6E58               	movwf	DIO_vdInit@dev,c
   822  000184  0E00               	movlw	high _btnStop1
   823  000186  6E59               	movwf	DIO_vdInit@dev+1,c
   824  000188  EC1A  F007         	call	_DIO_vdInit	;wreg free
   825                           
   826                           ;main.c: 61:     DIO_vdInit(&btnStop2);
   827  00018C  0E87               	movlw	low _btnStop2
   828  00018E  6E58               	movwf	DIO_vdInit@dev,c
   829  000190  0E00               	movlw	high _btnStop2
   830  000192  6E59               	movwf	DIO_vdInit@dev+1,c
   831  000194  EC1A  F007         	call	_DIO_vdInit	;wreg free
   832                           
   833                           ;main.c: 62:     DIO_vdInit(&btnStop3);
   834  000198  0E80               	movlw	low _btnStop3
   835  00019A  6E58               	movwf	DIO_vdInit@dev,c
   836  00019C  0E00               	movlw	high _btnStop3
   837  00019E  6E59               	movwf	DIO_vdInit@dev+1,c
   838  0001A0  EC1A  F007         	call	_DIO_vdInit	;wreg free
   839                           
   840                           ;main.c: 64:     INT_vdinit();
   841  0001A4  EC76  F007         	call	_INT_vdinit	;wreg free
   842                           
   843                           ;main.c: 65:     INT_vdSetINT0Callback(int0_callback);
   844  0001A8  0E30               	movlw	low _int0_callback
   845  0001AA  6E53               	movwf	INT_vdSetINT0Callback@pf,c
   846  0001AC  0E10               	movlw	high _int0_callback
   847  0001AE  6E54               	movwf	INT_vdSetINT0Callback@pf+1,c
   848  0001B0  EC71  F008         	call	_INT_vdSetINT0Callback	;wreg free
   849                           
   850                           ;main.c: 66:     INT_vdSetINT1Callback(int1_callback);
   851  0001B4  0E1A               	movlw	low _int1_callback
   852  0001B6  6E53               	movwf	INT_vdSetINT1Callback@pf,c
   853  0001B8  0E10               	movlw	high _int1_callback
   854  0001BA  6E54               	movwf	INT_vdSetINT1Callback@pf+1,c
   855  0001BC  EC6A  F008         	call	_INT_vdSetINT1Callback	;wreg free
   856                           
   857                           ;main.c: 67:     INT_vdSetINT2Callback(int2_callback);
   858  0001C0  0E04               	movlw	low _int2_callback
   859  0001C2  6E53               	movwf	INT_vdSetINT2Callback@pf,c
   860  0001C4  0E10               	movlw	high _int2_callback
   861  0001C6  6E54               	movwf	INT_vdSetINT2Callback@pf+1,c
   862  0001C8  EC63  F008         	call	_INT_vdSetINT2Callback	;wreg free
   863                           
   864                           ;main.c: 69:     TMR0_vdInit(0,0,1,0b111,11);
   865  0001CC  0E00               	movlw	0
   866  0001CE  6E53               	movwf	TMR0_vdInit@bits,c
   867  0001D0  0E01               	movlw	1
   868  0001D2  6E54               	movwf	TMR0_vdInit@prescaler,c
   869  0001D4  0E07               	movlw	7
   870  0001D6  6E55               	movwf	TMR0_vdInit@prescaler_value,c
   871  0001D8  0E00               	movlw	0
   872  0001DA  6E57               	movwf	TMR0_vdInit@init+1,c
   873  0001DC  0E0B               	movlw	11
   874  0001DE  6E56               	movwf	TMR0_vdInit@init,c
   875  0001E0  0E00               	movlw	0
   876  0001E2  EC4F  F004         	call	_TMR0_vdInit
   877                           
   878                           ;main.c: 70:     TMR0_vdStop();
   879  0001E6  EC80  F008         	call	_TMR0_vdStop	;wreg free
   880                           
   881                           ;main.c: 71:     TMR0_vdSetTMR0Callback(tmr0_callback);
   882  0001EA  0E90               	movlw	low _tmr0_callback
   883  0001EC  6E57               	movwf	TMR0_vdSetTMR0Callback@pf,c
   884  0001EE  0E10               	movlw	high _tmr0_callback
   885  0001F0  6E58               	movwf	TMR0_vdSetTMR0Callback@pf+1,c
   886  0001F2  ECC8  F007         	call	_TMR0_vdSetTMR0Callback	;wreg free
   887                           
   888                           ;main.c: 73:     TMR1_vdInit(0,0,0,0,3050);
   889  0001F6  0E00               	movlw	0
   890  0001F8  6E53               	movwf	TMR1_vdInit@bits,c
   891  0001FA  0E00               	movlw	0
   892  0001FC  6E54               	movwf	TMR1_vdInit@prescaler,c
   893  0001FE  0E00               	movlw	0
   894  000200  6E55               	movwf	TMR1_vdInit@prescaler_value,c
   895  000202  0E0B               	movlw	11
   896  000204  6E57               	movwf	TMR1_vdInit@init+1,c
   897  000206  0EEA               	movlw	234
   898  000208  6E56               	movwf	TMR1_vdInit@init,c
   899  00020A  0E00               	movlw	0
   900  00020C  EC8F  F005         	call	_TMR1_vdInit
   901                           
   902                           ;main.c: 74:     TMR1_vdStop();
   903  000210  EC7C  F008         	call	_TMR1_vdStop	;wreg free
   904                           
   905                           ;main.c: 75:     TMR1_vdSetTMR1Callback(tmr1_callback);
   906  000214  0E7E               	movlw	low _tmr1_callback
   907  000216  6E57               	movwf	TMR1_vdSetTMR1Callback@pf,c
   908  000218  0E10               	movlw	high _tmr1_callback
   909  00021A  6E58               	movwf	TMR1_vdSetTMR1Callback@pf+1,c
   910  00021C  ECBB  F007         	call	_TMR1_vdSetTMR1Callback	;wreg free
   911                           
   912                           ;main.c: 77:     TMR3_vdInit(0,0,0,0,3050);
   913  000220  0E00               	movlw	0
   914  000222  6E53               	movwf	TMR3_vdInit@bits,c
   915  000224  0E00               	movlw	0
   916  000226  6E54               	movwf	TMR3_vdInit@prescaler,c
   917  000228  0E00               	movlw	0
   918  00022A  6E55               	movwf	TMR3_vdInit@prescaler_value,c
   919  00022C  0E0B               	movlw	11
   920  00022E  6E57               	movwf	TMR3_vdInit@init+1,c
   921  000230  0EEA               	movlw	234
   922  000232  6E56               	movwf	TMR3_vdInit@init,c
   923  000234  0E00               	movlw	0
   924  000236  ECD9  F005         	call	_TMR3_vdInit
   925                           
   926                           ;main.c: 78:     TMR3_vdStop();
   927  00023A  EC78  F008         	call	_TMR3_vdStop	;wreg free
   928                           
   929                           ;main.c: 79:     TMR3_vdSetTMR3Callback(tmr3_callback);
   930  00023E  0E6C               	movlw	low _tmr3_callback
   931  000240  6E57               	movwf	TMR3_vdSetTMR3Callback@pf,c
   932  000242  0E10               	movlw	high _tmr3_callback
   933  000244  6E58               	movwf	TMR3_vdSetTMR3Callback@pf+1,c
   934  000246  ECAE  F007         	call	_TMR3_vdSetTMR3Callback	;wreg free
   935                           
   936                           ;main.c: 81:     ADC_vdInit();
   937  00024A  ECD5  F007         	call	_ADC_vdInit	;wreg free
   938                           
   939                           ;main.c: 83:     UART_vdInit(9600);
   940  00024E  0E25               	movlw	37
   941  000250  6E62               	movwf	UART_vdInit@baud+1,c
   942  000252  0E80               	movlw	128
   943  000254  6E61               	movwf	UART_vdInit@baud,c
   944  000256  EC00  F007         	call	_UART_vdInit	;wreg free
   945  00025A                     l3234:
   946  00025A  FFFF               	dw	65535	; assembler added errata NOP
   947                           
   948                           ;main.c: 90:         input_T = ADC_u16getValue(0);
   949  00025C  0E00               	movlw	0
   950  00025E  EC64  F006         	call	_ADC_u16getValue
   951  000262  C053  F0B9         	movff	?_ADC_u16getValue,main@input_T
   952  000266  C054  F0BA         	movff	?_ADC_u16getValue+1,main@input_T+1
   953                           
   954                           ;main.c: 91:         T = 50*input_T/1023 + 10;
   955  00026A  C0B9  F053         	movff	main@input_T,___wmul@multiplier
   956  00026E  C0BA  F054         	movff	main@input_T+1,___wmul@multiplier+1
   957  000272  0E00               	movlw	0
   958  000274  6E56               	movwf	___wmul@multiplicand+1,c
   959  000276  0E32               	movlw	50
   960  000278  6E55               	movwf	___wmul@multiplicand,c
   961  00027A  EC4D  F007         	call	___wmul	;wreg free
   962  00027E  C053  F059         	movff	?___wmul,___lwdiv@dividend
   963  000282  C054  F05A         	movff	?___wmul+1,___lwdiv@dividend+1
   964  000286  0E03               	movlw	3
   965  000288  6E5C               	movwf	___lwdiv@divisor+1,c
   966  00028A  685B               	setf	___lwdiv@divisor,c
   967  00028C  ECD0  F006         	call	___lwdiv	;wreg free
   968  000290  5059               	movf	?___lwdiv,w,c
   969  000292  0F0A               	addlw	10
   970  000294  0100               	movlb	0	; () banked
   971  000296  6FC4               	movwf	main@T& (0+255),b
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 96:         x_max8 = T * 12;
   975  000298  51C4               	movf	main@T& (0+255),w,b
   976  00029A  0D0C               	mullw	12
   977  00029C  CFF3 F063          	movff	prodl,??_main
   978  0002A0  CFF4 F064          	movff	prodh,??_main+1
   979  0002A4  C063  F0B1         	movff	??_main,main@x_max8
   980  0002A8  C064  F0B2         	movff	??_main+1,main@x_max8+1
   981  0002AC  0E00               	movlw	0
   982  0002AE  BFB2               	btfsc	(main@x_max8+1)& (0+255),7,b
   983  0002B0  0EFF               	movlw	-1
   984  0002B2  6FB3               	movwf	(main@x_max8+2)& (0+255),b
   985  0002B4  6FB4               	movwf	(main@x_max8+3)& (0+255),b
   986  0002B6  6FB5               	movwf	(main@x_max8+4)& (0+255),b
   987  0002B8  6FB6               	movwf	(main@x_max8+5)& (0+255),b
   988  0002BA  6FB7               	movwf	(main@x_max8+6)& (0+255),b
   989  0002BC  6FB8               	movwf	(main@x_max8+7)& (0+255),b
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 99:         x_max16 = T * 13;
   993  0002BE  51C4               	movf	main@T& (0+255),w,b
   994  0002C0  0D0D               	mullw	13
   995  0002C2  CFF3 F063          	movff	prodl,??_main
   996  0002C6  CFF4 F064          	movff	prodh,??_main+1
   997  0002CA  C063  F0BC         	movff	??_main,main@x_max16
   998  0002CE  C064  F0BD         	movff	??_main+1,main@x_max16+1
   999  0002D2  0E00               	movlw	0
  1000  0002D4  BFBD               	btfsc	(main@x_max16+1)& (0+255),7,b
  1001  0002D6  0EFF               	movlw	-1
  1002  0002D8  6FBE               	movwf	(main@x_max16+2)& (0+255),b
  1003  0002DA  6FBF               	movwf	(main@x_max16+3)& (0+255),b
  1004  0002DC  6FC0               	movwf	(main@x_max16+4)& (0+255),b
  1005  0002DE  6FC1               	movwf	(main@x_max16+5)& (0+255),b
  1006  0002E0  6FC2               	movwf	(main@x_max16+6)& (0+255),b
  1007  0002E2  6FC3               	movwf	(main@x_max16+7)& (0+255),b
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 100:         if(x1 == x_max8){
  1011  0002E4  5009               	movf	_x1,w,c	;volatile
  1012  0002E6  6E63               	movwf	??_main& (0+255),c
  1013  0002E8  500A               	movf	_x1+1,w,c	;volatile
  1014  0002EA  6E64               	movwf	(??_main+1)& (0+255),c
  1015  0002EC  500B               	movf	_x1+2,w,c	;volatile
  1016  0002EE  6E65               	movwf	(??_main+2)& (0+255),c
  1017  0002F0  500C               	movf	_x1+3,w,c	;volatile
  1018  0002F2  6E66               	movwf	(??_main+3)& (0+255),c
  1019  0002F4  6A67               	clrf	(??_main+4)& (0+255),c
  1020  0002F6  6A68               	clrf	(??_main+5)& (0+255),c
  1021  0002F8  6A69               	clrf	(??_main+6)& (0+255),c
  1022  0002FA  6A6A               	clrf	(??_main+7)& (0+255),c
  1023  0002FC  51B1               	movf	main@x_max8& (0+255),w,b
  1024  0002FE  1863               	xorwf	??_main,w,c
  1025  000300  E129               	bnz	l3250
  1026  000302  51B2               	movf	(main@x_max8+1)& (0+255),w,b
  1027  000304  1864               	xorwf	??_main+1,w,c
  1028  000306  E126               	bnz	l3250
  1029  000308  51B3               	movf	(main@x_max8+2)& (0+255),w,b
  1030  00030A  1865               	xorwf	??_main+2,w,c
  1031  00030C  E123               	bnz	l3250
  1032  00030E  51B4               	movf	(main@x_max8+3)& (0+255),w,b
  1033  000310  1866               	xorwf	??_main+3,w,c
  1034  000312  E120               	bnz	l3250
  1035  000314  51B5               	movf	(main@x_max8+4)& (0+255),w,b
  1036  000316  1867               	xorwf	??_main+4,w,c
  1037  000318  E11D               	bnz	l3250
  1038  00031A  51B6               	movf	(main@x_max8+5)& (0+255),w,b
  1039  00031C  1868               	xorwf	??_main+5,w,c
  1040  00031E  E11A               	bnz	l3250
  1041  000320  51B7               	movf	(main@x_max8+6)& (0+255),w,b
  1042  000322  1869               	xorwf	??_main+6,w,c
  1043  000324  E117               	bnz	l3250
  1044  000326  51B8               	movf	(main@x_max8+7)& (0+255),w,b
  1045  000328  186A               	xorwf	??_main+7,w,c
  1046  00032A  A4D8               	btfss	status,2,c
  1047  00032C  D013               	goto	l3250
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 101:             TMR0_vdStop();
  1051  00032E  EC80  F008         	call	_TMR0_vdStop	;wreg free
  1052                           
  1053                           ;main.c: 102:             x1 = 0;
  1054  000332  0E00               	movlw	0
  1055  000334  6E09               	movwf	_x1,c	;volatile
  1056  000336  0E00               	movlw	0
  1057  000338  6E0A               	movwf	_x1+1,c	;volatile
  1058  00033A  0E00               	movlw	0
  1059  00033C  6E0B               	movwf	_x1+2,c	;volatile
  1060  00033E  0E00               	movlw	0
  1061  000340  6E0C               	movwf	_x1+3,c	;volatile
  1062                           
  1063                           ;main.c: 103:             status1 = !status1;
  1064  000342  502B               	movf	_status1,w,c	;volatile
  1065  000344  A4D8               	btfss	status,2,c
  1066  000346  D002               	goto	u2540
  1067  000348  0E01               	movlw	1
  1068  00034A  D002               	goto	u2550
  1069  00034C                     u2540:
  1070  00034C  FFFF               	dw	65535	; assembler added errata NOP
  1071  00034E  0E00               	movlw	0
  1072  000350                     u2550:
  1073  000350  FFFF               	dw	65535	; assembler added errata NOP
  1074  000352  6E2B               	movwf	_status1,c	;volatile
  1075  000354                     l3250:
  1076  000354  FFFF               	dw	65535	; assembler added errata NOP
  1077                           
  1078                           ;main.c: 105:         if(x2 == x_max16){
  1079  000356  5005               	movf	_x2,w,c	;volatile
  1080  000358  6E63               	movwf	??_main& (0+255),c
  1081  00035A  5006               	movf	_x2+1,w,c	;volatile
  1082  00035C  6E64               	movwf	(??_main+1)& (0+255),c
  1083  00035E  5007               	movf	_x2+2,w,c	;volatile
  1084  000360  6E65               	movwf	(??_main+2)& (0+255),c
  1085  000362  5008               	movf	_x2+3,w,c	;volatile
  1086  000364  6E66               	movwf	(??_main+3)& (0+255),c
  1087  000366  6A67               	clrf	(??_main+4)& (0+255),c
  1088  000368  6A68               	clrf	(??_main+5)& (0+255),c
  1089  00036A  6A69               	clrf	(??_main+6)& (0+255),c
  1090  00036C  6A6A               	clrf	(??_main+7)& (0+255),c
  1091  00036E  0100               	movlb	0	; () banked
  1092  000370  51BC               	movf	main@x_max16& (0+255),w,b
  1093  000372  1863               	xorwf	??_main,w,c
  1094  000374  E129               	bnz	l3258
  1095  000376  51BD               	movf	(main@x_max16+1)& (0+255),w,b
  1096  000378  1864               	xorwf	??_main+1,w,c
  1097  00037A  E126               	bnz	l3258
  1098  00037C  51BE               	movf	(main@x_max16+2)& (0+255),w,b
  1099  00037E  1865               	xorwf	??_main+2,w,c
  1100  000380  E123               	bnz	l3258
  1101  000382  51BF               	movf	(main@x_max16+3)& (0+255),w,b
  1102  000384  1866               	xorwf	??_main+3,w,c
  1103  000386  E120               	bnz	l3258
  1104  000388  51C0               	movf	(main@x_max16+4)& (0+255),w,b
  1105  00038A  1867               	xorwf	??_main+4,w,c
  1106  00038C  E11D               	bnz	l3258
  1107  00038E  51C1               	movf	(main@x_max16+5)& (0+255),w,b
  1108  000390  1868               	xorwf	??_main+5,w,c
  1109  000392  E11A               	bnz	l3258
  1110  000394  51C2               	movf	(main@x_max16+6)& (0+255),w,b
  1111  000396  1869               	xorwf	??_main+6,w,c
  1112  000398  E117               	bnz	l3258
  1113  00039A  51C3               	movf	(main@x_max16+7)& (0+255),w,b
  1114  00039C  186A               	xorwf	??_main+7,w,c
  1115  00039E  A4D8               	btfss	status,2,c
  1116  0003A0  D013               	goto	l3258
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 106:             TMR1_vdStop();
  1120  0003A2  EC7C  F008         	call	_TMR1_vdStop	;wreg free
  1121                           
  1122                           ;main.c: 107:             x2 = 0;
  1123  0003A6  0E00               	movlw	0
  1124  0003A8  6E05               	movwf	_x2,c	;volatile
  1125  0003AA  0E00               	movlw	0
  1126  0003AC  6E06               	movwf	_x2+1,c	;volatile
  1127  0003AE  0E00               	movlw	0
  1128  0003B0  6E07               	movwf	_x2+2,c	;volatile
  1129  0003B2  0E00               	movlw	0
  1130  0003B4  6E08               	movwf	_x2+3,c	;volatile
  1131                           
  1132                           ;main.c: 108:             status2 = !status2;
  1133  0003B6  502A               	movf	_status2,w,c	;volatile
  1134  0003B8  A4D8               	btfss	status,2,c
  1135  0003BA  D002               	goto	u2570
  1136  0003BC  0E01               	movlw	1
  1137  0003BE  D002               	goto	u2580
  1138  0003C0                     u2570:
  1139  0003C0  FFFF               	dw	65535	; assembler added errata NOP
  1140  0003C2  0E00               	movlw	0
  1141  0003C4                     u2580:
  1142  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  1143  0003C6  6E2A               	movwf	_status2,c	;volatile
  1144  0003C8                     l3258:
  1145  0003C8  FFFF               	dw	65535	; assembler added errata NOP
  1146                           
  1147                           ;main.c: 110:         if(x3 == x_max16){
  1148  0003CA  5001               	movf	_x3,w,c	;volatile
  1149  0003CC  6E63               	movwf	??_main& (0+255),c
  1150  0003CE  5002               	movf	_x3+1,w,c	;volatile
  1151  0003D0  6E64               	movwf	(??_main+1)& (0+255),c
  1152  0003D2  5003               	movf	_x3+2,w,c	;volatile
  1153  0003D4  6E65               	movwf	(??_main+2)& (0+255),c
  1154  0003D6  5004               	movf	_x3+3,w,c	;volatile
  1155  0003D8  6E66               	movwf	(??_main+3)& (0+255),c
  1156  0003DA  6A67               	clrf	(??_main+4)& (0+255),c
  1157  0003DC  6A68               	clrf	(??_main+5)& (0+255),c
  1158  0003DE  6A69               	clrf	(??_main+6)& (0+255),c
  1159  0003E0  6A6A               	clrf	(??_main+7)& (0+255),c
  1160  0003E2  0100               	movlb	0	; () banked
  1161  0003E4  51BC               	movf	main@x_max16& (0+255),w,b
  1162  0003E6  1863               	xorwf	??_main,w,c
  1163  0003E8  E129               	bnz	l3266
  1164  0003EA  51BD               	movf	(main@x_max16+1)& (0+255),w,b
  1165  0003EC  1864               	xorwf	??_main+1,w,c
  1166  0003EE  E126               	bnz	l3266
  1167  0003F0  51BE               	movf	(main@x_max16+2)& (0+255),w,b
  1168  0003F2  1865               	xorwf	??_main+2,w,c
  1169  0003F4  E123               	bnz	l3266
  1170  0003F6  51BF               	movf	(main@x_max16+3)& (0+255),w,b
  1171  0003F8  1866               	xorwf	??_main+3,w,c
  1172  0003FA  E120               	bnz	l3266
  1173  0003FC  51C0               	movf	(main@x_max16+4)& (0+255),w,b
  1174  0003FE  1867               	xorwf	??_main+4,w,c
  1175  000400  E11D               	bnz	l3266
  1176  000402  51C1               	movf	(main@x_max16+5)& (0+255),w,b
  1177  000404  1868               	xorwf	??_main+5,w,c
  1178  000406  E11A               	bnz	l3266
  1179  000408  51C2               	movf	(main@x_max16+6)& (0+255),w,b
  1180  00040A  1869               	xorwf	??_main+6,w,c
  1181  00040C  E117               	bnz	l3266
  1182  00040E  51C3               	movf	(main@x_max16+7)& (0+255),w,b
  1183  000410  186A               	xorwf	??_main+7,w,c
  1184  000412  A4D8               	btfss	status,2,c
  1185  000414  D013               	goto	l3266
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 111:             TMR3_vdStop();
  1189  000416  EC78  F008         	call	_TMR3_vdStop	;wreg free
  1190                           
  1191                           ;main.c: 112:             x3 = 0;
  1192  00041A  0E00               	movlw	0
  1193  00041C  6E01               	movwf	_x3,c	;volatile
  1194  00041E  0E00               	movlw	0
  1195  000420  6E02               	movwf	_x3+1,c	;volatile
  1196  000422  0E00               	movlw	0
  1197  000424  6E03               	movwf	_x3+2,c	;volatile
  1198  000426  0E00               	movlw	0
  1199  000428  6E04               	movwf	_x3+3,c	;volatile
  1200                           
  1201                           ;main.c: 113:             status3 = !status3;
  1202  00042A  5029               	movf	_status3,w,c	;volatile
  1203  00042C  A4D8               	btfss	status,2,c
  1204  00042E  D002               	goto	u2600
  1205  000430  0E01               	movlw	1
  1206  000432  D002               	goto	u2610
  1207  000434                     u2600:
  1208  000434  FFFF               	dw	65535	; assembler added errata NOP
  1209  000436  0E00               	movlw	0
  1210  000438                     u2610:
  1211  000438  FFFF               	dw	65535	; assembler added errata NOP
  1212  00043A  6E29               	movwf	_status3,c	;volatile
  1213  00043C                     l3266:
  1214  00043C  FFFF               	dw	65535	; assembler added errata NOP
  1215                           
  1216                           ;main.c: 117:         if(BTN_u8getStatus(&btnStop1)){
  1217  00043E  0E8E               	movlw	low _btnStop1
  1218  000440  6E57               	movwf	BTN_u8getStatus@btn,c
  1219  000442  0E00               	movlw	high _btnStop1
  1220  000444  6E58               	movwf	BTN_u8getStatus@btn+1,c
  1221  000446  EC9C  F007         	call	_BTN_u8getStatus	;wreg free
  1222  00044A  0900               	iorlw	0
  1223  00044C  B4D8               	btfsc	status,2,c
  1224  00044E  D004               	goto	l3272
  1225                           
  1226                           ;main.c: 118:             TMR0_vdStop();
  1227  000450  EC80  F008         	call	_TMR0_vdStop	;wreg free
  1228                           
  1229                           ;main.c: 119:             status1 = 0;
  1230  000454  0E00               	movlw	0
  1231  000456  6E2B               	movwf	_status1,c	;volatile
  1232  000458                     l3272:
  1233  000458  FFFF               	dw	65535	; assembler added errata NOP
  1234                           
  1235                           ;main.c: 121:         if(BTN_u8getStatus(&btnStop2)){
  1236  00045A  0E87               	movlw	low _btnStop2
  1237  00045C  6E57               	movwf	BTN_u8getStatus@btn,c
  1238  00045E  0E00               	movlw	high _btnStop2
  1239  000460  6E58               	movwf	BTN_u8getStatus@btn+1,c
  1240  000462  EC9C  F007         	call	_BTN_u8getStatus	;wreg free
  1241  000466  0900               	iorlw	0
  1242  000468  B4D8               	btfsc	status,2,c
  1243  00046A  D004               	goto	l3278
  1244                           
  1245                           ;main.c: 122:             TMR1_vdStop();
  1246  00046C  EC7C  F008         	call	_TMR1_vdStop	;wreg free
  1247                           
  1248                           ;main.c: 123:             status2 = 0;
  1249  000470  0E00               	movlw	0
  1250  000472  6E2A               	movwf	_status2,c	;volatile
  1251  000474                     l3278:
  1252  000474  FFFF               	dw	65535	; assembler added errata NOP
  1253                           
  1254                           ;main.c: 125:         if(BTN_u8getStatus(&btnStop3)){
  1255  000476  0E80               	movlw	low _btnStop3
  1256  000478  6E57               	movwf	BTN_u8getStatus@btn,c
  1257  00047A  0E00               	movlw	high _btnStop3
  1258  00047C  6E58               	movwf	BTN_u8getStatus@btn+1,c
  1259  00047E  EC9C  F007         	call	_BTN_u8getStatus	;wreg free
  1260  000482  0900               	iorlw	0
  1261  000484  B4D8               	btfsc	status,2,c
  1262  000486  D004               	goto	l3284
  1263                           
  1264                           ;main.c: 126:             TMR3_vdStop();
  1265  000488  EC78  F008         	call	_TMR3_vdStop	;wreg free
  1266                           
  1267                           ;main.c: 127:             status3 = 0;
  1268  00048C  0E00               	movlw	0
  1269  00048E  6E29               	movwf	_status3,c	;volatile
  1270  000490                     l3284:
  1271  000490  FFFF               	dw	65535	; assembler added errata NOP
  1272                           
  1273                           ;main.c: 130:         LED_vdSetStatus(&LED1,status1);
  1274  000492  0E4A               	movlw	low _LED1
  1275  000494  6E58               	movwf	LED_vdSetStatus@led,c
  1276  000496  0E00               	movlw	high _LED1
  1277  000498  6E59               	movwf	LED_vdSetStatus@led+1,c
  1278  00049A  C02B  F05A         	movff	_status1,LED_vdSetStatus@status	;volatile
  1279  00049E  EC62  F007         	call	_LED_vdSetStatus	;wreg free
  1280                           
  1281                           ;main.c: 131:         LED_vdSetStatus(&LED2,status2);
  1282  0004A2  0E43               	movlw	low _LED2
  1283  0004A4  6E58               	movwf	LED_vdSetStatus@led,c
  1284  0004A6  0E00               	movlw	high _LED2
  1285  0004A8  6E59               	movwf	LED_vdSetStatus@led+1,c
  1286  0004AA  C02A  F05A         	movff	_status2,LED_vdSetStatus@status	;volatile
  1287  0004AE  EC62  F007         	call	_LED_vdSetStatus	;wreg free
  1288                           
  1289                           ;main.c: 132:         LED_vdSetStatus(&LED3,status3);
  1290  0004B2  0E3C               	movlw	low _LED3
  1291  0004B4  6E58               	movwf	LED_vdSetStatus@led,c
  1292  0004B6  0E00               	movlw	high _LED3
  1293  0004B8  6E59               	movwf	LED_vdSetStatus@led+1,c
  1294  0004BA  C029  F05A         	movff	_status3,LED_vdSetStatus@status	;volatile
  1295  0004BE  EC62  F007         	call	_LED_vdSetStatus	;wreg free
  1296                           
  1297                           ;main.c: 133:         UART_vdSendu8asASCI(T);
  1298  0004C2  0100               	movlb	0	; () banked
  1299  0004C4  51C4               	movf	main@T& (0+255),w,b
  1300  0004C6  ECF7  F004         	call	_UART_vdSendu8asASCI
  1301                           
  1302                           ;main.c: 134:         UART_vdSendByte('/');
  1303  0004CA  0E2F               	movlw	47
  1304  0004CC  EC2D  F008         	call	_UART_vdSendByte
  1305                           
  1306                           ;main.c: 140:         LED_vdSetStatus(&LED4, (status1||status2||status3) );
  1307  0004D0  0E01               	movlw	1
  1308  0004D2  0100               	movlb	0	; () banked
  1309  0004D4  6FBB               	movwf	_main$381& (0+255),b
  1310                           
  1311                           ; BSR set to: 0
  1312  0004D6  502B               	movf	_status1,w,c	;volatile
  1313  0004D8  A4D8               	btfss	status,2,c
  1314  0004DA  D008               	goto	l3304
  1315                           
  1316                           ; BSR set to: 0
  1317  0004DC  502A               	movf	_status2,w,c	;volatile
  1318  0004DE  A4D8               	btfss	status,2,c
  1319  0004E0  D005               	goto	l3304
  1320                           
  1321                           ; BSR set to: 0
  1322  0004E2  5029               	movf	_status3,w,c	;volatile
  1323  0004E4  A4D8               	btfss	status,2,c
  1324  0004E6  D002               	goto	l3304
  1325                           
  1326                           ; BSR set to: 0
  1327  0004E8  0E00               	movlw	0
  1328  0004EA  6FBB               	movwf	_main$381& (0+255),b
  1329  0004EC                     l3304:
  1330  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  1331                           
  1332                           ; BSR set to: 0
  1333  0004EE  0EAA               	movlw	low _LED4
  1334  0004F0  6E58               	movwf	LED_vdSetStatus@led,c
  1335  0004F2  0E00               	movlw	high _LED4
  1336  0004F4  6E59               	movwf	LED_vdSetStatus@led+1,c
  1337  0004F6  C0BB  F05A         	movff	_main$381,LED_vdSetStatus@status
  1338  0004FA  EC62  F007         	call	_LED_vdSetStatus	;wreg free
  1339                           
  1340                           ;main.c: 141:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1341  0004FE  0E0A               	movlw	10
  1342  000500  6E63               	movwf	??_main& (0+255),c
  1343  000502  0EBE               	movlw	190
  1344  000504                     u2747:
  1345  000504  FFFF               	dw	65535	; errata NOP
  1346  000506  2EE8               	decfsz	wreg,f,c
  1347  000508  D7FD               	bra	u2747
  1348  00050A  2E63               	decfsz	??_main& (0+255),f,c
  1349  00050C  D7FB               	bra	u2747
  1350  00050E  D000               	nop2	
  1351  000510  D6A4               	goto	l3234
  1352  000512                     __end_of_main:
  1353                           	opt callstack 0
  1354                           
  1355 ;; *************** function ___wmul *****************
  1356 ;; Defined at:
  1357 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  multiplier      2    2[COMRAM] unsigned int 
  1360 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  product         2    6[COMRAM] unsigned int 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2    2[COMRAM] unsigned int 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, prodl, prodh
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1372 ;;      Params:         4       0       0       0       0       0       0
  1373 ;;      Locals:         2       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0
  1375 ;;      Totals:         6       0       0       0       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text1
  1387  000E9A                     __ptext1:
  1388                           	opt callstack 0
  1389  000E9A                     ___wmul:
  1390                           	opt callstack 0
  1391  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  1392                           
  1393                           ;incstack = 0
  1394  000E9C  5053               	movf	___wmul@multiplier,w,c
  1395  000E9E  0255               	mulwf	___wmul@multiplicand,c
  1396  000EA0  CFF3 F057          	movff	prodl,___wmul@product
  1397  000EA4  CFF4 F058          	movff	prodh,___wmul@product+1
  1398  000EA8  5053               	movf	___wmul@multiplier,w,c
  1399  000EAA  0256               	mulwf	___wmul@multiplicand+1,c
  1400  000EAC  50F3               	movf	prodl,w,c
  1401  000EAE  2658               	addwf	___wmul@product+1,f,c
  1402  000EB0  5054               	movf	___wmul@multiplier+1,w,c
  1403  000EB2  0255               	mulwf	___wmul@multiplicand,c
  1404  000EB4  50F3               	movf	prodl,w,c
  1405  000EB6  2658               	addwf	___wmul@product+1,f,c
  1406  000EB8  C057  F053         	movff	___wmul@product,?___wmul
  1407  000EBC  C058  F054         	movff	___wmul@product+1,?___wmul+1
  1408  000EC0  0012               	return		;funcret
  1409  000EC2  FFFF               	dw	65535	; errata NOP
  1410  000EC4                     __end_of___wmul:
  1411                           	opt callstack 0
  1412                           
  1413 ;; *************** function ___lwdiv *****************
  1414 ;; Defined at:
  1415 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  dividend        2    8[COMRAM] unsigned int 
  1418 ;;  divisor         2   10[COMRAM] unsigned int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  quotient        2   13[COMRAM] unsigned int 
  1421 ;;  counter         1   12[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  2    8[COMRAM] unsigned int 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         4       0       0       0       0       0       0
  1432 ;;      Locals:         3       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0
  1434 ;;      Totals:         7       0       0       0       0       0       0
  1435 ;;Total ram usage:        7 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    3
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;;		_UART_vdSendu16asASCI
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text2
  1447  000DA0                     __ptext2:
  1448                           	opt callstack 0
  1449  000DA0                     ___lwdiv:
  1450                           	opt callstack 0
  1451  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  1452                           
  1453                           ;incstack = 0
  1454  000DA2  0E00               	movlw	0
  1455  000DA4  6E5F               	movwf	___lwdiv@quotient+1,c
  1456  000DA6  0E00               	movlw	0
  1457  000DA8  6E5E               	movwf	___lwdiv@quotient,c
  1458  000DAA  505B               	movf	___lwdiv@divisor,w,c
  1459  000DAC  105C               	iorwf	___lwdiv@divisor+1,w,c
  1460  000DAE  B4D8               	btfsc	status,2,c
  1461  000DB0  D020               	goto	l1122
  1462  000DB2  0E01               	movlw	1
  1463  000DB4  6E5D               	movwf	___lwdiv@counter,c
  1464  000DB6  D005               	goto	l3188
  1465  000DB8                     l3186:
  1466  000DB8  FFFF               	dw	65535	; assembler added errata NOP
  1467  000DBA  90D8               	bcf	status,0,c
  1468  000DBC  365B               	rlcf	___lwdiv@divisor,f,c
  1469  000DBE  365C               	rlcf	___lwdiv@divisor+1,f,c
  1470  000DC0  2A5D               	incf	___lwdiv@counter,f,c
  1471  000DC2                     l3188:
  1472  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  1473  000DC4  AE5C               	btfss	___lwdiv@divisor+1,7,c
  1474  000DC6  D7F8               	goto	l3186
  1475  000DC8                     u2510:
  1476  000DC8  FFFF               	dw	65535	; assembler added errata NOP
  1477  000DCA  90D8               	bcf	status,0,c
  1478  000DCC  365E               	rlcf	___lwdiv@quotient,f,c
  1479  000DCE  365F               	rlcf	___lwdiv@quotient+1,f,c
  1480  000DD0  505B               	movf	___lwdiv@divisor,w,c
  1481  000DD2  5C59               	subwf	___lwdiv@dividend,w,c
  1482  000DD4  505C               	movf	___lwdiv@divisor+1,w,c
  1483  000DD6  585A               	subwfb	___lwdiv@dividend+1,w,c
  1484  000DD8  A0D8               	btfss	status,0,c
  1485  000DDA  D005               	goto	l3198
  1486  000DDC  505B               	movf	___lwdiv@divisor,w,c
  1487  000DDE  5E59               	subwf	___lwdiv@dividend,f,c
  1488  000DE0  505C               	movf	___lwdiv@divisor+1,w,c
  1489  000DE2  5A5A               	subwfb	___lwdiv@dividend+1,f,c
  1490  000DE4  805E               	bsf	___lwdiv@quotient,0,c
  1491  000DE6                     l3198:
  1492  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  1493  000DE8  90D8               	bcf	status,0,c
  1494  000DEA  325C               	rrcf	___lwdiv@divisor+1,f,c
  1495  000DEC  325B               	rrcf	___lwdiv@divisor,f,c
  1496  000DEE  2E5D               	decfsz	___lwdiv@counter,f,c
  1497  000DF0  D7EB               	goto	u2510
  1498  000DF2                     l1122:
  1499  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  1500  000DF4  C05E  F059         	movff	___lwdiv@quotient,?___lwdiv
  1501  000DF8  C05F  F05A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1502  000DFC  0012               	return		;funcret
  1503  000DFE  FFFF               	dw	65535	; errata NOP
  1504  000E00                     __end_of___lwdiv:
  1505                           	opt callstack 0
  1506                           
  1507 ;; *************** function _UART_vdSendu8asASCI *****************
  1508 ;; Defined at:
  1509 ;;		line 31 in file "UART.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  data            1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  data            1   10[COMRAM] unsigned char 
  1514 ;;  temp            3   12[COMRAM] unsigned char [3]
  1515 ;;  i               1   15[COMRAM] unsigned char 
  1516 ;;  temp2           1   11[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         6       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         6       0       0       0       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    4
  1533 ;; This function calls:
  1534 ;;		_UART_vdSendByte
  1535 ;;		___awdiv
  1536 ;;		___awmod
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text3
  1543  0009EE                     __ptext3:
  1544                           	opt callstack 0
  1545  0009EE                     _UART_vdSendu8asASCI:
  1546                           	opt callstack 0
  1547  0009EE  FFFF               	dw	65535	; assembler added errata NOP
  1548                           
  1549                           ;incstack = 0
  1550                           ;UART_vdSendu8asASCI@data stored from wreg
  1551  0009F0  6E5B               	movwf	UART_vdSendu8asASCI@data,c
  1552                           
  1553                           ;UART.c: 32:  unsigned char temp[3]; unsigned char i; unsigned char temp2 = data;
  1554  0009F2  C05B  F05C         	movff	UART_vdSendu8asASCI@data,UART_vdSendu8asASCI@temp2
  1555                           
  1556                           ;UART.c: 33:  for(i=0;i<3;i++){
  1557  0009F6  0E00               	movlw	0
  1558  0009F8  6E60               	movwf	UART_vdSendu8asASCI@i,c
  1559  0009FA                     l3156:
  1560  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  1561                           
  1562                           ;UART.c: 34:   temp[i] = temp2%10;
  1563  0009FC  0E5D               	movlw	low UART_vdSendu8asASCI@temp
  1564  0009FE  2460               	addwf	UART_vdSendu8asASCI@i,w,c
  1565  000A00  6ED9               	movwf	fsr2l,c
  1566  000A02  6ADA               	clrf	fsr2h,c
  1567  000A04  0E00               	movlw	high UART_vdSendu8asASCI@temp
  1568  000A06  22DA               	addwfc	fsr2h,f,c
  1569  000A08  C05C  F053         	movff	UART_vdSendu8asASCI@temp2,___awmod@dividend
  1570  000A0C  6A54               	clrf	___awmod@dividend+1,c
  1571  000A0E  0E00               	movlw	0
  1572  000A10  6E56               	movwf	___awmod@divisor+1,c
  1573  000A12  0E0A               	movlw	10
  1574  000A14  6E55               	movwf	___awmod@divisor,c
  1575  000A16  EC22  F006         	call	___awmod	;wreg free
  1576  000A1A  5053               	movf	?___awmod,w,c
  1577  000A1C  6EDF               	movwf	indf2,c
  1578                           
  1579                           ;UART.c: 35:   temp2 /= 10;
  1580  000A1E  C05C  F053         	movff	UART_vdSendu8asASCI@temp2,___awdiv@dividend
  1581  000A22  6A54               	clrf	___awdiv@dividend+1,c
  1582  000A24  0E00               	movlw	0
  1583  000A26  6E56               	movwf	___awdiv@divisor+1,c
  1584  000A28  0E0A               	movlw	10
  1585  000A2A  6E55               	movwf	___awdiv@divisor,c
  1586  000A2C  EC43  F005         	call	___awdiv	;wreg free
  1587  000A30  5053               	movf	?___awdiv,w,c
  1588  000A32  6E5C               	movwf	UART_vdSendu8asASCI@temp2,c
  1589                           
  1590                           ;UART.c: 36:  }
  1591  000A34  2A60               	incf	UART_vdSendu8asASCI@i,f,c
  1592  000A36  0E02               	movlw	2
  1593  000A38  6460               	cpfsgt	UART_vdSendu8asASCI@i,c
  1594  000A3A  D7DF               	goto	l3156
  1595                           
  1596                           ;UART.c: 37:  if(temp[2]==0){
  1597  000A3C  505F               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1598  000A3E  A4D8               	btfss	status,2,c
  1599  000A40  D012               	goto	l3172
  1600                           
  1601                           ;UART.c: 38:   if(temp[1]==0){
  1602  000A42  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1603  000A44  A4D8               	btfss	status,2,c
  1604  000A46  D005               	goto	l3170
  1605                           
  1606                           ;UART.c: 39:    UART_vdSendByte(temp[0]+48);
  1607  000A48  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1608  000A4A  0F30               	addlw	48
  1609  000A4C  EC2D  F008         	call	_UART_vdSendByte
  1610                           
  1611                           ;UART.c: 40:   }else{
  1612  000A50  D017               	goto	l578
  1613  000A52                     l3170:
  1614  000A52  FFFF               	dw	65535	; assembler added errata NOP
  1615                           
  1616                           ;UART.c: 41:    UART_vdSendByte(temp[1]+48);
  1617  000A54  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1618  000A56  0F30               	addlw	48
  1619  000A58  EC2D  F008         	call	_UART_vdSendByte
  1620                           
  1621                           ;UART.c: 42:    UART_vdSendByte(temp[0]+48);
  1622  000A5C  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1623  000A5E  0F30               	addlw	48
  1624  000A60  EC2D  F008         	call	_UART_vdSendByte
  1625  000A64  D00D               	goto	l578
  1626  000A66                     l3172:
  1627  000A66  FFFF               	dw	65535	; assembler added errata NOP
  1628                           
  1629                           ;UART.c: 45:   UART_vdSendByte(temp[2]+48);
  1630  000A68  505F               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1631  000A6A  0F30               	addlw	48
  1632  000A6C  EC2D  F008         	call	_UART_vdSendByte
  1633                           
  1634                           ;UART.c: 46:   UART_vdSendByte(temp[1]+48);
  1635  000A70  505E               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1636  000A72  0F30               	addlw	48
  1637  000A74  EC2D  F008         	call	_UART_vdSendByte
  1638                           
  1639                           ;UART.c: 47:   UART_vdSendByte(temp[0]+48);
  1640  000A78  505D               	movf	UART_vdSendu8asASCI@temp,w,c
  1641  000A7A  0F30               	addlw	48
  1642  000A7C  EC2D  F008         	call	_UART_vdSendByte
  1643  000A80                     l578:
  1644  000A80  FFFF               	dw	65535	; assembler added errata NOP
  1645  000A82  0012               	return		;funcret
  1646  000A84  FFFF               	dw	65535	; errata NOP
  1647  000A86                     __end_of_UART_vdSendu8asASCI:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function ___awmod *****************
  1651 ;; Defined at:
  1652 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  dividend        2    2[COMRAM] int 
  1655 ;;  divisor         2    4[COMRAM] int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  sign            1    7[COMRAM] unsigned char 
  1658 ;;  counter         1    6[COMRAM] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2    2[COMRAM] int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1668 ;;      Params:         4       0       0       0       0       0       0
  1669 ;;      Locals:         2       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0
  1671 ;;      Totals:         6       0       0       0       0       0       0
  1672 ;;Total ram usage:        6 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    3
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_UART_vdSendu8asASCI
  1679 ;;		_BTN_vdRead
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text4
  1684  000C44                     __ptext4:
  1685                           	opt callstack 0
  1686  000C44                     ___awmod:
  1687                           	opt callstack 0
  1688  000C44  FFFF               	dw	65535	; assembler added errata NOP
  1689                           
  1690                           ;incstack = 0
  1691  000C46  0E00               	movlw	0
  1692  000C48  6E58               	movwf	___awmod@sign,c
  1693  000C4A  AE54               	btfss	___awmod@dividend+1,7,c
  1694  000C4C  D006               	goto	l2970
  1695  000C4E  6C53               	negf	___awmod@dividend,c
  1696  000C50  1E54               	comf	___awmod@dividend+1,f,c
  1697  000C52  B0D8               	btfsc	status,0,c
  1698  000C54  2A54               	incf	___awmod@dividend+1,f,c
  1699  000C56  0E01               	movlw	1
  1700  000C58  6E58               	movwf	___awmod@sign,c
  1701  000C5A                     l2970:
  1702  000C5A  FFFF               	dw	65535	; assembler added errata NOP
  1703  000C5C  AE56               	btfss	___awmod@divisor+1,7,c
  1704  000C5E  D004               	goto	l2974
  1705  000C60  6C55               	negf	___awmod@divisor,c
  1706  000C62  1E56               	comf	___awmod@divisor+1,f,c
  1707  000C64  B0D8               	btfsc	status,0,c
  1708  000C66  2A56               	incf	___awmod@divisor+1,f,c
  1709  000C68                     l2974:
  1710  000C68  FFFF               	dw	65535	; assembler added errata NOP
  1711  000C6A  5055               	movf	___awmod@divisor,w,c
  1712  000C6C  1056               	iorwf	___awmod@divisor+1,w,c
  1713  000C6E  B4D8               	btfsc	status,2,c
  1714  000C70  D01C               	goto	l2990
  1715  000C72  0E01               	movlw	1
  1716  000C74  6E57               	movwf	___awmod@counter,c
  1717  000C76  D005               	goto	l2980
  1718  000C78                     l2978:
  1719  000C78  FFFF               	dw	65535	; assembler added errata NOP
  1720  000C7A  90D8               	bcf	status,0,c
  1721  000C7C  3655               	rlcf	___awmod@divisor,f,c
  1722  000C7E  3656               	rlcf	___awmod@divisor+1,f,c
  1723  000C80  2A57               	incf	___awmod@counter,f,c
  1724  000C82                     l2980:
  1725  000C82  FFFF               	dw	65535	; assembler added errata NOP
  1726  000C84  AE56               	btfss	___awmod@divisor+1,7,c
  1727  000C86  D7F8               	goto	l2978
  1728  000C88                     u2400:
  1729  000C88  FFFF               	dw	65535	; assembler added errata NOP
  1730  000C8A  5055               	movf	___awmod@divisor,w,c
  1731  000C8C  5C53               	subwf	___awmod@dividend,w,c
  1732  000C8E  5056               	movf	___awmod@divisor+1,w,c
  1733  000C90  5854               	subwfb	___awmod@dividend+1,w,c
  1734  000C92  A0D8               	btfss	status,0,c
  1735  000C94  D004               	goto	l2986
  1736  000C96  5055               	movf	___awmod@divisor,w,c
  1737  000C98  5E53               	subwf	___awmod@dividend,f,c
  1738  000C9A  5056               	movf	___awmod@divisor+1,w,c
  1739  000C9C  5A54               	subwfb	___awmod@dividend+1,f,c
  1740  000C9E                     l2986:
  1741  000C9E  FFFF               	dw	65535	; assembler added errata NOP
  1742  000CA0  90D8               	bcf	status,0,c
  1743  000CA2  3256               	rrcf	___awmod@divisor+1,f,c
  1744  000CA4  3255               	rrcf	___awmod@divisor,f,c
  1745  000CA6  2E57               	decfsz	___awmod@counter,f,c
  1746  000CA8  D7EF               	goto	u2400
  1747  000CAA                     l2990:
  1748  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  1749  000CAC  5058               	movf	___awmod@sign,w,c
  1750  000CAE  B4D8               	btfsc	status,2,c
  1751  000CB0  D004               	goto	l2994
  1752  000CB2  6C53               	negf	___awmod@dividend,c
  1753  000CB4  1E54               	comf	___awmod@dividend+1,f,c
  1754  000CB6  B0D8               	btfsc	status,0,c
  1755  000CB8  2A54               	incf	___awmod@dividend+1,f,c
  1756  000CBA                     l2994:
  1757  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  1758  000CBC  C053  F053         	movff	___awmod@dividend,?___awmod
  1759  000CC0  C054  F054         	movff	___awmod@dividend+1,?___awmod+1
  1760  000CC4  0012               	return		;funcret
  1761  000CC6  FFFF               	dw	65535	; errata NOP
  1762  000CC8                     __end_of___awmod:
  1763                           	opt callstack 0
  1764                           
  1765 ;; *************** function ___awdiv *****************
  1766 ;; Defined at:
  1767 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  dividend        2    2[COMRAM] int 
  1770 ;;  divisor         2    4[COMRAM] int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  quotient        2    8[COMRAM] int 
  1773 ;;  sign            1    7[COMRAM] unsigned char 
  1774 ;;  counter         1    6[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2    2[COMRAM] int 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1784 ;;      Params:         4       0       0       0       0       0       0
  1785 ;;      Locals:         4       0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0
  1787 ;;      Totals:         8       0       0       0       0       0       0
  1788 ;;Total ram usage:        8 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    3
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_UART_vdSendu8asASCI
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text5
  1799  000A86                     __ptext5:
  1800                           	opt callstack 0
  1801  000A86                     ___awdiv:
  1802                           	opt callstack 0
  1803  000A86  FFFF               	dw	65535	; assembler added errata NOP
  1804                           
  1805                           ;incstack = 0
  1806  000A88  0E00               	movlw	0
  1807  000A8A  6E58               	movwf	___awdiv@sign,c
  1808  000A8C  AE56               	btfss	___awdiv@divisor+1,7,c
  1809  000A8E  D006               	goto	l2926
  1810  000A90  6C55               	negf	___awdiv@divisor,c
  1811  000A92  1E56               	comf	___awdiv@divisor+1,f,c
  1812  000A94  B0D8               	btfsc	status,0,c
  1813  000A96  2A56               	incf	___awdiv@divisor+1,f,c
  1814  000A98  0E01               	movlw	1
  1815  000A9A  6E58               	movwf	___awdiv@sign,c
  1816  000A9C                     l2926:
  1817  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  1818  000A9E  AE54               	btfss	___awdiv@dividend+1,7,c
  1819  000AA0  D006               	goto	l2932
  1820  000AA2  6C53               	negf	___awdiv@dividend,c
  1821  000AA4  1E54               	comf	___awdiv@dividend+1,f,c
  1822  000AA6  B0D8               	btfsc	status,0,c
  1823  000AA8  2A54               	incf	___awdiv@dividend+1,f,c
  1824  000AAA  0E01               	movlw	1
  1825  000AAC  1A58               	xorwf	___awdiv@sign,f,c
  1826  000AAE                     l2932:
  1827  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  1828  000AB0  0E00               	movlw	0
  1829  000AB2  6E5A               	movwf	___awdiv@quotient+1,c
  1830  000AB4  0E00               	movlw	0
  1831  000AB6  6E59               	movwf	___awdiv@quotient,c
  1832  000AB8  5055               	movf	___awdiv@divisor,w,c
  1833  000ABA  1056               	iorwf	___awdiv@divisor+1,w,c
  1834  000ABC  B4D8               	btfsc	status,2,c
  1835  000ABE  D020               	goto	l2954
  1836  000AC0  0E01               	movlw	1
  1837  000AC2  6E57               	movwf	___awdiv@counter,c
  1838  000AC4  D005               	goto	l2940
  1839  000AC6                     l2938:
  1840  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  1841  000AC8  90D8               	bcf	status,0,c
  1842  000ACA  3655               	rlcf	___awdiv@divisor,f,c
  1843  000ACC  3656               	rlcf	___awdiv@divisor+1,f,c
  1844  000ACE  2A57               	incf	___awdiv@counter,f,c
  1845  000AD0                     l2940:
  1846  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  1847  000AD2  AE56               	btfss	___awdiv@divisor+1,7,c
  1848  000AD4  D7F8               	goto	l2938
  1849  000AD6                     u2340:
  1850  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  1851  000AD8  90D8               	bcf	status,0,c
  1852  000ADA  3659               	rlcf	___awdiv@quotient,f,c
  1853  000ADC  365A               	rlcf	___awdiv@quotient+1,f,c
  1854  000ADE  5055               	movf	___awdiv@divisor,w,c
  1855  000AE0  5C53               	subwf	___awdiv@dividend,w,c
  1856  000AE2  5056               	movf	___awdiv@divisor+1,w,c
  1857  000AE4  5854               	subwfb	___awdiv@dividend+1,w,c
  1858  000AE6  A0D8               	btfss	status,0,c
  1859  000AE8  D005               	goto	l2950
  1860  000AEA  5055               	movf	___awdiv@divisor,w,c
  1861  000AEC  5E53               	subwf	___awdiv@dividend,f,c
  1862  000AEE  5056               	movf	___awdiv@divisor+1,w,c
  1863  000AF0  5A54               	subwfb	___awdiv@dividend+1,f,c
  1864  000AF2  8059               	bsf	___awdiv@quotient,0,c
  1865  000AF4                     l2950:
  1866  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  1867  000AF6  90D8               	bcf	status,0,c
  1868  000AF8  3256               	rrcf	___awdiv@divisor+1,f,c
  1869  000AFA  3255               	rrcf	___awdiv@divisor,f,c
  1870  000AFC  2E57               	decfsz	___awdiv@counter,f,c
  1871  000AFE  D7EB               	goto	u2340
  1872  000B00                     l2954:
  1873  000B00  FFFF               	dw	65535	; assembler added errata NOP
  1874  000B02  5058               	movf	___awdiv@sign,w,c
  1875  000B04  B4D8               	btfsc	status,2,c
  1876  000B06  D004               	goto	l2958
  1877  000B08  6C59               	negf	___awdiv@quotient,c
  1878  000B0A  1E5A               	comf	___awdiv@quotient+1,f,c
  1879  000B0C  B0D8               	btfsc	status,0,c
  1880  000B0E  2A5A               	incf	___awdiv@quotient+1,f,c
  1881  000B10                     l2958:
  1882  000B10  FFFF               	dw	65535	; assembler added errata NOP
  1883  000B12  C059  F053         	movff	___awdiv@quotient,?___awdiv
  1884  000B16  C05A  F054         	movff	___awdiv@quotient+1,?___awdiv+1
  1885  000B1A  0012               	return		;funcret
  1886  000B1C  FFFF               	dw	65535	; errata NOP
  1887  000B1E                     __end_of___awdiv:
  1888                           	opt callstack 0
  1889                           
  1890 ;; *************** function _UART_vdSendByte *****************
  1891 ;; Defined at:
  1892 ;;		line 22 in file "UART.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  data            1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  data            1    2[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1906 ;;      Params:         0       0       0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0
  1909 ;;      Totals:         1       0       0       0       0       0       0
  1910 ;;Total ram usage:        1 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    3
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;;		_UART_vdSendu8asASCI
  1918 ;;		_UART_vdSendu16asASCI
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text6
  1923  00105A                     __ptext6:
  1924                           	opt callstack 0
  1925  00105A                     _UART_vdSendByte:
  1926                           	opt callstack 0
  1927  00105A  FFFF               	dw	65535	; assembler added errata NOP
  1928                           
  1929                           ;incstack = 0
  1930                           ;UART_vdSendByte@data stored from wreg
  1931  00105C  6E53               	movwf	UART_vdSendByte@data,c
  1932  00105E  FFFF               	dw	65535	; assembler added errata NOP
  1933                           
  1934                           ;UART.c: 23:  while (!TXIF);
  1935  001060  A89E               	btfss	3998,4,c	;volatile
  1936  001062  D7FD               	goto	l2764
  1937                           
  1938                           ;UART.c: 28:  TXREG = data;
  1939  001064  C053  FFAD         	movff	UART_vdSendByte@data,4013	;volatile
  1940  001068  0012               	return		;funcret
  1941  00106A  FFFF               	dw	65535	; errata NOP
  1942  00106C                     __end_of_UART_vdSendByte:
  1943                           	opt callstack 0
  1944                           
  1945 ;; *************** function _UART_vdInit *****************
  1946 ;; Defined at:
  1947 ;;		line 13 in file "UART.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  baud            2   16[COMRAM] unsigned short 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1961 ;;      Params:         2       0       0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0
  1964 ;;      Totals:         2       0       0       0       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    4
  1968 ;; This function calls:
  1969 ;;		___aldiv
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text7
  1976  000E00                     __ptext7:
  1977                           	opt callstack 0
  1978  000E00                     _UART_vdInit:
  1979                           	opt callstack 0
  1980  000E00  FFFF               	dw	65535	; assembler added errata NOP
  1981                           
  1982                           ;UART.c: 14:  BRGH = 1;
  1983                           
  1984                           ;incstack = 0
  1985  000E02  84AC               	bsf	4012,2,c	;volatile
  1986                           
  1987                           ;UART.c: 15:     SPBRG = ((4000000/16)/baud) - 1;
  1988  000E04  0E90               	movlw	144
  1989  000E06  6E53               	movwf	___aldiv@dividend,c
  1990  000E08  0ED0               	movlw	208
  1991  000E0A  6E54               	movwf	___aldiv@dividend+1,c
  1992  000E0C  0E03               	movlw	3
  1993  000E0E  6E55               	movwf	___aldiv@dividend+2,c
  1994  000E10  0E00               	movlw	0
  1995  000E12  6E56               	movwf	___aldiv@dividend+3,c
  1996  000E14  C061  F057         	movff	UART_vdInit@baud,___aldiv@divisor
  1997  000E18  C062  F058         	movff	UART_vdInit@baud+1,___aldiv@divisor+1
  1998  000E1C  6A59               	clrf	___aldiv@divisor+2,c
  1999  000E1E  6A5A               	clrf	___aldiv@divisor+3,c
  2000  000E20  ECDF  F003         	call	___aldiv	;wreg free
  2001  000E24  0453               	decf	?___aldiv,w,c
  2002  000E26  6EAF               	movwf	4015,c	;volatile
  2003                           
  2004                           ;UART.c: 16:     TXSTAbits.SYNC = 0;
  2005  000E28  98AC               	bcf	4012,4,c	;volatile
  2006                           
  2007                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  2008  000E2A  8EAB               	bsf	4011,7,c	;volatile
  2009                           
  2010                           ;UART.c: 18:     TRISC6 = 0;
  2011  000E2C  9C94               	bcf	3988,6,c	;volatile
  2012                           
  2013                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  2014  000E2E  8AAC               	bsf	4012,5,c	;volatile
  2015  000E30  0012               	return		;funcret
  2016  000E32  FFFF               	dw	65535	; errata NOP
  2017  000E34                     __end_of_UART_vdInit:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function ___aldiv *****************
  2021 ;; Defined at:
  2022 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  dividend        4    2[COMRAM] long 
  2025 ;;  divisor         4    6[COMRAM] long 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  quotient        4   12[COMRAM] long 
  2028 ;;  sign            1   11[COMRAM] unsigned char 
  2029 ;;  counter         1   10[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  4    2[COMRAM] long 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         8       0       0       0       0       0       0
  2040 ;;      Locals:         6       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0
  2042 ;;      Totals:        14       0       0       0       0       0       0
  2043 ;;Total ram usage:       14 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    3
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_UART_vdInit
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text8
  2054  0007BE                     __ptext8:
  2055                           	opt callstack 0
  2056  0007BE                     ___aldiv:
  2057                           	opt callstack 0
  2058  0007BE  FFFF               	dw	65535	; assembler added errata NOP
  2059                           
  2060                           ;incstack = 0
  2061  0007C0  0E00               	movlw	0
  2062  0007C2  6E5C               	movwf	___aldiv@sign,c
  2063  0007C4  AE5A               	btfss	___aldiv@divisor+3,7,c
  2064  0007C6  D00A               	goto	l2882
  2065  0007C8  1E5A               	comf	___aldiv@divisor+3,f,c
  2066  0007CA  1E59               	comf	___aldiv@divisor+2,f,c
  2067  0007CC  1E58               	comf	___aldiv@divisor+1,f,c
  2068  0007CE  6C57               	negf	___aldiv@divisor,c
  2069  0007D0  0E00               	movlw	0
  2070  0007D2  2258               	addwfc	___aldiv@divisor+1,f,c
  2071  0007D4  2259               	addwfc	___aldiv@divisor+2,f,c
  2072  0007D6  225A               	addwfc	___aldiv@divisor+3,f,c
  2073  0007D8  0E01               	movlw	1
  2074  0007DA  6E5C               	movwf	___aldiv@sign,c
  2075  0007DC                     l2882:
  2076  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  2077  0007DE  AE56               	btfss	___aldiv@dividend+3,7,c
  2078  0007E0  D00A               	goto	l2888
  2079  0007E2  1E56               	comf	___aldiv@dividend+3,f,c
  2080  0007E4  1E55               	comf	___aldiv@dividend+2,f,c
  2081  0007E6  1E54               	comf	___aldiv@dividend+1,f,c
  2082  0007E8  6C53               	negf	___aldiv@dividend,c
  2083  0007EA  0E00               	movlw	0
  2084  0007EC  2254               	addwfc	___aldiv@dividend+1,f,c
  2085  0007EE  2255               	addwfc	___aldiv@dividend+2,f,c
  2086  0007F0  2256               	addwfc	___aldiv@dividend+3,f,c
  2087  0007F2  0E01               	movlw	1
  2088  0007F4  1A5C               	xorwf	___aldiv@sign,f,c
  2089  0007F6                     l2888:
  2090  0007F6  FFFF               	dw	65535	; assembler added errata NOP
  2091  0007F8  0E00               	movlw	0
  2092  0007FA  6E5D               	movwf	___aldiv@quotient,c
  2093  0007FC  0E00               	movlw	0
  2094  0007FE  6E5E               	movwf	___aldiv@quotient+1,c
  2095  000800  0E00               	movlw	0
  2096  000802  6E5F               	movwf	___aldiv@quotient+2,c
  2097  000804  0E00               	movlw	0
  2098  000806  6E60               	movwf	___aldiv@quotient+3,c
  2099  000808  5057               	movf	___aldiv@divisor,w,c
  2100  00080A  1058               	iorwf	___aldiv@divisor+1,w,c
  2101  00080C  1059               	iorwf	___aldiv@divisor+2,w,c
  2102  00080E  105A               	iorwf	___aldiv@divisor+3,w,c
  2103  000810  B4D8               	btfsc	status,2,c
  2104  000812  D02E               	goto	l2910
  2105  000814  0E01               	movlw	1
  2106  000816  6E5B               	movwf	___aldiv@counter,c
  2107  000818  D007               	goto	l2896
  2108  00081A                     l2894:
  2109  00081A  FFFF               	dw	65535	; assembler added errata NOP
  2110  00081C  90D8               	bcf	status,0,c
  2111  00081E  3657               	rlcf	___aldiv@divisor,f,c
  2112  000820  3658               	rlcf	___aldiv@divisor+1,f,c
  2113  000822  3659               	rlcf	___aldiv@divisor+2,f,c
  2114  000824  365A               	rlcf	___aldiv@divisor+3,f,c
  2115  000826  2A5B               	incf	___aldiv@counter,f,c
  2116  000828                     l2896:
  2117  000828  FFFF               	dw	65535	; assembler added errata NOP
  2118  00082A  AE5A               	btfss	___aldiv@divisor+3,7,c
  2119  00082C  D7F6               	goto	l2894
  2120  00082E                     u2280:
  2121  00082E  FFFF               	dw	65535	; assembler added errata NOP
  2122  000830  90D8               	bcf	status,0,c
  2123  000832  365D               	rlcf	___aldiv@quotient,f,c
  2124  000834  365E               	rlcf	___aldiv@quotient+1,f,c
  2125  000836  365F               	rlcf	___aldiv@quotient+2,f,c
  2126  000838  3660               	rlcf	___aldiv@quotient+3,f,c
  2127  00083A  5057               	movf	___aldiv@divisor,w,c
  2128  00083C  5C53               	subwf	___aldiv@dividend,w,c
  2129  00083E  5058               	movf	___aldiv@divisor+1,w,c
  2130  000840  5854               	subwfb	___aldiv@dividend+1,w,c
  2131  000842  5059               	movf	___aldiv@divisor+2,w,c
  2132  000844  5855               	subwfb	___aldiv@dividend+2,w,c
  2133  000846  505A               	movf	___aldiv@divisor+3,w,c
  2134  000848  5856               	subwfb	___aldiv@dividend+3,w,c
  2135  00084A  A0D8               	btfss	status,0,c
  2136  00084C  D009               	goto	l2906
  2137  00084E  5057               	movf	___aldiv@divisor,w,c
  2138  000850  5E53               	subwf	___aldiv@dividend,f,c
  2139  000852  5058               	movf	___aldiv@divisor+1,w,c
  2140  000854  5A54               	subwfb	___aldiv@dividend+1,f,c
  2141  000856  5059               	movf	___aldiv@divisor+2,w,c
  2142  000858  5A55               	subwfb	___aldiv@dividend+2,f,c
  2143  00085A  505A               	movf	___aldiv@divisor+3,w,c
  2144  00085C  5A56               	subwfb	___aldiv@dividend+3,f,c
  2145  00085E  805D               	bsf	___aldiv@quotient,0,c
  2146  000860                     l2906:
  2147  000860  FFFF               	dw	65535	; assembler added errata NOP
  2148  000862  90D8               	bcf	status,0,c
  2149  000864  325A               	rrcf	___aldiv@divisor+3,f,c
  2150  000866  3259               	rrcf	___aldiv@divisor+2,f,c
  2151  000868  3258               	rrcf	___aldiv@divisor+1,f,c
  2152  00086A  3257               	rrcf	___aldiv@divisor,f,c
  2153  00086C  2E5B               	decfsz	___aldiv@counter,f,c
  2154  00086E  D7DF               	goto	u2280
  2155  000870                     l2910:
  2156  000870  FFFF               	dw	65535	; assembler added errata NOP
  2157  000872  505C               	movf	___aldiv@sign,w,c
  2158  000874  B4D8               	btfsc	status,2,c
  2159  000876  D008               	goto	l2914
  2160  000878  1E60               	comf	___aldiv@quotient+3,f,c
  2161  00087A  1E5F               	comf	___aldiv@quotient+2,f,c
  2162  00087C  1E5E               	comf	___aldiv@quotient+1,f,c
  2163  00087E  6C5D               	negf	___aldiv@quotient,c
  2164  000880  0E00               	movlw	0
  2165  000882  225E               	addwfc	___aldiv@quotient+1,f,c
  2166  000884  225F               	addwfc	___aldiv@quotient+2,f,c
  2167  000886  2260               	addwfc	___aldiv@quotient+3,f,c
  2168  000888                     l2914:
  2169  000888  FFFF               	dw	65535	; assembler added errata NOP
  2170  00088A  C05D  F053         	movff	___aldiv@quotient,?___aldiv
  2171  00088E  C05E  F054         	movff	___aldiv@quotient+1,?___aldiv+1
  2172  000892  C05F  F055         	movff	___aldiv@quotient+2,?___aldiv+2
  2173  000896  C060  F056         	movff	___aldiv@quotient+3,?___aldiv+3
  2174  00089A  0012               	return		;funcret
  2175  00089C  FFFF               	dw	65535	; errata NOP
  2176  00089E                     __end_of___aldiv:
  2177                           	opt callstack 0
  2178                           
  2179 ;; *************** function _TMR3_vdStop *****************
  2180 ;; Defined at:
  2181 ;;		line 44 in file "TMR3.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		None
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2195 ;;      Params:         0       0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    3
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text9
  2210  0010F0                     __ptext9:
  2211                           	opt callstack 0
  2212  0010F0                     _TMR3_vdStop:
  2213                           	opt callstack 0
  2214  0010F0  FFFF               	dw	65535	; assembler added errata NOP
  2215                           
  2216                           ;TMR3.c: 45:     T3CONbits.TMR3ON = 0;
  2217                           
  2218                           ;incstack = 0
  2219  0010F2  90B1               	bcf	4017,0,c	;volatile
  2220  0010F4  0012               	return		;funcret
  2221  0010F6  FFFF               	dw	65535	; errata NOP
  2222  0010F8                     __end_of_TMR3_vdStop:
  2223                           	opt callstack 0
  2224                           
  2225 ;; *************** function _TMR3_vdSetTMR3Callback *****************
  2226 ;; Defined at:
  2227 ;;		line 59 in file "TMR3.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2230 ;;		 -> tmr3_callback(1), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2242 ;;      Params:         2       0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0
  2245 ;;      Totals:         2       0       0       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    4
  2249 ;; This function calls:
  2250 ;;		_INT_vdSetTMR3Callback
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text10
  2257  000F5C                     __ptext10:
  2258                           	opt callstack 0
  2259  000F5C                     _TMR3_vdSetTMR3Callback:
  2260                           	opt callstack 0
  2261  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ;TMR3.c: 60:     INT_vdSetTMR3Callback(pf,initial);
  2264                           
  2265                           ;incstack = 0
  2266  000F5E  C057  F053         	movff	TMR3_vdSetTMR3Callback@pf,INT_vdSetTMR3Callback@pf
  2267  000F62  C058  F054         	movff	TMR3_vdSetTMR3Callback@pf+1,INT_vdSetTMR3Callback@pf+1
  2268  000F66  C00D  F055         	movff	TMR3@initial,INT_vdSetTMR3Callback@init
  2269  000F6A  C00E  F056         	movff	TMR3@initial+1,INT_vdSetTMR3Callback@init+1
  2270  000F6E  ECE1  F007         	call	_INT_vdSetTMR3Callback	;wreg free
  2271  000F72  0012               	return		;funcret
  2272  000F74  FFFF               	dw	65535	; errata NOP
  2273  000F76                     __end_of_TMR3_vdSetTMR3Callback:
  2274                           	opt callstack 0
  2275                           
  2276 ;; *************** function _INT_vdSetTMR3Callback *****************
  2277 ;; Defined at:
  2278 ;;		line 74 in file "INT.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2281 ;;		 -> tmr3_callback(1), 
  2282 ;;  init            2    4[COMRAM] unsigned int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2294 ;;      Params:         4       0       0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0
  2297 ;;      Totals:         4       0       0       0       0       0       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_TMR3_vdSetTMR3Callback
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text11
  2309  000FC2                     __ptext11:
  2310                           	opt callstack 0
  2311  000FC2                     _INT_vdSetTMR3Callback:
  2312                           	opt callstack 0
  2313  000FC2  FFFF               	dw	65535	; assembler added errata NOP
  2314                           
  2315                           ;INT.c: 75:     callback_TMR3 = pf;
  2316                           
  2317                           ;incstack = 0
  2318  000FC4  C053  F01B         	movff	INT_vdSetTMR3Callback@pf,_callback_TMR3
  2319  000FC8  C054  F01C         	movff	INT_vdSetTMR3Callback@pf+1,_callback_TMR3+1
  2320                           
  2321                           ;INT.c: 76:     initial_tmr3 = init;
  2322  000FCC  C055  F013         	movff	INT_vdSetTMR3Callback@init,_initial_tmr3
  2323  000FD0  C056  F014         	movff	INT_vdSetTMR3Callback@init+1,_initial_tmr3+1
  2324  000FD4  0012               	return		;funcret
  2325  000FD6  FFFF               	dw	65535	; errata NOP
  2326  000FD8                     __end_of_INT_vdSetTMR3Callback:
  2327                           	opt callstack 0
  2328                           
  2329 ;; *************** function _TMR3_vdInit *****************
  2330 ;; Defined at:
  2331 ;;		line 15 in file "TMR3.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  mode            1    wreg     unsigned char 
  2334 ;;  bits            1    2[COMRAM] unsigned char 
  2335 ;;  prescaler       1    3[COMRAM] unsigned char 
  2336 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  2337 ;;  init            2    5[COMRAM] unsigned int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  mode            1    9[COMRAM] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2349 ;;      Params:         5       0       0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0       0       0
  2351 ;;      Temps:          2       0       0       0       0       0       0
  2352 ;;      Totals:         8       0       0       0       0       0       0
  2353 ;;Total ram usage:        8 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    3
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text12
  2364  000BB2                     __ptext12:
  2365                           	opt callstack 0
  2366  000BB2                     _TMR3_vdInit:
  2367                           	opt callstack 0
  2368  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  2369                           
  2370                           ;incstack = 0
  2371                           ;TMR3_vdInit@mode stored from wreg
  2372  000BB4  6E5A               	movwf	TMR3_vdInit@mode,c
  2373                           
  2374                           ;TMR3.c: 16:     switch(mode){
  2375  000BB6  D006               	goto	l3082
  2376  000BB8                     l609:
  2377  000BB8  FFFF               	dw	65535	; assembler added errata NOP
  2378                           
  2379                           ;TMR3.c: 18:             T3CONbits.TMR3CS = 1;
  2380  000BBA  82B1               	bsf	4017,1,c	;volatile
  2381                           
  2382                           ;TMR3.c: 19:             break;
  2383  000BBC  D012               	goto	l610
  2384  000BBE                     l611:
  2385  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  2386                           
  2387                           ;TMR3.c: 21:             T3CONbits.TMR3CS = 0;
  2388  000BC0  92B1               	bcf	4017,1,c	;volatile
  2389                           
  2390                           ;TMR3.c: 22:             break;
  2391  000BC2  D00F               	goto	l610
  2392  000BC4                     l3082:
  2393  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  2394  000BC6  505A               	movf	TMR3_vdInit@mode,w,c
  2395  000BC8  6E58               	movwf	??_TMR3_vdInit& (0+255),c
  2396  000BCA  6A59               	clrf	(??_TMR3_vdInit+1)& (0+255),c
  2397                           
  2398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 1, Range of values is 0 to 0
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte            4     3 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405  000BCC  5059               	movf	??_TMR3_vdInit+1,w,c
  2406  000BCE  0A00               	xorlw	0	; case 0
  2407  000BD0  A4D8               	btfss	status,2,c
  2408  000BD2  D007               	goto	l610
  2409                           
  2410                           ; Switch size 1, requested type "simple"
  2411                           ; Number of cases is 2, Range of values is 0 to 1
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte            7     4 (average)
  2415                           ;	Chosen strategy is simple_byte
  2416  000BD4  5058               	movf	??_TMR3_vdInit,w,c
  2417  000BD6  0A00               	xorlw	0	; case 0
  2418  000BD8  B4D8               	btfsc	status,2,c
  2419  000BDA  D7F1               	goto	l611
  2420  000BDC  0A01               	xorlw	1	; case 1
  2421  000BDE  B4D8               	btfsc	status,2,c
  2422  000BE0  D7EB               	goto	l609
  2423  000BE2                     l610:
  2424  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  2425                           
  2426                           ;TMR3.c: 25:     T3CONbits.RD16 = bits;
  2427  000BE4  B053               	btfsc	TMR3_vdInit@bits,0,c
  2428  000BE6  D002               	bra	u2445
  2429  000BE8  9EB1               	bcf	4017,7,c	;volatile
  2430  000BEA  D001               	bra	u2446
  2431  000BEC                     u2445:
  2432  000BEC  8EB1               	bsf	4017,7,c	;volatile
  2433  000BEE                     u2446:
  2434                           
  2435                           ;TMR3.c: 27:     switch(prescaler){
  2436  000BEE  D00E               	goto	l3090
  2437  000BF0                     l3084:
  2438  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  2439                           
  2440                           ;TMR3.c: 29:             T3CONbits.T3CKPS = 0;
  2441  000BF2  0ECF               	movlw	-49
  2442  000BF4  16B1               	andwf	4017,f,c	;volatile
  2443                           
  2444                           ;TMR3.c: 30:             break;
  2445  000BF6  D019               	goto	l614
  2446  000BF8                     l3086:
  2447  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  2448                           
  2449                           ;TMR3.c: 32:             T3CONbits.T3CKPS = prescaler_value;
  2450  000BFA  C055  F058         	movff	TMR3_vdInit@prescaler_value,??_TMR3_vdInit
  2451  000BFE  3A58               	swapf	??_TMR3_vdInit,f,c
  2452  000C00  50B1               	movf	4017,w,c	;volatile
  2453  000C02  1858               	xorwf	??_TMR3_vdInit,w,c
  2454  000C04  0BCF               	andlw	-49
  2455  000C06  1858               	xorwf	??_TMR3_vdInit,w,c
  2456  000C08  6EB1               	movwf	4017,c	;volatile
  2457                           
  2458                           ;TMR3.c: 33:             break;
  2459  000C0A  D00F               	goto	l614
  2460  000C0C                     l3090:
  2461  000C0C  FFFF               	dw	65535	; assembler added errata NOP
  2462  000C0E  5054               	movf	TMR3_vdInit@prescaler,w,c
  2463  000C10  6E58               	movwf	??_TMR3_vdInit& (0+255),c
  2464  000C12  6A59               	clrf	(??_TMR3_vdInit+1)& (0+255),c
  2465                           
  2466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2467                           ; Switch size 1, requested type "simple"
  2468                           ; Number of cases is 1, Range of values is 0 to 0
  2469                           ; switch strategies available:
  2470                           ; Name         Instructions Cycles
  2471                           ; simple_byte            4     3 (average)
  2472                           ;	Chosen strategy is simple_byte
  2473  000C14  5059               	movf	??_TMR3_vdInit+1,w,c
  2474  000C16  0A00               	xorlw	0	; case 0
  2475  000C18  A4D8               	btfss	status,2,c
  2476  000C1A  D007               	goto	l614
  2477                           
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 2, Range of values is 0 to 1
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte            7     4 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484  000C1C  5058               	movf	??_TMR3_vdInit,w,c
  2485  000C1E  0A00               	xorlw	0	; case 0
  2486  000C20  B4D8               	btfsc	status,2,c
  2487  000C22  D7E6               	goto	l3084
  2488  000C24  0A01               	xorlw	1	; case 1
  2489  000C26  B4D8               	btfsc	status,2,c
  2490  000C28  D7E7               	goto	l3086
  2491  000C2A                     l614:
  2492  000C2A  FFFF               	dw	65535	; assembler added errata NOP
  2493                           
  2494                           ;TMR3.c: 37:     TMR3IF = 0;
  2495  000C2C  92A1               	bcf	4001,1,c	;volatile
  2496                           
  2497                           ;TMR3.c: 38:     initial = init;
  2498  000C2E  C056  F00D         	movff	TMR3_vdInit@init,TMR3@initial
  2499  000C32  C057  F00E         	movff	TMR3_vdInit@init+1,TMR3@initial+1
  2500                           
  2501                           ;TMR3.c: 39:     TMR3L = initial;
  2502  000C36  C00D  FFB2         	movff	TMR3@initial,4018	;volatile
  2503                           
  2504                           ;TMR3.c: 40:     TMR3H = (initial>>8);
  2505  000C3A  500E               	movf	TMR3@initial+1,w,c
  2506  000C3C  6EB3               	movwf	4019,c	;volatile
  2507                           
  2508                           ;TMR3.c: 41:     T3CONbits.TMR3ON = 1;
  2509  000C3E  80B1               	bsf	4017,0,c	;volatile
  2510  000C40  0012               	return		;funcret
  2511  000C42  FFFF               	dw	65535	; errata NOP
  2512  000C44                     __end_of_TMR3_vdInit:
  2513                           	opt callstack 0
  2514                           
  2515 ;; *************** function _TMR1_vdStop *****************
  2516 ;; Defined at:
  2517 ;;		line 44 in file "TMR1.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		None
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2531 ;;      Params:         0       0       0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text13
  2546  0010F8                     __ptext13:
  2547                           	opt callstack 0
  2548  0010F8                     _TMR1_vdStop:
  2549                           	opt callstack 0
  2550  0010F8  FFFF               	dw	65535	; assembler added errata NOP
  2551                           
  2552                           ;TMR1.c: 45:     T1CONbits.TMR1ON = 0;
  2553                           
  2554                           ;incstack = 0
  2555  0010FA  90CD               	bcf	4045,0,c	;volatile
  2556  0010FC  0012               	return		;funcret
  2557  0010FE  FFFF               	dw	65535	; errata NOP
  2558  001100                     __end_of_TMR1_vdStop:
  2559                           	opt callstack 0
  2560                           
  2561 ;; *************** function _TMR1_vdSetTMR1Callback *****************
  2562 ;; Defined at:
  2563 ;;		line 59 in file "TMR1.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2566 ;;		 -> tmr1_callback(1), 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         2       0       0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    4
  2585 ;; This function calls:
  2586 ;;		_INT_vdSetTMR1Callback
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593  000F76                     __ptext14:
  2594                           	opt callstack 0
  2595  000F76                     _TMR1_vdSetTMR1Callback:
  2596                           	opt callstack 0
  2597  000F76  FFFF               	dw	65535	; assembler added errata NOP
  2598                           
  2599                           ;TMR1.c: 60:     INT_vdSetTMR1Callback(pf,initial);
  2600                           
  2601                           ;incstack = 0
  2602  000F78  C057  F053         	movff	TMR1_vdSetTMR1Callback@pf,INT_vdSetTMR1Callback@pf
  2603  000F7C  C058  F054         	movff	TMR1_vdSetTMR1Callback@pf+1,INT_vdSetTMR1Callback@pf+1
  2604  000F80  C00F  F055         	movff	TMR1@initial,INT_vdSetTMR1Callback@init
  2605  000F84  C010  F056         	movff	TMR1@initial+1,INT_vdSetTMR1Callback@init+1
  2606  000F88  ECEC  F007         	call	_INT_vdSetTMR1Callback	;wreg free
  2607  000F8C  0012               	return		;funcret
  2608  000F8E  FFFF               	dw	65535	; errata NOP
  2609  000F90                     __end_of_TMR1_vdSetTMR1Callback:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _INT_vdSetTMR1Callback *****************
  2613 ;; Defined at:
  2614 ;;		line 70 in file "INT.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2617 ;;		 -> tmr1_callback(1), 
  2618 ;;  init            2    4[COMRAM] unsigned int 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2630 ;;      Params:         4       0       0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0
  2633 ;;      Totals:         4       0       0       0       0       0       0
  2634 ;;Total ram usage:        4 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    3
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_TMR1_vdSetTMR1Callback
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text15
  2645  000FD8                     __ptext15:
  2646                           	opt callstack 0
  2647  000FD8                     _INT_vdSetTMR1Callback:
  2648                           	opt callstack 0
  2649  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  2650                           
  2651                           ;INT.c: 71:     callback_TMR1 = pf;
  2652                           
  2653                           ;incstack = 0
  2654  000FDA  C053  F01D         	movff	INT_vdSetTMR1Callback@pf,_callback_TMR1
  2655  000FDE  C054  F01E         	movff	INT_vdSetTMR1Callback@pf+1,_callback_TMR1+1
  2656                           
  2657                           ;INT.c: 72:     initial_tmr1 = init;
  2658  000FE2  C055  F015         	movff	INT_vdSetTMR1Callback@init,_initial_tmr1
  2659  000FE6  C056  F016         	movff	INT_vdSetTMR1Callback@init+1,_initial_tmr1+1
  2660  000FEA  0012               	return		;funcret
  2661  000FEC  FFFF               	dw	65535	; errata NOP
  2662  000FEE                     __end_of_INT_vdSetTMR1Callback:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _TMR1_vdInit *****************
  2666 ;; Defined at:
  2667 ;;		line 15 in file "TMR1.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  mode            1    wreg     unsigned char 
  2670 ;;  bits            1    2[COMRAM] unsigned char 
  2671 ;;  prescaler       1    3[COMRAM] unsigned char 
  2672 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  2673 ;;  init            2    5[COMRAM] unsigned int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  mode            1    9[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2685 ;;      Params:         5       0       0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0
  2687 ;;      Temps:          2       0       0       0       0       0       0
  2688 ;;      Totals:         8       0       0       0       0       0       0
  2689 ;;Total ram usage:        8 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    3
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text16
  2700  000B1E                     __ptext16:
  2701                           	opt callstack 0
  2702  000B1E                     _TMR1_vdInit:
  2703                           	opt callstack 0
  2704  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  2705                           
  2706                           ;incstack = 0
  2707                           ;TMR1_vdInit@mode stored from wreg
  2708  000B20  6E5A               	movwf	TMR1_vdInit@mode,c
  2709                           
  2710                           ;TMR1.c: 16:     switch(mode){
  2711  000B22  D006               	goto	l3052
  2712  000B24                     l511:
  2713  000B24  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ;TMR1.c: 18:             T1CONbits.TMR1CS = 1;
  2716  000B26  82CD               	bsf	4045,1,c	;volatile
  2717                           
  2718                           ;TMR1.c: 19:             break;
  2719  000B28  D012               	goto	l512
  2720  000B2A                     l513:
  2721  000B2A  FFFF               	dw	65535	; assembler added errata NOP
  2722                           
  2723                           ;TMR1.c: 21:             T1CONbits.TMR1CS = 0;
  2724  000B2C  92CD               	bcf	4045,1,c	;volatile
  2725                           
  2726                           ;TMR1.c: 22:             break;
  2727  000B2E  D00F               	goto	l512
  2728  000B30                     l3052:
  2729  000B30  FFFF               	dw	65535	; assembler added errata NOP
  2730  000B32  505A               	movf	TMR1_vdInit@mode,w,c
  2731  000B34  6E58               	movwf	??_TMR1_vdInit& (0+255),c
  2732  000B36  6A59               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2733                           
  2734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2735                           ; Switch size 1, requested type "simple"
  2736                           ; Number of cases is 1, Range of values is 0 to 0
  2737                           ; switch strategies available:
  2738                           ; Name         Instructions Cycles
  2739                           ; simple_byte            4     3 (average)
  2740                           ;	Chosen strategy is simple_byte
  2741  000B38  5059               	movf	??_TMR1_vdInit+1,w,c
  2742  000B3A  0A00               	xorlw	0	; case 0
  2743  000B3C  A4D8               	btfss	status,2,c
  2744  000B3E  D007               	goto	l512
  2745                           
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 2, Range of values is 0 to 1
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte            7     4 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752  000B40  5058               	movf	??_TMR1_vdInit,w,c
  2753  000B42  0A00               	xorlw	0	; case 0
  2754  000B44  B4D8               	btfsc	status,2,c
  2755  000B46  D7F1               	goto	l513
  2756  000B48  0A01               	xorlw	1	; case 1
  2757  000B4A  B4D8               	btfsc	status,2,c
  2758  000B4C  D7EB               	goto	l511
  2759  000B4E                     l512:
  2760  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2761                           
  2762                           ;TMR1.c: 25:     T1CONbits.RD16 = bits;
  2763  000B50  B053               	btfsc	TMR1_vdInit@bits,0,c
  2764  000B52  D002               	bra	u2435
  2765  000B54  9ECD               	bcf	4045,7,c	;volatile
  2766  000B56  D001               	bra	u2436
  2767  000B58                     u2435:
  2768  000B58  8ECD               	bsf	4045,7,c	;volatile
  2769  000B5A                     u2436:
  2770                           
  2771                           ;TMR1.c: 27:     switch(prescaler){
  2772  000B5A  D00E               	goto	l3060
  2773  000B5C                     l3054:
  2774  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  2775                           
  2776                           ;TMR1.c: 29:             T1CONbits.T1CKPS = 0;
  2777  000B5E  0ECF               	movlw	-49
  2778  000B60  16CD               	andwf	4045,f,c	;volatile
  2779                           
  2780                           ;TMR1.c: 30:             break;
  2781  000B62  D019               	goto	l516
  2782  000B64                     l3056:
  2783  000B64  FFFF               	dw	65535	; assembler added errata NOP
  2784                           
  2785                           ;TMR1.c: 32:             T1CONbits.T1CKPS = prescaler_value;
  2786  000B66  C055  F058         	movff	TMR1_vdInit@prescaler_value,??_TMR1_vdInit
  2787  000B6A  3A58               	swapf	??_TMR1_vdInit,f,c
  2788  000B6C  50CD               	movf	4045,w,c	;volatile
  2789  000B6E  1858               	xorwf	??_TMR1_vdInit,w,c
  2790  000B70  0BCF               	andlw	-49
  2791  000B72  1858               	xorwf	??_TMR1_vdInit,w,c
  2792  000B74  6ECD               	movwf	4045,c	;volatile
  2793                           
  2794                           ;TMR1.c: 33:             break;
  2795  000B76  D00F               	goto	l516
  2796  000B78                     l3060:
  2797  000B78  FFFF               	dw	65535	; assembler added errata NOP
  2798  000B7A  5054               	movf	TMR1_vdInit@prescaler,w,c
  2799  000B7C  6E58               	movwf	??_TMR1_vdInit& (0+255),c
  2800  000B7E  6A59               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809  000B80  5059               	movf	??_TMR1_vdInit+1,w,c
  2810  000B82  0A00               	xorlw	0	; case 0
  2811  000B84  A4D8               	btfss	status,2,c
  2812  000B86  D007               	goto	l516
  2813                           
  2814                           ; Switch size 1, requested type "simple"
  2815                           ; Number of cases is 2, Range of values is 0 to 1
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte            7     4 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820  000B88  5058               	movf	??_TMR1_vdInit,w,c
  2821  000B8A  0A00               	xorlw	0	; case 0
  2822  000B8C  B4D8               	btfsc	status,2,c
  2823  000B8E  D7E6               	goto	l3054
  2824  000B90  0A01               	xorlw	1	; case 1
  2825  000B92  B4D8               	btfsc	status,2,c
  2826  000B94  D7E7               	goto	l3056
  2827  000B96                     l516:
  2828  000B96  FFFF               	dw	65535	; assembler added errata NOP
  2829                           
  2830                           ;TMR1.c: 36:     T1CONbits.T1OSCEN = 0;
  2831  000B98  96CD               	bcf	4045,3,c	;volatile
  2832                           
  2833                           ;TMR1.c: 37:     TMR1IF = 0;
  2834  000B9A  909E               	bcf	3998,0,c	;volatile
  2835                           
  2836                           ;TMR1.c: 38:     initial = init;
  2837  000B9C  C056  F00F         	movff	TMR1_vdInit@init,TMR1@initial
  2838  000BA0  C057  F010         	movff	TMR1_vdInit@init+1,TMR1@initial+1
  2839                           
  2840                           ;TMR1.c: 39:     TMR1L = initial;
  2841  000BA4  C00F  FFCE         	movff	TMR1@initial,4046	;volatile
  2842                           
  2843                           ;TMR1.c: 40:     TMR1H = (initial>>8);
  2844  000BA8  5010               	movf	TMR1@initial+1,w,c
  2845  000BAA  6ECF               	movwf	4047,c	;volatile
  2846                           
  2847                           ;TMR1.c: 41:     T1CONbits.TMR1ON = 1;
  2848  000BAC  80CD               	bsf	4045,0,c	;volatile
  2849  000BAE  0012               	return		;funcret
  2850  000BB0  FFFF               	dw	65535	; errata NOP
  2851  000BB2                     __end_of_TMR1_vdInit:
  2852                           	opt callstack 0
  2853                           
  2854 ;; *************** function _TMR0_vdStop *****************
  2855 ;; Defined at:
  2856 ;;		line 51 in file "TMR0.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		None
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2870 ;;      Params:         0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0
  2873 ;;      Totals:         0       0       0       0       0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    3
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text17
  2885  001100                     __ptext17:
  2886                           	opt callstack 0
  2887  001100                     _TMR0_vdStop:
  2888                           	opt callstack 0
  2889  001100  FFFF               	dw	65535	; assembler added errata NOP
  2890                           
  2891                           ;TMR0.c: 52:     T0CONbits.TMR0ON = 0;
  2892                           
  2893                           ;incstack = 0
  2894  001102  9ED5               	bcf	4053,7,c	;volatile
  2895  001104  0012               	return		;funcret
  2896  001106  FFFF               	dw	65535	; errata NOP
  2897  001108                     __end_of_TMR0_vdStop:
  2898                           	opt callstack 0
  2899                           
  2900 ;; *************** function _TMR0_vdSetTMR0Callback *****************
  2901 ;; Defined at:
  2902 ;;		line 66 in file "TMR0.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  pf              2    6[COMRAM] PTR FTN()void 
  2905 ;;		 -> tmr0_callback(1), 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2917 ;;      Params:         2       0       0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0
  2920 ;;      Totals:         2       0       0       0       0       0       0
  2921 ;;Total ram usage:        2 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    4
  2924 ;; This function calls:
  2925 ;;		_INT_vdSetTMR0Callback
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text18
  2932  000F90                     __ptext18:
  2933                           	opt callstack 0
  2934  000F90                     _TMR0_vdSetTMR0Callback:
  2935                           	opt callstack 0
  2936  000F90  FFFF               	dw	65535	; assembler added errata NOP
  2937                           
  2938                           ;TMR0.c: 67:     INT_vdSetTMR0Callback(pf,initial);
  2939                           
  2940                           ;incstack = 0
  2941  000F92  C057  F053         	movff	TMR0_vdSetTMR0Callback@pf,INT_vdSetTMR0Callback@pf
  2942  000F96  C058  F054         	movff	TMR0_vdSetTMR0Callback@pf+1,INT_vdSetTMR0Callback@pf+1
  2943  000F9A  C011  F055         	movff	_initial,INT_vdSetTMR0Callback@init
  2944  000F9E  C012  F056         	movff	_initial+1,INT_vdSetTMR0Callback@init+1
  2945  000FA2  ECF7  F007         	call	_INT_vdSetTMR0Callback	;wreg free
  2946  000FA6  0012               	return		;funcret
  2947  000FA8  FFFF               	dw	65535	; errata NOP
  2948  000FAA                     __end_of_TMR0_vdSetTMR0Callback:
  2949                           	opt callstack 0
  2950                           
  2951 ;; *************** function _INT_vdSetTMR0Callback *****************
  2952 ;; Defined at:
  2953 ;;		line 66 in file "INT.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  pf              2    2[COMRAM] PTR FTN()void 
  2956 ;;		 -> tmr0_callback(1), 
  2957 ;;  init            2    4[COMRAM] unsigned int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         4       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0
  2972 ;;      Totals:         4       0       0       0       0       0       0
  2973 ;;Total ram usage:        4 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    3
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_TMR0_vdSetTMR0Callback
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text19
  2984  000FEE                     __ptext19:
  2985                           	opt callstack 0
  2986  000FEE                     _INT_vdSetTMR0Callback:
  2987                           	opt callstack 0
  2988  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  2989                           
  2990                           ;INT.c: 67:     callback_TMR0 = pf;
  2991                           
  2992                           ;incstack = 0
  2993  000FF0  C053  F01F         	movff	INT_vdSetTMR0Callback@pf,_callback_TMR0
  2994  000FF4  C054  F020         	movff	INT_vdSetTMR0Callback@pf+1,_callback_TMR0+1
  2995                           
  2996                           ;INT.c: 68:     initial_tmr0 = init;
  2997  000FF8  C055  F017         	movff	INT_vdSetTMR0Callback@init,_initial_tmr0
  2998  000FFC  C056  F018         	movff	INT_vdSetTMR0Callback@init+1,_initial_tmr0+1
  2999  001000  0012               	return		;funcret
  3000  001002  FFFF               	dw	65535	; errata NOP
  3001  001004                     __end_of_INT_vdSetTMR0Callback:
  3002                           	opt callstack 0
  3003                           
  3004 ;; *************** function _TMR0_vdInit *****************
  3005 ;; Defined at:
  3006 ;;		line 15 in file "TMR0.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  mode            1    wreg     unsigned char 
  3009 ;;  bits            1    2[COMRAM] unsigned char 
  3010 ;;  prescaler       1    3[COMRAM] unsigned char 
  3011 ;;  prescaler_va    1    4[COMRAM] unsigned char 
  3012 ;;  init            2    5[COMRAM] unsigned int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  mode            1    9[COMRAM] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         5       0       0       0       0       0       0
  3025 ;;      Locals:         1       0       0       0       0       0       0
  3026 ;;      Temps:          2       0       0       0       0       0       0
  3027 ;;      Totals:         8       0       0       0       0       0       0
  3028 ;;Total ram usage:        8 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text20
  3039  00089E                     __ptext20:
  3040                           	opt callstack 0
  3041  00089E                     _TMR0_vdInit:
  3042                           	opt callstack 0
  3043  00089E  FFFF               	dw	65535	; assembler added errata NOP
  3044                           
  3045                           ;incstack = 0
  3046                           ;TMR0_vdInit@mode stored from wreg
  3047  0008A0  6E5A               	movwf	TMR0_vdInit@mode,c
  3048                           
  3049                           ;TMR0.c: 16:     switch(mode){
  3050  0008A2  D006               	goto	l3012
  3051  0008A4                     l472:
  3052  0008A4  FFFF               	dw	65535	; assembler added errata NOP
  3053                           
  3054                           ;TMR0.c: 18:             T0CONbits.T0CS = 1;
  3055  0008A6  8AD5               	bsf	4053,5,c	;volatile
  3056                           
  3057                           ;TMR0.c: 19:             break;
  3058  0008A8  D019               	goto	l3016
  3059  0008AA                     l474:
  3060  0008AA  FFFF               	dw	65535	; assembler added errata NOP
  3061                           
  3062                           ;TMR0.c: 21:             T0CONbits.T0CS = 0;
  3063  0008AC  9AD5               	bcf	4053,5,c	;volatile
  3064                           
  3065                           ;TMR0.c: 22:             break;
  3066  0008AE  D016               	goto	l3016
  3067  0008B0                     l3012:
  3068  0008B0  FFFF               	dw	65535	; assembler added errata NOP
  3069  0008B2  505A               	movf	TMR0_vdInit@mode,w,c
  3070  0008B4  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  3071  0008B6  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  3072                           
  3073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3074                           ; Switch size 1, requested type "simple"
  3075                           ; Number of cases is 1, Range of values is 0 to 0
  3076                           ; switch strategies available:
  3077                           ; Name         Instructions Cycles
  3078                           ; simple_byte            4     3 (average)
  3079                           ;	Chosen strategy is simple_byte
  3080  0008B8  5059               	movf	??_TMR0_vdInit+1,w,c
  3081  0008BA  0A00               	xorlw	0	; case 0
  3082  0008BC  A4D8               	btfss	status,2,c
  3083  0008BE  D00E               	goto	l3016
  3084                           
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 2, Range of values is 0 to 1
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte            7     4 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  0008C0  5058               	movf	??_TMR0_vdInit,w,c
  3092  0008C2  0A00               	xorlw	0	; case 0
  3093  0008C4  B4D8               	btfsc	status,2,c
  3094  0008C6  D7F1               	goto	l474
  3095  0008C8  0A01               	xorlw	1	; case 1
  3096  0008CA  B4D8               	btfsc	status,2,c
  3097  0008CC  D7EB               	goto	l472
  3098  0008CE  D006               	goto	l3016
  3099  0008D0                     l476:
  3100  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  3101                           
  3102                           ;TMR0.c: 26:             T0CONbits.T08BIT = 1;
  3103  0008D2  8CD5               	bsf	4053,6,c	;volatile
  3104                           
  3105                           ;TMR0.c: 27:             break;
  3106  0008D4  D012               	goto	l477
  3107  0008D6                     l478:
  3108  0008D6  FFFF               	dw	65535	; assembler added errata NOP
  3109                           
  3110                           ;TMR0.c: 29:             T0CONbits.T08BIT = 0;
  3111  0008D8  9CD5               	bcf	4053,6,c	;volatile
  3112                           
  3113                           ;TMR0.c: 30:             break;
  3114  0008DA  D00F               	goto	l477
  3115  0008DC                     l3016:
  3116  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3117  0008DE  5053               	movf	TMR0_vdInit@bits,w,c
  3118  0008E0  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  3119  0008E2  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  3120                           
  3121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3122                           ; Switch size 1, requested type "simple"
  3123                           ; Number of cases is 1, Range of values is 0 to 0
  3124                           ; switch strategies available:
  3125                           ; Name         Instructions Cycles
  3126                           ; simple_byte            4     3 (average)
  3127                           ;	Chosen strategy is simple_byte
  3128  0008E4  5059               	movf	??_TMR0_vdInit+1,w,c
  3129  0008E6  0A00               	xorlw	0	; case 0
  3130  0008E8  A4D8               	btfss	status,2,c
  3131  0008EA  D007               	goto	l477
  3132                           
  3133                           ; Switch size 1, requested type "simple"
  3134                           ; Number of cases is 2, Range of values is 0 to 1
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; simple_byte            7     4 (average)
  3138                           ;	Chosen strategy is simple_byte
  3139  0008EC  5058               	movf	??_TMR0_vdInit,w,c
  3140  0008EE  0A00               	xorlw	0	; case 0
  3141  0008F0  B4D8               	btfsc	status,2,c
  3142  0008F2  D7EE               	goto	l476
  3143  0008F4  0A01               	xorlw	1	; case 1
  3144  0008F6  B4D8               	btfsc	status,2,c
  3145  0008F8  D7EE               	goto	l478
  3146  0008FA                     l477:
  3147  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  3148                           
  3149                           ;TMR0.c: 33:     T0CONbits.T0SE = 0;
  3150  0008FC  98D5               	bcf	4053,4,c	;volatile
  3151                           
  3152                           ;TMR0.c: 35:     switch(prescaler){
  3153  0008FE  D006               	goto	l3020
  3154  000900                     l480:
  3155  000900  FFFF               	dw	65535	; assembler added errata NOP
  3156                           
  3157                           ;TMR0.c: 37:             T0CONbits.PSA = 1;
  3158  000902  86D5               	bsf	4053,3,c	;volatile
  3159                           
  3160                           ;TMR0.c: 38:             break;
  3161  000904  D012               	goto	l3022
  3162  000906                     l482:
  3163  000906  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;TMR0.c: 40:             T0CONbits.PSA = 0;
  3166  000908  96D5               	bcf	4053,3,c	;volatile
  3167                           
  3168                           ;TMR0.c: 41:             break;
  3169  00090A  D00F               	goto	l3022
  3170  00090C                     l3020:
  3171  00090C  FFFF               	dw	65535	; assembler added errata NOP
  3172  00090E  5054               	movf	TMR0_vdInit@prescaler,w,c
  3173  000910  6E58               	movwf	??_TMR0_vdInit& (0+255),c
  3174  000912  6A59               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183  000914  5059               	movf	??_TMR0_vdInit+1,w,c
  3184  000916  0A00               	xorlw	0	; case 0
  3185  000918  A4D8               	btfss	status,2,c
  3186  00091A  D007               	goto	l3022
  3187                           
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 2, Range of values is 0 to 1
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte            7     4 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194  00091C  5058               	movf	??_TMR0_vdInit,w,c
  3195  00091E  0A00               	xorlw	0	; case 0
  3196  000920  B4D8               	btfsc	status,2,c
  3197  000922  D7EE               	goto	l480
  3198  000924  0A01               	xorlw	1	; case 1
  3199  000926  B4D8               	btfsc	status,2,c
  3200  000928  D7EE               	goto	l482
  3201  00092A                     l3022:
  3202  00092A  FFFF               	dw	65535	; assembler added errata NOP
  3203                           
  3204                           ;TMR0.c: 44:     T0CONbits.T0PS = prescaler_value;
  3205  00092C  50D5               	movf	4053,w,c	;volatile
  3206  00092E  1855               	xorwf	TMR0_vdInit@prescaler_value,w,c
  3207  000930  0BF8               	andlw	-8
  3208  000932  1855               	xorwf	TMR0_vdInit@prescaler_value,w,c
  3209  000934  6ED5               	movwf	4053,c	;volatile
  3210                           
  3211                           ;TMR0.c: 45:     initial = init;
  3212  000936  C056  F011         	movff	TMR0_vdInit@init,_initial
  3213  00093A  C057  F012         	movff	TMR0_vdInit@init+1,_initial+1
  3214                           
  3215                           ;TMR0.c: 46:     TMR0L = initial;
  3216  00093E  C011  FFD6         	movff	_initial,4054	;volatile
  3217                           
  3218                           ;TMR0.c: 47:     TMR0H = (initial>>8);
  3219  000942  5012               	movf	_initial+1,w,c
  3220  000944  6ED7               	movwf	4055,c	;volatile
  3221                           
  3222                           ;TMR0.c: 48:     T0CONbits.TMR0ON = 1;
  3223  000946  8ED5               	bsf	4053,7,c	;volatile
  3224  000948  0012               	return		;funcret
  3225  00094A  FFFF               	dw	65535	; errata NOP
  3226  00094C                     __end_of_TMR0_vdInit:
  3227                           	opt callstack 0
  3228                           
  3229 ;; *************** function _LED_vdSetStatus *****************
  3230 ;; Defined at:
  3231 ;;		line 25 in file "LED.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  led             2    7[COMRAM] PTR struct .
  3234 ;;		 -> LED4(7), LED3(7), LED2(7), LED1(7), 
  3235 ;;  status          1    9[COMRAM] unsigned char 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         3       0       0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0
  3250 ;;      Totals:         3       0       0       0       0       0       0
  3251 ;;Total ram usage:        3 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    4
  3254 ;; This function calls:
  3255 ;;		_DIO_vdWritePin
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262  000EC4                     __ptext21:
  3263                           	opt callstack 0
  3264  000EC4                     _LED_vdSetStatus:
  3265                           	opt callstack 0
  3266  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  3267                           
  3268                           ;LED.c: 26:  DIO_vdWritePin(status,led->PORT,led->pin);
  3269                           
  3270                           ;incstack = 0
  3271  000EC6  C058  FFD9         	movff	LED_vdSetStatus@led,fsr2l
  3272  000ECA  C059  FFDA         	movff	LED_vdSetStatus@led+1,fsr2h
  3273  000ECE  50DF               	movf	indf2,w,c
  3274  000ED0  6E53               	movwf	DIO_vdWritePin@port,c
  3275  000ED2  EE20 F001          	lfsr	2,1
  3276  000ED6  5058               	movf	LED_vdSetStatus@led,w,c
  3277  000ED8  26D9               	addwf	fsr2l,f,c
  3278  000EDA  5059               	movf	LED_vdSetStatus@led+1,w,c
  3279  000EDC  22DA               	addwfc	fsr2h,f,c
  3280  000EDE  50DF               	movf	indf2,w,c
  3281  000EE0  6E54               	movwf	DIO_vdWritePin@pin,c
  3282  000EE2  505A               	movf	LED_vdSetStatus@status,w,c
  3283  000EE4  EC89  F002         	call	_DIO_vdWritePin
  3284  000EE8  0012               	return		;funcret
  3285  000EEA  FFFF               	dw	65535	; errata NOP
  3286  000EEC                     __end_of_LED_vdSetStatus:
  3287                           	opt callstack 0
  3288                           
  3289 ;; *************** function _DIO_vdWritePin *****************
  3290 ;; Defined at:
  3291 ;;		line 19 in file "DIO.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  data            1    wreg     unsigned char 
  3294 ;;  port            1    2[COMRAM] unsigned char 
  3295 ;;  pin             1    3[COMRAM] unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  data            1    6[COMRAM] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3307 ;;      Params:         2       0       0       0       0       0       0
  3308 ;;      Locals:         1       0       0       0       0       0       0
  3309 ;;      Temps:          2       0       0       0       0       0       0
  3310 ;;      Totals:         5       0       0       0       0       0       0
  3311 ;;Total ram usage:        5 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    3
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_LED_vdSetStatus
  3318 ;;		_LED_vdOn
  3319 ;;		_LED_vdOff
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text22
  3324  000512                     __ptext22:
  3325                           	opt callstack 0
  3326  000512                     _DIO_vdWritePin:
  3327                           	opt callstack 0
  3328  000512  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ;incstack = 0
  3331                           ;DIO_vdWritePin@data stored from wreg
  3332  000514  6E57               	movwf	DIO_vdWritePin@data,c
  3333                           
  3334                           ;DIO.c: 20:  switch(port){
  3335  000516  D090               	goto	l2856
  3336  000518                     l2830:
  3337  000518  FFFF               	dw	65535	; assembler added errata NOP
  3338                           
  3339                           ;DIO.c: 22:    if(data){
  3340  00051A  5057               	movf	DIO_vdWritePin@data,w,c
  3341  00051C  B4D8               	btfsc	status,2,c
  3342  00051E  D00F               	goto	l2834
  3343                           
  3344                           ;DIO.c: 23:     (*p_PORTAdata).PORT |= (1<<pin);
  3345  000520  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3346  000524  0E01               	movlw	1
  3347  000526  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3348  000528  2A55               	incf	??_DIO_vdWritePin,f,c
  3349  00052A  D003               	goto	u2144
  3350  00052C                     u2145:
  3351  00052C  FFFF               	dw	65535	; assembler added errata NOP
  3352  00052E  90D8               	bcf	status,0,c
  3353  000530  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3354  000532                     u2144:
  3355  000532  FFFF               	dw	65535	; assembler added errata NOP
  3356  000534  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3357  000536  D7FA               	goto	u2145
  3358  000538  5056               	movf	??_DIO_vdWritePin+1,w,c
  3359  00053A  1280               	iorwf	3968,f,c	;volatile
  3360                           
  3361                           ;DIO.c: 24:    }else{
  3362  00053C  D092               	goto	l262
  3363  00053E                     l2834:
  3364  00053E  FFFF               	dw	65535	; assembler added errata NOP
  3365                           
  3366                           ;DIO.c: 25:     (*p_PORTAdata).PORT &= ~(1<<pin);
  3367  000540  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3368  000544  0E01               	movlw	1
  3369  000546  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3370  000548  2A55               	incf	??_DIO_vdWritePin,f,c
  3371  00054A  D003               	goto	u2154
  3372  00054C                     u2155:
  3373  00054C  FFFF               	dw	65535	; assembler added errata NOP
  3374  00054E  90D8               	bcf	status,0,c
  3375  000550  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3376  000552                     u2154:
  3377  000552  FFFF               	dw	65535	; assembler added errata NOP
  3378  000554  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3379  000556  D7FA               	goto	u2155
  3380  000558  5056               	movf	??_DIO_vdWritePin+1,w,c
  3381  00055A  0AFF               	xorlw	255
  3382  00055C  1680               	andwf	3968,f,c	;volatile
  3383  00055E  D081               	goto	l262
  3384  000560                     l2836:
  3385  000560  FFFF               	dw	65535	; assembler added errata NOP
  3386                           
  3387                           ;DIO.c: 29:    if(data){
  3388  000562  5057               	movf	DIO_vdWritePin@data,w,c
  3389  000564  B4D8               	btfsc	status,2,c
  3390  000566  D00F               	goto	l2840
  3391                           
  3392                           ;DIO.c: 30:     (*p_PORTBdata).PORT |= (1<<pin);
  3393  000568  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3394  00056C  0E01               	movlw	1
  3395  00056E  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3396  000570  2A55               	incf	??_DIO_vdWritePin,f,c
  3397  000572  D003               	goto	u2174
  3398  000574                     u2175:
  3399  000574  FFFF               	dw	65535	; assembler added errata NOP
  3400  000576  90D8               	bcf	status,0,c
  3401  000578  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3402  00057A                     u2174:
  3403  00057A  FFFF               	dw	65535	; assembler added errata NOP
  3404  00057C  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3405  00057E  D7FA               	goto	u2175
  3406  000580  5056               	movf	??_DIO_vdWritePin+1,w,c
  3407  000582  1281               	iorwf	3969,f,c	;volatile
  3408                           
  3409                           ;DIO.c: 31:     }else{
  3410  000584  D06E               	goto	l262
  3411  000586                     l2840:
  3412  000586  FFFF               	dw	65535	; assembler added errata NOP
  3413                           
  3414                           ;DIO.c: 32:     (*p_PORTBdata).PORT &= ~(1<<pin);
  3415  000588  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3416  00058C  0E01               	movlw	1
  3417  00058E  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3418  000590  2A55               	incf	??_DIO_vdWritePin,f,c
  3419  000592  D003               	goto	u2184
  3420  000594                     u2185:
  3421  000594  FFFF               	dw	65535	; assembler added errata NOP
  3422  000596  90D8               	bcf	status,0,c
  3423  000598  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3424  00059A                     u2184:
  3425  00059A  FFFF               	dw	65535	; assembler added errata NOP
  3426  00059C  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3427  00059E  D7FA               	goto	u2185
  3428  0005A0  5056               	movf	??_DIO_vdWritePin+1,w,c
  3429  0005A2  0AFF               	xorlw	255
  3430  0005A4  1681               	andwf	3969,f,c	;volatile
  3431  0005A6  D05D               	goto	l262
  3432  0005A8                     l2842:
  3433  0005A8  FFFF               	dw	65535	; assembler added errata NOP
  3434                           
  3435                           ;DIO.c: 36:    if(data){
  3436  0005AA  5057               	movf	DIO_vdWritePin@data,w,c
  3437  0005AC  B4D8               	btfsc	status,2,c
  3438  0005AE  D00F               	goto	l2846
  3439                           
  3440                           ;DIO.c: 37:     (*p_PORTCdata).PORT |= (1<<pin);
  3441  0005B0  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3442  0005B4  0E01               	movlw	1
  3443  0005B6  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3444  0005B8  2A55               	incf	??_DIO_vdWritePin,f,c
  3445  0005BA  D003               	goto	u2204
  3446  0005BC                     u2205:
  3447  0005BC  FFFF               	dw	65535	; assembler added errata NOP
  3448  0005BE  90D8               	bcf	status,0,c
  3449  0005C0  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3450  0005C2                     u2204:
  3451  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  3452  0005C4  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3453  0005C6  D7FA               	goto	u2205
  3454  0005C8  5056               	movf	??_DIO_vdWritePin+1,w,c
  3455  0005CA  1282               	iorwf	3970,f,c	;volatile
  3456                           
  3457                           ;DIO.c: 38:     }else{
  3458  0005CC  D04A               	goto	l262
  3459  0005CE                     l2846:
  3460  0005CE  FFFF               	dw	65535	; assembler added errata NOP
  3461                           
  3462                           ;DIO.c: 39:     (*p_PORTCdata).PORT &= ~(1<<pin);
  3463  0005D0  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3464  0005D4  0E01               	movlw	1
  3465  0005D6  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3466  0005D8  2A55               	incf	??_DIO_vdWritePin,f,c
  3467  0005DA  D003               	goto	u2214
  3468  0005DC                     u2215:
  3469  0005DC  FFFF               	dw	65535	; assembler added errata NOP
  3470  0005DE  90D8               	bcf	status,0,c
  3471  0005E0  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3472  0005E2                     u2214:
  3473  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  3474  0005E4  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3475  0005E6  D7FA               	goto	u2215
  3476  0005E8  5056               	movf	??_DIO_vdWritePin+1,w,c
  3477  0005EA  0AFF               	xorlw	255
  3478  0005EC  1682               	andwf	3970,f,c	;volatile
  3479  0005EE  D039               	goto	l262
  3480  0005F0                     l2848:
  3481  0005F0  FFFF               	dw	65535	; assembler added errata NOP
  3482                           
  3483                           ;DIO.c: 43:    if(data){
  3484  0005F2  5057               	movf	DIO_vdWritePin@data,w,c
  3485  0005F4  B4D8               	btfsc	status,2,c
  3486  0005F6  D00F               	goto	l2852
  3487                           
  3488                           ;DIO.c: 44:     (*p_PORTDdata).PORT |= (1<<pin);
  3489  0005F8  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3490  0005FC  0E01               	movlw	1
  3491  0005FE  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3492  000600  2A55               	incf	??_DIO_vdWritePin,f,c
  3493  000602  D003               	goto	u2234
  3494  000604                     u2235:
  3495  000604  FFFF               	dw	65535	; assembler added errata NOP
  3496  000606  90D8               	bcf	status,0,c
  3497  000608  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3498  00060A                     u2234:
  3499  00060A  FFFF               	dw	65535	; assembler added errata NOP
  3500  00060C  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3501  00060E  D7FA               	goto	u2235
  3502  000610  5056               	movf	??_DIO_vdWritePin+1,w,c
  3503  000612  1283               	iorwf	3971,f,c	;volatile
  3504                           
  3505                           ;DIO.c: 45:     }else{
  3506  000614  D026               	goto	l262
  3507  000616                     l2852:
  3508  000616  FFFF               	dw	65535	; assembler added errata NOP
  3509                           
  3510                           ;DIO.c: 46:     (*p_PORTDdata).PORT &= ~(1<<pin);
  3511  000618  C054  F055         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3512  00061C  0E01               	movlw	1
  3513  00061E  6E56               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3514  000620  2A55               	incf	??_DIO_vdWritePin,f,c
  3515  000622  D003               	goto	u2244
  3516  000624                     u2245:
  3517  000624  FFFF               	dw	65535	; assembler added errata NOP
  3518  000626  90D8               	bcf	status,0,c
  3519  000628  3656               	rlcf	??_DIO_vdWritePin+1,f,c
  3520  00062A                     u2244:
  3521  00062A  FFFF               	dw	65535	; assembler added errata NOP
  3522  00062C  2E55               	decfsz	??_DIO_vdWritePin,f,c
  3523  00062E  D7FA               	goto	u2245
  3524  000630  5056               	movf	??_DIO_vdWritePin+1,w,c
  3525  000632  0AFF               	xorlw	255
  3526  000634  1683               	andwf	3971,f,c	;volatile
  3527  000636  D015               	goto	l262
  3528  000638                     l2856:
  3529  000638  FFFF               	dw	65535	; assembler added errata NOP
  3530  00063A  5053               	movf	DIO_vdWritePin@port,w,c
  3531  00063C  6E55               	movwf	??_DIO_vdWritePin& (0+255),c
  3532  00063E  6A56               	clrf	(??_DIO_vdWritePin+1)& (0+255),c
  3533                           
  3534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 1, Range of values is 0 to 0
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            4     3 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541  000640  5056               	movf	??_DIO_vdWritePin+1,w,c
  3542  000642  0A00               	xorlw	0	; case 0
  3543  000644  A4D8               	btfss	status,2,c
  3544  000646  D00D               	goto	l262
  3545                           
  3546                           ; Switch size 1, requested type "simple"
  3547                           ; Number of cases is 4, Range of values is 65 to 68
  3548                           ; switch strategies available:
  3549                           ; Name         Instructions Cycles
  3550                           ; simple_byte           13     7 (average)
  3551                           ;	Chosen strategy is simple_byte
  3552  000648  5055               	movf	??_DIO_vdWritePin,w,c
  3553  00064A  0A41               	xorlw	65	; case 65
  3554  00064C  B4D8               	btfsc	status,2,c
  3555  00064E  D764               	goto	l2830
  3556  000650  0A03               	xorlw	3	; case 66
  3557  000652  B4D8               	btfsc	status,2,c
  3558  000654  D785               	goto	l2836
  3559  000656  0A01               	xorlw	1	; case 67
  3560  000658  B4D8               	btfsc	status,2,c
  3561  00065A  D7A6               	goto	l2842
  3562  00065C  0A07               	xorlw	7	; case 68
  3563  00065E  B4D8               	btfsc	status,2,c
  3564  000660  D7C7               	goto	l2848
  3565  000662                     l262:
  3566  000662  FFFF               	dw	65535	; assembler added errata NOP
  3567  000664  0012               	return		;funcret
  3568  000666  FFFF               	dw	65535	; errata NOP
  3569  000668                     __end_of_DIO_vdWritePin:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function _INT_vdinit *****************
  3573 ;; Defined at:
  3574 ;;		line 24 in file "INT.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		None
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3588 ;;      Params:         0       0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    3
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text23
  3603  000EEC                     __ptext23:
  3604                           	opt callstack 0
  3605  000EEC                     _INT_vdinit:
  3606                           	opt callstack 0
  3607  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  3608                           
  3609                           ;INT.c: 25:     INTCON1bits.GIE = 1;
  3610                           
  3611                           ;incstack = 0
  3612  000EEE  8EF2               	bsf	4082,7,c	;volatile
  3613                           
  3614                           ;INT.c: 26:     PEIE = 1;
  3615  000EF0  8CF2               	bsf	4082,6,c	;volatile
  3616                           
  3617                           ;INT.c: 29:     INTCON1bits.INT0IE = 1;
  3618  000EF2  88F2               	bsf	4082,4,c	;volatile
  3619                           
  3620                           ;INT.c: 30:     INTCON3bits.INT1IE = 1;
  3621  000EF4  86F0               	bsf	4080,3,c	;volatile
  3622                           
  3623                           ;INT.c: 31:     INTCON3bits.INT2IE = 1;
  3624  000EF6  88F0               	bsf	4080,4,c	;volatile
  3625                           
  3626                           ;INT.c: 33:     INTCON2bits.INTEDG0 = 1;
  3627  000EF8  8CF1               	bsf	4081,6,c	;volatile
  3628                           
  3629                           ;INT.c: 34:     INTCON2bits.INTEDG1 = 1;
  3630  000EFA  8AF1               	bsf	4081,5,c	;volatile
  3631                           
  3632                           ;INT.c: 35:     INTCON2bits.INTEDG2 = 1;
  3633  000EFC  88F1               	bsf	4081,4,c	;volatile
  3634                           
  3635                           ;INT.c: 38:     INTCON1bits.RBIE = 0;
  3636  000EFE  96F2               	bcf	4082,3,c	;volatile
  3637                           
  3638                           ;INT.c: 41:     INTCON1bits.TMR0IE = 1;
  3639  000F00  8AF2               	bsf	4082,5,c	;volatile
  3640                           
  3641                           ;INT.c: 44:     TMR1IF = 0;
  3642  000F02  909E               	bcf	3998,0,c	;volatile
  3643                           
  3644                           ;INT.c: 45:     PIE1bits.TMR1IE = 1;
  3645  000F04  809D               	bsf	3997,0,c	;volatile
  3646                           
  3647                           ;INT.c: 46:     IPR1bits.TMR1IP = 0;
  3648  000F06  909F               	bcf	3999,0,c	;volatile
  3649                           
  3650                           ;INT.c: 49:     TMR3IF = 0;
  3651  000F08  92A1               	bcf	4001,1,c	;volatile
  3652                           
  3653                           ;INT.c: 50:     PIE2bits.TMR3IE = 1;
  3654  000F0A  82A0               	bsf	4000,1,c	;volatile
  3655                           
  3656                           ;INT.c: 51:     IPR2bits.TMR3IP = 0;
  3657  000F0C  92A2               	bcf	4002,1,c	;volatile
  3658  000F0E  0012               	return		;funcret
  3659  000F10  FFFF               	dw	65535	; errata NOP
  3660  000F12                     __end_of_INT_vdinit:
  3661                           	opt callstack 0
  3662                           
  3663 ;; *************** function _INT_vdSetINT2Callback *****************
  3664 ;; Defined at:
  3665 ;;		line 60 in file "INT.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3668 ;;		 -> int2_callback(1), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         2       0       0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         2       0       0       0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    3
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text24
  3695  0010C6                     __ptext24:
  3696                           	opt callstack 0
  3697  0010C6                     _INT_vdSetINT2Callback:
  3698                           	opt callstack 0
  3699  0010C6  FFFF               	dw	65535	; assembler added errata NOP
  3700                           
  3701                           ;INT.c: 61:     callback_INT2 = pf;
  3702                           
  3703                           ;incstack = 0
  3704  0010C8  C053  F023         	movff	INT_vdSetINT2Callback@pf,_callback_INT2
  3705  0010CC  C054  F024         	movff	INT_vdSetINT2Callback@pf+1,_callback_INT2+1
  3706  0010D0  0012               	return		;funcret
  3707  0010D2  FFFF               	dw	65535	; errata NOP
  3708  0010D4                     __end_of_INT_vdSetINT2Callback:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _INT_vdSetINT1Callback *****************
  3712 ;; Defined at:
  3713 ;;		line 57 in file "INT.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3716 ;;		 -> int1_callback(1), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3728 ;;      Params:         2       0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0
  3731 ;;      Totals:         2       0       0       0       0       0       0
  3732 ;;Total ram usage:        2 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    3
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text25
  3743  0010D4                     __ptext25:
  3744                           	opt callstack 0
  3745  0010D4                     _INT_vdSetINT1Callback:
  3746                           	opt callstack 0
  3747  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  3748                           
  3749                           ;INT.c: 58:     callback_INT1 = pf;
  3750                           
  3751                           ;incstack = 0
  3752  0010D6  C053  F025         	movff	INT_vdSetINT1Callback@pf,_callback_INT1
  3753  0010DA  C054  F026         	movff	INT_vdSetINT1Callback@pf+1,_callback_INT1+1
  3754  0010DE  0012               	return		;funcret
  3755  0010E0  FFFF               	dw	65535	; errata NOP
  3756  0010E2                     __end_of_INT_vdSetINT1Callback:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _INT_vdSetINT0Callback *****************
  3760 ;; Defined at:
  3761 ;;		line 54 in file "INT.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  pf              2    2[COMRAM] PTR FTN()void 
  3764 ;;		 -> int0_callback(1), 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3776 ;;      Params:         2       0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0
  3779 ;;      Totals:         2       0       0       0       0       0       0
  3780 ;;Total ram usage:        2 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    3
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text26
  3791  0010E2                     __ptext26:
  3792                           	opt callstack 0
  3793  0010E2                     _INT_vdSetINT0Callback:
  3794                           	opt callstack 0
  3795  0010E2  FFFF               	dw	65535	; assembler added errata NOP
  3796                           
  3797                           ;INT.c: 55:     callback_INT0 = pf;
  3798                           
  3799                           ;incstack = 0
  3800  0010E4  C053  F027         	movff	INT_vdSetINT0Callback@pf,_callback_INT0
  3801  0010E8  C054  F028         	movff	INT_vdSetINT0Callback@pf+1,_callback_INT0+1
  3802  0010EC  0012               	return		;funcret
  3803  0010EE  FFFF               	dw	65535	; errata NOP
  3804  0010F0                     __end_of_INT_vdSetINT0Callback:
  3805                           	opt callstack 0
  3806                           
  3807 ;; *************** function _DIO_vdInit *****************
  3808 ;; Defined at:
  3809 ;;		line 15 in file "DIO.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  dev             2    7[COMRAM] PTR struct .
  3812 ;;		 -> btnStop3(7), btnStop2(7), btnStop1(7), BTN3(7), 
  3813 ;;		 -> BTN2(7), BTN1(7), LED4(7), LED3(7), 
  3814 ;;		 -> LED2(7), LED1(7), 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3826 ;;      Params:         2       0       0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0
  3829 ;;      Totals:         2       0       0       0       0       0       0
  3830 ;;Total ram usage:        2 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    4
  3833 ;; This function calls:
  3834 ;;		_DIO_vdWriteDirPin
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text27
  3841  000E34                     __ptext27:
  3842                           	opt callstack 0
  3843  000E34                     _DIO_vdInit:
  3844                           	opt callstack 0
  3845  000E34  FFFF               	dw	65535	; assembler added errata NOP
  3846                           
  3847                           ;DIO.c: 16:     DIO_vdWriteDirPin(dev->mode,dev->PORT,dev->pin);
  3848                           
  3849                           ;incstack = 0
  3850  000E36  C058  FFD9         	movff	DIO_vdInit@dev,fsr2l
  3851  000E3A  C059  FFDA         	movff	DIO_vdInit@dev+1,fsr2h
  3852  000E3E  50DF               	movf	indf2,w,c
  3853  000E40  6E53               	movwf	DIO_vdWriteDirPin@port,c
  3854  000E42  EE20 F001          	lfsr	2,1
  3855  000E46  5058               	movf	DIO_vdInit@dev,w,c
  3856  000E48  26D9               	addwf	fsr2l,f,c
  3857  000E4A  5059               	movf	DIO_vdInit@dev+1,w,c
  3858  000E4C  22DA               	addwfc	fsr2h,f,c
  3859  000E4E  50DF               	movf	indf2,w,c
  3860  000E50  6E54               	movwf	DIO_vdWriteDirPin@pin,c
  3861  000E52  EE20 F002          	lfsr	2,2
  3862  000E56  5058               	movf	DIO_vdInit@dev,w,c
  3863  000E58  26D9               	addwf	fsr2l,f,c
  3864  000E5A  5059               	movf	DIO_vdInit@dev+1,w,c
  3865  000E5C  22DA               	addwfc	fsr2h,f,c
  3866  000E5E  50DF               	movf	indf2,w,c
  3867  000E60  EC34  F003         	call	_DIO_vdWriteDirPin
  3868  000E64  0012               	return		;funcret
  3869  000E66  FFFF               	dw	65535	; errata NOP
  3870  000E68                     __end_of_DIO_vdInit:
  3871                           	opt callstack 0
  3872                           
  3873 ;; *************** function _DIO_vdWriteDirPin *****************
  3874 ;; Defined at:
  3875 ;;		line 52 in file "DIO.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  data            1    wreg     unsigned char 
  3878 ;;  port            1    2[COMRAM] unsigned char 
  3879 ;;  pin             1    3[COMRAM] unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  data            1    6[COMRAM] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3891 ;;      Params:         2       0       0       0       0       0       0
  3892 ;;      Locals:         1       0       0       0       0       0       0
  3893 ;;      Temps:          2       0       0       0       0       0       0
  3894 ;;      Totals:         5       0       0       0       0       0       0
  3895 ;;Total ram usage:        5 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_DIO_vdInit
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text28
  3906  000668                     __ptext28:
  3907                           	opt callstack 0
  3908  000668                     _DIO_vdWriteDirPin:
  3909                           	opt callstack 0
  3910  000668  FFFF               	dw	65535	; assembler added errata NOP
  3911                           
  3912                           ;incstack = 0
  3913                           ;DIO_vdWriteDirPin@data stored from wreg
  3914  00066A  6E57               	movwf	DIO_vdWriteDirPin@data,c
  3915                           
  3916                           ;DIO.c: 53:  switch(port){
  3917  00066C  D090               	goto	l2822
  3918  00066E                     l2796:
  3919  00066E  FFFF               	dw	65535	; assembler added errata NOP
  3920                           
  3921                           ;DIO.c: 55:    if(data){
  3922  000670  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3923  000672  B4D8               	btfsc	status,2,c
  3924  000674  D00F               	goto	l2800
  3925                           
  3926                           ;DIO.c: 56:     (*p_PORTAdirection).PORT |= (1<<pin);
  3927  000676  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3928  00067A  0E01               	movlw	1
  3929  00067C  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3930  00067E  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3931  000680  D003               	goto	u2024
  3932  000682                     u2025:
  3933  000682  FFFF               	dw	65535	; assembler added errata NOP
  3934  000684  90D8               	bcf	status,0,c
  3935  000686  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3936  000688                     u2024:
  3937  000688  FFFF               	dw	65535	; assembler added errata NOP
  3938  00068A  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3939  00068C  D7FA               	goto	u2025
  3940  00068E  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3941  000690  1292               	iorwf	3986,f,c	;volatile
  3942                           
  3943                           ;DIO.c: 57:    }else{
  3944  000692  D092               	goto	l279
  3945  000694                     l2800:
  3946  000694  FFFF               	dw	65535	; assembler added errata NOP
  3947                           
  3948                           ;DIO.c: 58:     (*p_PORTAdirection).PORT &= ~(1<<pin);
  3949  000696  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3950  00069A  0E01               	movlw	1
  3951  00069C  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3952  00069E  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3953  0006A0  D003               	goto	u2034
  3954  0006A2                     u2035:
  3955  0006A2  FFFF               	dw	65535	; assembler added errata NOP
  3956  0006A4  90D8               	bcf	status,0,c
  3957  0006A6  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3958  0006A8                     u2034:
  3959  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  3960  0006AA  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3961  0006AC  D7FA               	goto	u2035
  3962  0006AE  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3963  0006B0  0AFF               	xorlw	255
  3964  0006B2  1692               	andwf	3986,f,c	;volatile
  3965  0006B4  D081               	goto	l279
  3966  0006B6                     l2802:
  3967  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  3968                           
  3969                           ;DIO.c: 62:    if(data){
  3970  0006B8  5057               	movf	DIO_vdWriteDirPin@data,w,c
  3971  0006BA  B4D8               	btfsc	status,2,c
  3972  0006BC  D00F               	goto	l2806
  3973                           
  3974                           ;DIO.c: 63:     (*p_PORTBdirection).PORT |= (1<<pin);
  3975  0006BE  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3976  0006C2  0E01               	movlw	1
  3977  0006C4  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3978  0006C6  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  3979  0006C8  D003               	goto	u2054
  3980  0006CA                     u2055:
  3981  0006CA  FFFF               	dw	65535	; assembler added errata NOP
  3982  0006CC  90D8               	bcf	status,0,c
  3983  0006CE  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3984  0006D0                     u2054:
  3985  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  3986  0006D2  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  3987  0006D4  D7FA               	goto	u2055
  3988  0006D6  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  3989  0006D8  1293               	iorwf	3987,f,c	;volatile
  3990                           
  3991                           ;DIO.c: 64:     }else{
  3992  0006DA  D06E               	goto	l279
  3993  0006DC                     l2806:
  3994  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  3995                           
  3996                           ;DIO.c: 65:     (*p_PORTBdirection).PORT &= ~(1<<pin);
  3997  0006DE  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3998  0006E2  0E01               	movlw	1
  3999  0006E4  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4000  0006E6  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  4001  0006E8  D003               	goto	u2064
  4002  0006EA                     u2065:
  4003  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  4004  0006EC  90D8               	bcf	status,0,c
  4005  0006EE  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  4006  0006F0                     u2064:
  4007  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  4008  0006F2  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  4009  0006F4  D7FA               	goto	u2065
  4010  0006F6  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4011  0006F8  0AFF               	xorlw	255
  4012  0006FA  1693               	andwf	3987,f,c	;volatile
  4013  0006FC  D05D               	goto	l279
  4014  0006FE                     l2808:
  4015  0006FE  FFFF               	dw	65535	; assembler added errata NOP
  4016                           
  4017                           ;DIO.c: 69:    if(data){
  4018  000700  5057               	movf	DIO_vdWriteDirPin@data,w,c
  4019  000702  B4D8               	btfsc	status,2,c
  4020  000704  D00F               	goto	l2812
  4021                           
  4022                           ;DIO.c: 70:     (*p_PORTCdirection).PORT |= (1<<pin);
  4023  000706  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  4024  00070A  0E01               	movlw	1
  4025  00070C  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4026  00070E  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  4027  000710  D003               	goto	u2084
  4028  000712                     u2085:
  4029  000712  FFFF               	dw	65535	; assembler added errata NOP
  4030  000714  90D8               	bcf	status,0,c
  4031  000716  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  4032  000718                     u2084:
  4033  000718  FFFF               	dw	65535	; assembler added errata NOP
  4034  00071A  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  4035  00071C  D7FA               	goto	u2085
  4036  00071E  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4037  000720  1294               	iorwf	3988,f,c	;volatile
  4038                           
  4039                           ;DIO.c: 71:     }else{
  4040  000722  D04A               	goto	l279
  4041  000724                     l2812:
  4042  000724  FFFF               	dw	65535	; assembler added errata NOP
  4043                           
  4044                           ;DIO.c: 72:     (*p_PORTCdirection).PORT &= ~(1<<pin);
  4045  000726  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  4046  00072A  0E01               	movlw	1
  4047  00072C  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4048  00072E  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  4049  000730  D003               	goto	u2094
  4050  000732                     u2095:
  4051  000732  FFFF               	dw	65535	; assembler added errata NOP
  4052  000734  90D8               	bcf	status,0,c
  4053  000736  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  4054  000738                     u2094:
  4055  000738  FFFF               	dw	65535	; assembler added errata NOP
  4056  00073A  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  4057  00073C  D7FA               	goto	u2095
  4058  00073E  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4059  000740  0AFF               	xorlw	255
  4060  000742  1694               	andwf	3988,f,c	;volatile
  4061  000744  D039               	goto	l279
  4062  000746                     l2814:
  4063  000746  FFFF               	dw	65535	; assembler added errata NOP
  4064                           
  4065                           ;DIO.c: 76:    if(data){
  4066  000748  5057               	movf	DIO_vdWriteDirPin@data,w,c
  4067  00074A  B4D8               	btfsc	status,2,c
  4068  00074C  D00F               	goto	l2818
  4069                           
  4070                           ;DIO.c: 77:     (*p_PORTDdirection).PORT |= (1<<pin);
  4071  00074E  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  4072  000752  0E01               	movlw	1
  4073  000754  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4074  000756  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  4075  000758  D003               	goto	u2114
  4076  00075A                     u2115:
  4077  00075A  FFFF               	dw	65535	; assembler added errata NOP
  4078  00075C  90D8               	bcf	status,0,c
  4079  00075E  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  4080  000760                     u2114:
  4081  000760  FFFF               	dw	65535	; assembler added errata NOP
  4082  000762  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  4083  000764  D7FA               	goto	u2115
  4084  000766  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4085  000768  1295               	iorwf	3989,f,c	;volatile
  4086                           
  4087                           ;DIO.c: 78:     }else{
  4088  00076A  D026               	goto	l279
  4089  00076C                     l2818:
  4090  00076C  FFFF               	dw	65535	; assembler added errata NOP
  4091                           
  4092                           ;DIO.c: 79:     (*p_PORTDdirection).PORT &= ~(1<<pin);
  4093  00076E  C054  F055         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  4094  000772  0E01               	movlw	1
  4095  000774  6E56               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4096  000776  2A55               	incf	??_DIO_vdWriteDirPin,f,c
  4097  000778  D003               	goto	u2124
  4098  00077A                     u2125:
  4099  00077A  FFFF               	dw	65535	; assembler added errata NOP
  4100  00077C  90D8               	bcf	status,0,c
  4101  00077E  3656               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  4102  000780                     u2124:
  4103  000780  FFFF               	dw	65535	; assembler added errata NOP
  4104  000782  2E55               	decfsz	??_DIO_vdWriteDirPin,f,c
  4105  000784  D7FA               	goto	u2125
  4106  000786  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4107  000788  0AFF               	xorlw	255
  4108  00078A  1695               	andwf	3989,f,c	;volatile
  4109  00078C  D015               	goto	l279
  4110  00078E                     l2822:
  4111  00078E  FFFF               	dw	65535	; assembler added errata NOP
  4112  000790  5053               	movf	DIO_vdWriteDirPin@port,w,c
  4113  000792  6E55               	movwf	??_DIO_vdWriteDirPin& (0+255),c
  4114  000794  6A56               	clrf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  4115                           
  4116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4117                           ; Switch size 1, requested type "simple"
  4118                           ; Number of cases is 1, Range of values is 0 to 0
  4119                           ; switch strategies available:
  4120                           ; Name         Instructions Cycles
  4121                           ; simple_byte            4     3 (average)
  4122                           ;	Chosen strategy is simple_byte
  4123  000796  5056               	movf	??_DIO_vdWriteDirPin+1,w,c
  4124  000798  0A00               	xorlw	0	; case 0
  4125  00079A  A4D8               	btfss	status,2,c
  4126  00079C  D00D               	goto	l279
  4127                           
  4128                           ; Switch size 1, requested type "simple"
  4129                           ; Number of cases is 4, Range of values is 65 to 68
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte           13     7 (average)
  4133                           ;	Chosen strategy is simple_byte
  4134  00079E  5055               	movf	??_DIO_vdWriteDirPin,w,c
  4135  0007A0  0A41               	xorlw	65	; case 65
  4136  0007A2  B4D8               	btfsc	status,2,c
  4137  0007A4  D764               	goto	l2796
  4138  0007A6  0A03               	xorlw	3	; case 66
  4139  0007A8  B4D8               	btfsc	status,2,c
  4140  0007AA  D785               	goto	l2802
  4141  0007AC  0A01               	xorlw	1	; case 67
  4142  0007AE  B4D8               	btfsc	status,2,c
  4143  0007B0  D7A6               	goto	l2808
  4144  0007B2  0A07               	xorlw	7	; case 68
  4145  0007B4  B4D8               	btfsc	status,2,c
  4146  0007B6  D7C7               	goto	l2814
  4147  0007B8                     l279:
  4148  0007B8  FFFF               	dw	65535	; assembler added errata NOP
  4149  0007BA  0012               	return		;funcret
  4150  0007BC  FFFF               	dw	65535	; errata NOP
  4151  0007BE                     __end_of_DIO_vdWriteDirPin:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _BTN_u8getStatus *****************
  4155 ;; Defined at:
  4156 ;;		line 57 in file "BTN.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  btn             2    6[COMRAM] PTR struct .
  4159 ;;		 -> btnStop3(7), btnStop2(7), btnStop1(7), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      unsigned char 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4171 ;;      Params:         2       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    4
  4178 ;; This function calls:
  4179 ;;		_DIO_u8ReadPin
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text29
  4186  000F38                     __ptext29:
  4187                           	opt callstack 0
  4188  000F38                     _BTN_u8getStatus:
  4189                           	opt callstack 0
  4190  000F38  FFFF               	dw	65535	; assembler added errata NOP
  4191                           
  4192                           ;BTN.c: 58:  return DIO_u8ReadPin(btn->PORT,btn->pin);
  4193                           
  4194                           ;incstack = 0
  4195  000F3A  EE20 F001          	lfsr	2,1
  4196  000F3E  5057               	movf	BTN_u8getStatus@btn,w,c
  4197  000F40  26D9               	addwf	fsr2l,f,c
  4198  000F42  5058               	movf	BTN_u8getStatus@btn+1,w,c
  4199  000F44  22DA               	addwfc	fsr2h,f,c
  4200  000F46  50DF               	movf	indf2,w,c
  4201  000F48  6E53               	movwf	DIO_u8ReadPin@pin,c
  4202  000F4A  C057  FFD9         	movff	BTN_u8getStatus@btn,fsr2l
  4203  000F4E  C058  FFDA         	movff	BTN_u8getStatus@btn+1,fsr2h
  4204  000F52  50DF               	movf	indf2,w,c
  4205  000F54  ECA6  F004         	call	_DIO_u8ReadPin
  4206  000F58  0012               	return		;funcret
  4207  000F5A  FFFF               	dw	65535	; errata NOP
  4208  000F5C                     __end_of_BTN_u8getStatus:
  4209                           	opt callstack 0
  4210                           
  4211 ;; *************** function _DIO_u8ReadPin *****************
  4212 ;; Defined at:
  4213 ;;		line 133 in file "DIO.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  port            1    wreg     unsigned char 
  4216 ;;  pin             1    2[COMRAM] unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  port            1    5[COMRAM] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      unsigned char 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4228 ;;      Params:         1       0       0       0       0       0       0
  4229 ;;      Locals:         1       0       0       0       0       0       0
  4230 ;;      Temps:          2       0       0       0       0       0       0
  4231 ;;      Totals:         4       0       0       0       0       0       0
  4232 ;;Total ram usage:        4 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    3
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_BTN_u8getStatus
  4239 ;;		_BTN_vdRead
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text30
  4244  00094C                     __ptext30:
  4245                           	opt callstack 0
  4246  00094C                     _DIO_u8ReadPin:
  4247                           	opt callstack 0
  4248  00094C  FFFF               	dw	65535	; assembler added errata NOP
  4249                           
  4250                           ;incstack = 0
  4251                           ;DIO_u8ReadPin@port stored from wreg
  4252  00094E  6E56               	movwf	DIO_u8ReadPin@port,c
  4253                           
  4254                           ;DIO.c: 134:  switch(port){
  4255  000950  D037               	goto	l2784
  4256  000952                     l2770:
  4257  000952  FFFF               	dw	65535	; assembler added errata NOP
  4258                           
  4259                           ;DIO.c: 136:    return ((*p_PORTAdata).PORT & (1<<pin))?1:0;
  4260  000954  C053  F054         	movff	DIO_u8ReadPin@pin,??_DIO_u8ReadPin
  4261  000958  0E01               	movlw	1
  4262  00095A  6E55               	movwf	(??_DIO_u8ReadPin+1)& (0+255),c
  4263  00095C  2A54               	incf	??_DIO_u8ReadPin,f,c
  4264  00095E  D003               	goto	u1924
  4265  000960                     u1925:
  4266  000960  FFFF               	dw	65535	; assembler added errata NOP
  4267  000962  90D8               	bcf	status,0,c
  4268  000964  3655               	rlcf	??_DIO_u8ReadPin+1,f,c
  4269  000966                     u1924:
  4270  000966  FFFF               	dw	65535	; assembler added errata NOP
  4271  000968  2E54               	decfsz	??_DIO_u8ReadPin,f,c
  4272  00096A  D7FA               	goto	u1925
  4273  00096C  5055               	movf	??_DIO_u8ReadPin+1,w,c
  4274  00096E  1480               	andwf	3968,w,c	;volatile
  4275  000970  D022               	goto	L2
  4276  000972                     l2774:
  4277  000972  FFFF               	dw	65535	; assembler added errata NOP
  4278                           
  4279                           ;DIO.c: 138:    return ((*p_PORTBdata).PORT & (1<<pin))?1:0;
  4280  000974  C053  F054         	movff	DIO_u8ReadPin@pin,??_DIO_u8ReadPin
  4281  000978  0E01               	movlw	1
  4282  00097A  6E55               	movwf	(??_DIO_u8ReadPin+1)& (0+255),c
  4283  00097C  2A54               	incf	??_DIO_u8ReadPin,f,c
  4284  00097E  D003               	goto	u1954
  4285  000980                     u1955:
  4286  000980  FFFF               	dw	65535	; assembler added errata NOP
  4287  000982  90D8               	bcf	status,0,c
  4288  000984  3655               	rlcf	??_DIO_u8ReadPin+1,f,c
  4289  000986                     u1954:
  4290  000986  FFFF               	dw	65535	; assembler added errata NOP
  4291  000988  2E54               	decfsz	??_DIO_u8ReadPin,f,c
  4292  00098A  D7FA               	goto	u1955
  4293  00098C  5055               	movf	??_DIO_u8ReadPin+1,w,c
  4294  00098E  1481               	andwf	3969,w,c	;volatile
  4295  000990  D012               	goto	L2
  4296  000992                     u1961:
  4297  000992  FFFF               	dw	65535	; assembler added errata NOP
  4298  000994  0E01               	movlw	1
  4299  000996  D028               	goto	l309
  4300  000998                     l2778:
  4301  000998  FFFF               	dw	65535	; assembler added errata NOP
  4302                           
  4303                           ;DIO.c: 140:    return ((*p_PORTDdata).PORT & (1<<pin))?1:0;
  4304  00099A  C053  F054         	movff	DIO_u8ReadPin@pin,??_DIO_u8ReadPin
  4305  00099E  0E01               	movlw	1
  4306  0009A0  6E55               	movwf	(??_DIO_u8ReadPin+1)& (0+255),c
  4307  0009A2  2A54               	incf	??_DIO_u8ReadPin,f,c
  4308  0009A4  D003               	goto	u1984
  4309  0009A6                     u1985:
  4310  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  4311  0009A8  90D8               	bcf	status,0,c
  4312  0009AA  3655               	rlcf	??_DIO_u8ReadPin+1,f,c
  4313  0009AC                     u1984:
  4314  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  4315  0009AE  2E54               	decfsz	??_DIO_u8ReadPin,f,c
  4316  0009B0  D7FA               	goto	u1985
  4317  0009B2  5055               	movf	??_DIO_u8ReadPin+1,w,c
  4318  0009B4  1483               	andwf	3971,w,c	;volatile
  4319  0009B6                     L2:
  4320  0009B6  FFFF               	dw	65535	; assembler added errata NOP
  4321  0009B8  0900               	iorlw	0
  4322  0009BA  A4D8               	btfss	status,2,c
  4323  0009BC  D7EA               	goto	u1961
  4324  0009BE  D012               	goto	l2786
  4325  0009C0                     l2784:
  4326  0009C0  FFFF               	dw	65535	; assembler added errata NOP
  4327  0009C2  5056               	movf	DIO_u8ReadPin@port,w,c
  4328  0009C4  6E54               	movwf	??_DIO_u8ReadPin& (0+255),c
  4329  0009C6  6A55               	clrf	(??_DIO_u8ReadPin+1)& (0+255),c
  4330                           
  4331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4332                           ; Switch size 1, requested type "simple"
  4333                           ; Number of cases is 1, Range of values is 0 to 0
  4334                           ; switch strategies available:
  4335                           ; Name         Instructions Cycles
  4336                           ; simple_byte            4     3 (average)
  4337                           ;	Chosen strategy is simple_byte
  4338  0009C8  5055               	movf	??_DIO_u8ReadPin+1,w,c
  4339  0009CA  0A00               	xorlw	0	; case 0
  4340  0009CC  A4D8               	btfss	status,2,c
  4341  0009CE  D00A               	goto	l2786
  4342                           
  4343                           ; Switch size 1, requested type "simple"
  4344                           ; Number of cases is 3, Range of values is 65 to 68
  4345                           ; switch strategies available:
  4346                           ; Name         Instructions Cycles
  4347                           ; simple_byte           10     6 (average)
  4348                           ;	Chosen strategy is simple_byte
  4349  0009D0  5054               	movf	??_DIO_u8ReadPin,w,c
  4350  0009D2  0A41               	xorlw	65	; case 65
  4351  0009D4  B4D8               	btfsc	status,2,c
  4352  0009D6  D7BD               	goto	l2770
  4353  0009D8  0A03               	xorlw	3	; case 66
  4354  0009DA  B4D8               	btfsc	status,2,c
  4355  0009DC  D7CA               	goto	l2774
  4356  0009DE  0A06               	xorlw	6	; case 68
  4357  0009E0  B4D8               	btfsc	status,2,c
  4358  0009E2  D7DA               	goto	l2778
  4359  0009E4                     l2786:
  4360  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  4361                           
  4362                           ;DIO.c: 142:  return 0;
  4363  0009E6  0E00               	movlw	0
  4364  0009E8                     l309:
  4365  0009E8  FFFF               	dw	65535	; assembler added errata NOP
  4366  0009EA  0012               	return		;funcret
  4367  0009EC  FFFF               	dw	65535	; errata NOP
  4368  0009EE                     __end_of_DIO_u8ReadPin:
  4369                           	opt callstack 0
  4370                           
  4371 ;; *************** function _ADC_vdInit *****************
  4372 ;; Defined at:
  4373 ;;		line 13 in file "ADC.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4387 ;;      Params:         0       0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    3
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text31
  4402  000FAA                     __ptext31:
  4403                           	opt callstack 0
  4404  000FAA                     _ADC_vdInit:
  4405                           	opt callstack 0
  4406  000FAA  FFFF               	dw	65535	; assembler added errata NOP
  4407                           
  4408                           ;ADC.c: 14:     ADCON1bits.PCFG = 0b0000;
  4409                           
  4410                           ;incstack = 0
  4411  000FAC  0EF0               	movlw	-16
  4412  000FAE  16C1               	andwf	4033,f,c	;volatile
  4413                           
  4414                           ;ADC.c: 15:     ADCON1bits.ADFM = 1;
  4415  000FB0  8EC1               	bsf	4033,7,c	;volatile
  4416                           
  4417                           ;ADC.c: 16:     ADCON0bits.ADCS = 0b001;
  4418  000FB2  50C2               	movf	4034,w,c	;volatile
  4419  000FB4  0B3F               	andlw	-193
  4420  000FB6  0940               	iorlw	64
  4421  000FB8  6EC2               	movwf	4034,c	;volatile
  4422                           
  4423                           ;ADC.c: 17:     ADCON1bits.ADCS2 = (0b001>>2);
  4424  000FBA  9CC1               	bcf	4033,6,c	;volatile
  4425                           
  4426                           ;ADC.c: 18:     ADCON0bits.ADON = 1;
  4427  000FBC  80C2               	bsf	4034,0,c	;volatile
  4428  000FBE  0012               	return		;funcret
  4429  000FC0  FFFF               	dw	65535	; errata NOP
  4430  000FC2                     __end_of_ADC_vdInit:
  4431                           	opt callstack 0
  4432                           
  4433 ;; *************** function _ADC_u16getValue *****************
  4434 ;; Defined at:
  4435 ;;		line 21 in file "ADC.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  pin             1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  pin             1    8[COMRAM] unsigned char 
  4440 ;;  data            2    6[COMRAM] unsigned short 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    2[COMRAM] unsigned short 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4450 ;;      Params:         2       0       0       0       0       0       0
  4451 ;;      Locals:         3       0       0       0       0       0       0
  4452 ;;      Temps:          2       0       0       0       0       0       0
  4453 ;;      Totals:         7       0       0       0       0       0       0
  4454 ;;Total ram usage:        7 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    3
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text32
  4465  000CC8                     __ptext32:
  4466                           	opt callstack 0
  4467  000CC8                     _ADC_u16getValue:
  4468                           	opt callstack 0
  4469  000CC8  FFFF               	dw	65535	; assembler added errata NOP
  4470                           
  4471                           ;incstack = 0
  4472                           ;ADC_u16getValue@pin stored from wreg
  4473  000CCA  6E59               	movwf	ADC_u16getValue@pin,c
  4474                           
  4475                           ;ADC.c: 22:     ADCON0bits.CHS = pin;
  4476  000CCC  C059  F055         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  4477  000CD0  4655               	rlncf	??_ADC_u16getValue,f,c
  4478  000CD2  4655               	rlncf	??_ADC_u16getValue,f,c
  4479  000CD4  4655               	rlncf	??_ADC_u16getValue,f,c
  4480  000CD6  50C2               	movf	4034,w,c	;volatile
  4481  000CD8  1855               	xorwf	??_ADC_u16getValue,w,c
  4482  000CDA  0BC7               	andlw	-57
  4483  000CDC  1855               	xorwf	??_ADC_u16getValue,w,c
  4484  000CDE  6EC2               	movwf	4034,c	;volatile
  4485                           
  4486                           ;ADC.c: 23:     TRISA |= (1<<pin);
  4487  000CE0  C059  F055         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  4488  000CE4  0E01               	movlw	1
  4489  000CE6  6E56               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  4490  000CE8  2A55               	incf	??_ADC_u16getValue,f,c
  4491  000CEA  D003               	goto	u2454
  4492  000CEC                     u2455:
  4493  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  4494  000CEE  90D8               	bcf	status,0,c
  4495  000CF0  3656               	rlcf	??_ADC_u16getValue+1,f,c
  4496  000CF2                     u2454:
  4497  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  4498  000CF4  2E55               	decfsz	??_ADC_u16getValue,f,c
  4499  000CF6  D7FA               	goto	u2455
  4500  000CF8  5056               	movf	??_ADC_u16getValue+1,w,c
  4501  000CFA  1292               	iorwf	3986,f,c	;volatile
  4502                           
  4503                           ;ADC.c: 24:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4504  000CFC  0E02               	movlw	2
  4505  000CFE  6E55               	movwf	??_ADC_u16getValue& (0+255),c
  4506  000D00  0EF2               	movlw	242
  4507  000D02                     u2757:
  4508  000D02  FFFF               	dw	65535	; errata NOP
  4509  000D04  2EE8               	decfsz	wreg,f,c
  4510  000D06  D7FD               	bra	u2757
  4511  000D08  2E55               	decfsz	??_ADC_u16getValue& (0+255),f,c
  4512  000D0A  D7FB               	bra	u2757
  4513  000D0C  D000               	nop2	
  4514                           
  4515                           ;ADC.c: 25:     ADCON0bits.GO = 1;
  4516  000D0E  84C2               	bsf	4034,2,c	;volatile
  4517  000D10                     l183:
  4518  000D10  FFFF               	dw	65535	; assembler added errata NOP
  4519  000D12  AC9E               	btfss	3998,6,c	;volatile
  4520  000D14  D7FD               	goto	l183
  4521                           
  4522                           ;ADC.c: 27:     unsigned short int data = ( (ADRESH<<8)|(ADRESL) );
  4523  000D16  50C3               	movf	4035,w,c	;volatile
  4524  000D18  CFC4 F055          	movff	4036,??_ADC_u16getValue	;volatile
  4525  000D1C  6A56               	clrf	(??_ADC_u16getValue+1)& (0+255),c
  4526  000D1E  C055  F056         	movff	??_ADC_u16getValue,??_ADC_u16getValue+1
  4527  000D22  6A55               	clrf	??_ADC_u16getValue,c
  4528  000D24  1055               	iorwf	??_ADC_u16getValue,w,c
  4529  000D26  6E57               	movwf	ADC_u16getValue@data,c
  4530  000D28  5056               	movf	??_ADC_u16getValue+1,w,c
  4531  000D2A  6E58               	movwf	ADC_u16getValue@data+1,c
  4532                           
  4533                           ;ADC.c: 28:     ADIF = 0;
  4534  000D2C  9C9E               	bcf	3998,6,c	;volatile
  4535                           
  4536                           ;ADC.c: 29:     return data;
  4537  000D2E  C057  F053         	movff	ADC_u16getValue@data,?_ADC_u16getValue
  4538  000D32  C058  F054         	movff	ADC_u16getValue@data+1,?_ADC_u16getValue+1
  4539  000D36  0012               	return		;funcret
  4540  000D38  FFFF               	dw	65535	; errata NOP
  4541  000D3A                     __end_of_ADC_u16getValue:
  4542                           	opt callstack 0
  4543                           
  4544 ;; *************** function _ISR *****************
  4545 ;; Defined at:
  4546 ;;		line 82 in file "INT.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4560 ;;      Params:         0       0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0
  4562 ;;      Temps:          2       0       0       0       0       0       0
  4563 ;;      Totals:         2       0       0       0       0       0       0
  4564 ;;Total ram usage:        2 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    2
  4567 ;; This function calls:
  4568 ;;		Absolute function
  4569 ;;		_int0_callback
  4570 ;;		_int1_callback
  4571 ;;		_int2_callback
  4572 ;;		_tmr0_callback
  4573 ;;		_tmr1_callback
  4574 ;;		_tmr3_callback
  4575 ;; This function is called by:
  4576 ;;		Interrupt level 2
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	intcode
  4581  000008                     __pintcode:
  4582                           	opt callstack 0
  4583  000008                     _ISR:
  4584                           	opt callstack 0
  4585  000008  FFFF               	dw	65535	; assembler added errata NOP
  4586                           
  4587                           ;incstack = 0
  4588  00000A  826B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4589  00000C  CFFA F051          	movff	pclath,??_ISR
  4590  000010  CFFB F052          	movff	pclatu,??_ISR+1
  4591                           
  4592                           ;INT.c: 84:     if(INT0IF){
  4593  000014  A2F2               	btfss	4082,1,c	;volatile
  4594  000016  D010               	goto	i2l1988
  4595                           
  4596                           ;INT.c: 85:         callback_INT0();
  4597  000018  D801               	call	i2u89_48
  4598  00001A  D00C               	goto	i2u89_49
  4599  00001C                     i2u89_48:
  4600  00001C  FFFF               	dw	65535	; assembler added errata NOP
  4601  00001E  0005               	push	
  4602  000020  6EFA               	movwf	pclath,c
  4603  000022  5027               	movf	_callback_INT0,w,c
  4604  000024  6EFD               	movwf	tosl,c
  4605  000026  5028               	movf	_callback_INT0+1,w,c
  4606  000028  6EFE               	movwf	tosh,c
  4607  00002A  50F8               	movf	tblptru,w,c
  4608  00002C  6EFF               	movwf	tosu,c
  4609  00002E  50FA               	movf	pclath,w,c
  4610  000030  0012               	return		;indir
  4611  000032  FFFF               	dw	65535	; errata NOP
  4612  000034                     i2u89_49:
  4613  000034  FFFF               	dw	65535	; assembler added errata NOP
  4614                           
  4615                           ;INT.c: 86:         INT0IF = 0;
  4616  000036  92F2               	bcf	4082,1,c	;volatile
  4617  000038                     i2l1988:
  4618  000038  FFFF               	dw	65535	; assembler added errata NOP
  4619                           
  4620                           ;INT.c: 88:     if(INT1IF){
  4621  00003A  A0F0               	btfss	4080,0,c	;volatile
  4622  00003C  D010               	goto	i2l1994
  4623                           
  4624                           ;INT.c: 89:         callback_INT1();
  4625  00003E  D801               	call	i2u91_48
  4626  000040  D00C               	goto	i2u91_49
  4627  000042                     i2u91_48:
  4628  000042  FFFF               	dw	65535	; assembler added errata NOP
  4629  000044  0005               	push	
  4630  000046  6EFA               	movwf	pclath,c
  4631  000048  5025               	movf	_callback_INT1,w,c
  4632  00004A  6EFD               	movwf	tosl,c
  4633  00004C  5026               	movf	_callback_INT1+1,w,c
  4634  00004E  6EFE               	movwf	tosh,c
  4635  000050  50F8               	movf	tblptru,w,c
  4636  000052  6EFF               	movwf	tosu,c
  4637  000054  50FA               	movf	pclath,w,c
  4638  000056  0012               	return		;indir
  4639  000058  FFFF               	dw	65535	; errata NOP
  4640  00005A                     i2u91_49:
  4641  00005A  FFFF               	dw	65535	; assembler added errata NOP
  4642                           
  4643                           ;INT.c: 90:         INT1IF = 0;
  4644  00005C  90F0               	bcf	4080,0,c	;volatile
  4645  00005E                     i2l1994:
  4646  00005E  FFFF               	dw	65535	; assembler added errata NOP
  4647                           
  4648                           ;INT.c: 92:     if(INT2IF){
  4649  000060  A2F0               	btfss	4080,1,c	;volatile
  4650  000062  D010               	goto	i2l2000
  4651                           
  4652                           ;INT.c: 93:         callback_INT2();
  4653  000064  D801               	call	i2u93_48
  4654  000066  D00C               	goto	i2u93_49
  4655  000068                     i2u93_48:
  4656  000068  FFFF               	dw	65535	; assembler added errata NOP
  4657  00006A  0005               	push	
  4658  00006C  6EFA               	movwf	pclath,c
  4659  00006E  5023               	movf	_callback_INT2,w,c
  4660  000070  6EFD               	movwf	tosl,c
  4661  000072  5024               	movf	_callback_INT2+1,w,c
  4662  000074  6EFE               	movwf	tosh,c
  4663  000076  50F8               	movf	tblptru,w,c
  4664  000078  6EFF               	movwf	tosu,c
  4665  00007A  50FA               	movf	pclath,w,c
  4666  00007C  0012               	return		;indir
  4667  00007E  FFFF               	dw	65535	; errata NOP
  4668  000080                     i2u93_49:
  4669  000080  FFFF               	dw	65535	; assembler added errata NOP
  4670                           
  4671                           ;INT.c: 94:         INT2IF = 0;
  4672  000082  92F0               	bcf	4080,1,c	;volatile
  4673  000084                     i2l2000:
  4674  000084  FFFF               	dw	65535	; assembler added errata NOP
  4675                           
  4676                           ;INT.c: 97:         callback_INTonChange();
  4677  000086  B0F2               	btfsc	4082,0,c	;volatile
  4678                           
  4679                           ;INT.c: 98:         RBIF = 0;
  4680  000088  90F2               	bcf	4082,0,c	;volatile
  4681                           
  4682                           ;INT.c: 102:     if(TMR0IF){
  4683                           
  4684                           ;INT.c: 99:     }
  4685  00008A  A4F2               	btfss	4082,2,c	;volatile
  4686  00008C  D014               	goto	i2l2012
  4687                           
  4688                           ;INT.c: 103:         callback_TMR0();
  4689  00008E  D801               	call	i2u96_48
  4690  000090  D00C               	goto	i2u96_49
  4691  000092                     i2u96_48:
  4692  000092  FFFF               	dw	65535	; assembler added errata NOP
  4693  000094  0005               	push	
  4694  000096  6EFA               	movwf	pclath,c
  4695  000098  501F               	movf	_callback_TMR0,w,c
  4696  00009A  6EFD               	movwf	tosl,c
  4697  00009C  5020               	movf	_callback_TMR0+1,w,c
  4698  00009E  6EFE               	movwf	tosh,c
  4699  0000A0  50F8               	movf	tblptru,w,c
  4700  0000A2  6EFF               	movwf	tosu,c
  4701  0000A4  50FA               	movf	pclath,w,c
  4702  0000A6  0012               	return		;indir
  4703  0000A8  FFFF               	dw	65535	; errata NOP
  4704  0000AA                     i2u96_49:
  4705  0000AA  FFFF               	dw	65535	; assembler added errata NOP
  4706                           
  4707                           ;INT.c: 104:         TMR0L = initial_tmr0;
  4708  0000AC  C017  FFD6         	movff	_initial_tmr0,4054	;volatile
  4709                           
  4710                           ;INT.c: 105:         TMR0H = (initial_tmr0>>8);
  4711  0000B0  5018               	movf	_initial_tmr0+1,w,c
  4712  0000B2  6ED7               	movwf	4055,c	;volatile
  4713                           
  4714                           ;INT.c: 106:         TMR0IF = 0;
  4715  0000B4  94F2               	bcf	4082,2,c	;volatile
  4716  0000B6                     i2l2012:
  4717  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  4718                           
  4719                           ;INT.c: 110:     if(TMR1IF){
  4720  0000B8  A09E               	btfss	3998,0,c	;volatile
  4721  0000BA  D014               	goto	i2l2022
  4722                           
  4723                           ;INT.c: 111:         callback_TMR1();
  4724  0000BC  D801               	call	i2u98_48
  4725  0000BE  D00C               	goto	i2u98_49
  4726  0000C0                     i2u98_48:
  4727  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  4728  0000C2  0005               	push	
  4729  0000C4  6EFA               	movwf	pclath,c
  4730  0000C6  501D               	movf	_callback_TMR1,w,c
  4731  0000C8  6EFD               	movwf	tosl,c
  4732  0000CA  501E               	movf	_callback_TMR1+1,w,c
  4733  0000CC  6EFE               	movwf	tosh,c
  4734  0000CE  50F8               	movf	tblptru,w,c
  4735  0000D0  6EFF               	movwf	tosu,c
  4736  0000D2  50FA               	movf	pclath,w,c
  4737  0000D4  0012               	return		;indir
  4738  0000D6  FFFF               	dw	65535	; errata NOP
  4739  0000D8                     i2u98_49:
  4740  0000D8  FFFF               	dw	65535	; assembler added errata NOP
  4741                           
  4742                           ;INT.c: 112:         TMR1L = initial_tmr1;
  4743  0000DA  C015  FFCE         	movff	_initial_tmr1,4046	;volatile
  4744                           
  4745                           ;INT.c: 113:         TMR1H = (initial_tmr1>>8);
  4746  0000DE  5016               	movf	_initial_tmr1+1,w,c
  4747  0000E0  6ECF               	movwf	4047,c	;volatile
  4748                           
  4749                           ;INT.c: 114:         TMR1IF = 0;
  4750  0000E2  909E               	bcf	3998,0,c	;volatile
  4751  0000E4                     i2l2022:
  4752  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  4753                           
  4754                           ;INT.c: 118:     if(TMR3IF){
  4755  0000E6  A2A1               	btfss	4001,1,c	;volatile
  4756  0000E8  D014               	goto	i2l2032
  4757                           
  4758                           ;INT.c: 119:         callback_TMR3();
  4759  0000EA  D801               	call	i2u100_48
  4760  0000EC  D00C               	goto	i2u100_49
  4761  0000EE                     i2u100_48:
  4762  0000EE  FFFF               	dw	65535	; assembler added errata NOP
  4763  0000F0  0005               	push	
  4764  0000F2  6EFA               	movwf	pclath,c
  4765  0000F4  501B               	movf	_callback_TMR3,w,c
  4766  0000F6  6EFD               	movwf	tosl,c
  4767  0000F8  501C               	movf	_callback_TMR3+1,w,c
  4768  0000FA  6EFE               	movwf	tosh,c
  4769  0000FC  50F8               	movf	tblptru,w,c
  4770  0000FE  6EFF               	movwf	tosu,c
  4771  000100  50FA               	movf	pclath,w,c
  4772  000102  0012               	return		;indir
  4773  000104  FFFF               	dw	65535	; errata NOP
  4774  000106                     i2u100_49:
  4775  000106  FFFF               	dw	65535	; assembler added errata NOP
  4776                           
  4777                           ;INT.c: 120:         TMR3L = initial_tmr3;
  4778  000108  C013  FFB2         	movff	_initial_tmr3,4018	;volatile
  4779                           
  4780                           ;INT.c: 121:         TMR3H = (initial_tmr3>>8);
  4781  00010C  5014               	movf	_initial_tmr3+1,w,c
  4782  00010E  6EB3               	movwf	4019,c	;volatile
  4783                           
  4784                           ;INT.c: 122:         TMR3IF = 0;
  4785  000110  92A1               	bcf	4001,1,c	;volatile
  4786  000112                     i2l2032:
  4787  000112  FFFF               	dw	65535	; assembler added errata NOP
  4788                           
  4789                           ;INT.c: 127:         callback_CCP1();
  4790  000114  B49E               	btfsc	3998,2,c	;volatile
  4791                           
  4792                           ;INT.c: 128:         CCP1IF = 0;
  4793  000116  949E               	bcf	3998,2,c	;volatile
  4794  000118  C052  FFFB         	movff	??_ISR+1,pclatu
  4795  00011C  C051  FFFA         	movff	??_ISR,pclath
  4796  000120  926B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4797  000122  0011               	retfie		f
  4798  000124  FFFF               	dw	65535	; errata NOP
  4799  000126                     __end_of_ISR:
  4800                           	opt callstack 0
  4801                           
  4802 ;; *************** function _tmr3_callback *****************
  4803 ;; Defined at:
  4804 ;;		line 177 in file "main.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4818 ;;      Params:         0       0       0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;;		_ISR
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text34
  4833  00106C                     __ptext34:
  4834                           	opt callstack 0
  4835  00106C                     _tmr3_callback:
  4836                           	opt callstack 0
  4837  00106C  FFFF               	dw	65535	; assembler added errata NOP
  4838                           
  4839                           ;main.c: 178:     x3++;
  4840                           
  4841                           ;incstack = 0
  4842  00106E  0E01               	movlw	1
  4843  001070  2601               	addwf	_x3,f,c	;volatile
  4844  001072  0E00               	movlw	0
  4845  001074  2202               	addwfc	_x3+1,f,c	;volatile
  4846  001076  2203               	addwfc	_x3+2,f,c	;volatile
  4847  001078  2204               	addwfc	_x3+3,f,c	;volatile
  4848  00107A  0012               	return		;funcret
  4849  00107C  FFFF               	dw	65535	; errata NOP
  4850  00107E                     __end_of_tmr3_callback:
  4851                           	opt callstack 0
  4852                           
  4853 ;; *************** function _tmr1_callback *****************
  4854 ;; Defined at:
  4855 ;;		line 173 in file "main.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4869 ;;      Params:         0       0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;;		_ISR
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text35
  4884  00107E                     __ptext35:
  4885                           	opt callstack 0
  4886  00107E                     _tmr1_callback:
  4887                           	opt callstack 0
  4888  00107E  FFFF               	dw	65535	; assembler added errata NOP
  4889                           
  4890                           ;main.c: 174:     x2++;
  4891                           
  4892                           ;incstack = 0
  4893  001080  0E01               	movlw	1
  4894  001082  2605               	addwf	_x2,f,c	;volatile
  4895  001084  0E00               	movlw	0
  4896  001086  2206               	addwfc	_x2+1,f,c	;volatile
  4897  001088  2207               	addwfc	_x2+2,f,c	;volatile
  4898  00108A  2208               	addwfc	_x2+3,f,c	;volatile
  4899  00108C  0012               	return		;funcret
  4900  00108E  FFFF               	dw	65535	; errata NOP
  4901  001090                     __end_of_tmr1_callback:
  4902                           	opt callstack 0
  4903                           
  4904 ;; *************** function _tmr0_callback *****************
  4905 ;; Defined at:
  4906 ;;		line 169 in file "main.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4920 ;;      Params:         0       0       0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0
  4923 ;;      Totals:         0       0       0       0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;;		_ISR
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text36
  4935  001090                     __ptext36:
  4936                           	opt callstack 0
  4937  001090                     _tmr0_callback:
  4938                           	opt callstack 0
  4939  001090  FFFF               	dw	65535	; assembler added errata NOP
  4940                           
  4941                           ;main.c: 170:     x1++;
  4942                           
  4943                           ;incstack = 0
  4944  001092  0E01               	movlw	1
  4945  001094  2609               	addwf	_x1,f,c	;volatile
  4946  001096  0E00               	movlw	0
  4947  001098  220A               	addwfc	_x1+1,f,c	;volatile
  4948  00109A  220B               	addwfc	_x1+2,f,c	;volatile
  4949  00109C  220C               	addwfc	_x1+3,f,c	;volatile
  4950  00109E  0012               	return		;funcret
  4951  0010A0  FFFF               	dw	65535	; errata NOP
  4952  0010A2                     __end_of_tmr0_callback:
  4953                           	opt callstack 0
  4954                           
  4955 ;; *************** function _int2_callback *****************
  4956 ;; Defined at:
  4957 ;;		line 162 in file "main.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4971 ;;      Params:         0       0       0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    1
  4978 ;; This function calls:
  4979 ;;		_TMR3_vdReset
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;;		_ISR
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text37
  4987  001004                     __ptext37:
  4988                           	opt callstack 0
  4989  001004                     _int2_callback:
  4990                           	opt callstack 0
  4991  001004  FFFF               	dw	65535	; assembler added errata NOP
  4992                           
  4993                           ;main.c: 163:     if(!status3){
  4994                           
  4995                           ;incstack = 0
  4996  001006  5029               	movf	_status3,w,c	;volatile
  4997  001008  A4D8               	btfss	status,2,c
  4998  00100A  D004               	goto	i2l138
  4999                           
  5000                           ;main.c: 164:         status3 = 1;
  5001  00100C  0E01               	movlw	1
  5002  00100E  6E29               	movwf	_status3,c	;volatile
  5003                           
  5004                           ;main.c: 165:         TMR3_vdReset();
  5005  001010  EC51  F008         	call	_TMR3_vdReset	;wreg free
  5006  001014                     i2l138:
  5007  001014  FFFF               	dw	65535	; assembler added errata NOP
  5008  001016  0012               	return		;funcret
  5009  001018  FFFF               	dw	65535	; errata NOP
  5010  00101A                     __end_of_int2_callback:
  5011                           	opt callstack 0
  5012                           
  5013 ;; *************** function _TMR3_vdReset *****************
  5014 ;; Defined at:
  5015 ;;		line 52 in file "TMR3.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5029 ;;      Params:         0       0       0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_int2_callback
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text38
  5043  0010A2                     __ptext38:
  5044                           	opt callstack 0
  5045  0010A2                     _TMR3_vdReset:
  5046                           	opt callstack 0
  5047  0010A2  FFFF               	dw	65535	; assembler added errata NOP
  5048                           
  5049                           ;TMR3.c: 53:     T3CONbits.TMR3ON = 0;
  5050                           
  5051                           ;incstack = 0
  5052  0010A4  90B1               	bcf	4017,0,c	;volatile
  5053                           
  5054                           ;TMR3.c: 54:     TMR3L = initial;
  5055  0010A6  C00D  FFB2         	movff	TMR3@initial,4018	;volatile
  5056                           
  5057                           ;TMR3.c: 55:     TMR3H = (initial>>8);
  5058  0010AA  500E               	movf	TMR3@initial+1,w,c
  5059  0010AC  6EB3               	movwf	4019,c	;volatile
  5060                           
  5061                           ;TMR3.c: 56:     T3CONbits.TMR3ON = 1;
  5062  0010AE  80B1               	bsf	4017,0,c	;volatile
  5063  0010B0  0012               	return		;funcret
  5064  0010B2  FFFF               	dw	65535	; errata NOP
  5065  0010B4                     __end_of_TMR3_vdReset:
  5066                           	opt callstack 0
  5067                           
  5068 ;; *************** function _int1_callback *****************
  5069 ;; Defined at:
  5070 ;;		line 155 in file "main.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5084 ;;      Params:         0       0       0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0
  5087 ;;      Totals:         0       0       0       0       0       0       0
  5088 ;;Total ram usage:        0 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    1
  5091 ;; This function calls:
  5092 ;;		_TMR1_vdReset
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;;		_ISR
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text39
  5100  00101A                     __ptext39:
  5101                           	opt callstack 0
  5102  00101A                     _int1_callback:
  5103                           	opt callstack 0
  5104  00101A  FFFF               	dw	65535	; assembler added errata NOP
  5105                           
  5106                           ;main.c: 156:     if(!status2){
  5107                           
  5108                           ;incstack = 0
  5109  00101C  502A               	movf	_status2,w,c	;volatile
  5110  00101E  A4D8               	btfss	status,2,c
  5111  001020  D004               	goto	i2l134
  5112                           
  5113                           ;main.c: 157:         status2 = 1;
  5114  001022  0E01               	movlw	1
  5115  001024  6E2A               	movwf	_status2,c	;volatile
  5116                           
  5117                           ;main.c: 158:         TMR1_vdReset();
  5118  001026  EC5A  F008         	call	_TMR1_vdReset	;wreg free
  5119  00102A                     i2l134:
  5120  00102A  FFFF               	dw	65535	; assembler added errata NOP
  5121  00102C  0012               	return		;funcret
  5122  00102E  FFFF               	dw	65535	; errata NOP
  5123  001030                     __end_of_int1_callback:
  5124                           	opt callstack 0
  5125                           
  5126 ;; *************** function _TMR1_vdReset *****************
  5127 ;; Defined at:
  5128 ;;		line 52 in file "TMR1.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;		None
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5142 ;;      Params:         0       0       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0
  5145 ;;      Totals:         0       0       0       0       0       0       0
  5146 ;;Total ram usage:        0 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_int1_callback
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text40
  5156  0010B4                     __ptext40:
  5157                           	opt callstack 0
  5158  0010B4                     _TMR1_vdReset:
  5159                           	opt callstack 0
  5160  0010B4  FFFF               	dw	65535	; assembler added errata NOP
  5161                           
  5162                           ;TMR1.c: 53:     T1CONbits.TMR1ON = 0;
  5163                           
  5164                           ;incstack = 0
  5165  0010B6  90CD               	bcf	4045,0,c	;volatile
  5166                           
  5167                           ;TMR1.c: 54:     TMR1L = initial;
  5168  0010B8  C00F  FFCE         	movff	TMR1@initial,4046	;volatile
  5169                           
  5170                           ;TMR1.c: 55:     TMR1H = (initial>>8);
  5171  0010BC  5010               	movf	TMR1@initial+1,w,c
  5172  0010BE  6ECF               	movwf	4047,c	;volatile
  5173                           
  5174                           ;TMR1.c: 56:     T1CONbits.TMR1ON = 1;
  5175  0010C0  80CD               	bsf	4045,0,c	;volatile
  5176  0010C2  0012               	return		;funcret
  5177  0010C4  FFFF               	dw	65535	; errata NOP
  5178  0010C6                     __end_of_TMR1_vdReset:
  5179                           	opt callstack 0
  5180                           
  5181 ;; *************** function _int0_callback *****************
  5182 ;; Defined at:
  5183 ;;		line 147 in file "main.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5197 ;;      Params:         0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    1
  5204 ;; This function calls:
  5205 ;;		_TMR0_vdReset
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;;		_ISR
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text41
  5213  001030                     __ptext41:
  5214                           	opt callstack 0
  5215  001030                     _int0_callback:
  5216                           	opt callstack 0
  5217  001030  FFFF               	dw	65535	; assembler added errata NOP
  5218                           
  5219                           ;main.c: 148:     if(!status1){
  5220                           
  5221                           ;incstack = 0
  5222  001032  502B               	movf	_status1,w,c	;volatile
  5223  001034  A4D8               	btfss	status,2,c
  5224  001036  D004               	goto	i2l130
  5225                           
  5226                           ;main.c: 149:         status1 = 1;
  5227  001038  0E01               	movlw	1
  5228  00103A  6E2B               	movwf	_status1,c	;volatile
  5229                           
  5230                           ;main.c: 150:         TMR0_vdReset();
  5231  00103C  EC23  F008         	call	_TMR0_vdReset	;wreg free
  5232  001040                     i2l130:
  5233  001040  FFFF               	dw	65535	; assembler added errata NOP
  5234  001042  0012               	return		;funcret
  5235  001044  FFFF               	dw	65535	; errata NOP
  5236  001046                     __end_of_int0_callback:
  5237                           	opt callstack 0
  5238                           
  5239 ;; *************** function _TMR0_vdReset *****************
  5240 ;; Defined at:
  5241 ;;		line 59 in file "TMR0.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5255 ;;      Params:         0       0       0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_int0_callback
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text42
  5269  001046                     __ptext42:
  5270                           	opt callstack 0
  5271  001046                     _TMR0_vdReset:
  5272                           	opt callstack 0
  5273  001046  FFFF               	dw	65535	; assembler added errata NOP
  5274                           
  5275                           ;TMR0.c: 60:     T0CONbits.TMR0ON = 0;
  5276                           
  5277                           ;incstack = 0
  5278  001048  9ED5               	bcf	4053,7,c	;volatile
  5279                           
  5280                           ;TMR0.c: 61:     TMR0L = initial;
  5281  00104A  C011  FFD6         	movff	_initial,4054	;volatile
  5282                           
  5283                           ;TMR0.c: 62:     TMR0H = (initial>>8);
  5284  00104E  5012               	movf	_initial+1,w,c
  5285  001050  6ED7               	movwf	4055,c	;volatile
  5286                           
  5287                           ;TMR0.c: 63:     T0CONbits.TMR0ON = 1;
  5288  001052  8ED5               	bsf	4053,7,c	;volatile
  5289  001054  0012               	return		;funcret
  5290  001056  FFFF               	dw	65535	; errata NOP
  5291  001058                     __end_of_TMR0_vdReset:
  5292                           	opt callstack 0
  5293  001058  FFFF               	dw	65535	; assembler added errata NOP
  5294                           
  5295                           	psect	text43
  5296  000000                     __ptext43:
  5297                           	opt callstack 0
  5298                           
  5299                           	psect	rparam
  5300  0000                     
  5301                           	psect	temp
  5302  00006B                     btemp:
  5303                           	opt callstack 0
  5304  00006B                     	ds	1
  5305  0000                     int$flags	set	btemp
  5306  0000                     wtemp8	set	btemp+1
  5307  0000                     ttemp5	set	btemp+1
  5308  0000                     ttemp6	set	btemp+4
  5309  0000                     ttemp7	set	btemp+8
  5310                           tosu	equ	0xFFF
  5311                           tosh	equ	0xFFE
  5312                           tosl	equ	0xFFD
  5313                           stkptr	equ	0xFFC
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           pcl	equ	0xFF9
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           indf0	equ	0xFEF
  5324                           postinc0	equ	0xFEE
  5325                           postdec0	equ	0xFED
  5326                           preinc0	equ	0xFEC
  5327                           plusw0	equ	0xFEB
  5328                           fsr0h	equ	0xFEA
  5329                           fsr0l	equ	0xFE9
  5330                           wreg	equ	0xFE8
  5331                           indf1	equ	0xFE7
  5332                           postinc1	equ	0xFE6
  5333                           postdec1	equ	0xFE5
  5334                           preinc1	equ	0xFE4
  5335                           plusw1	equ	0xFE3
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           bsr	equ	0xFE0
  5339                           indf2	equ	0xFDF
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           preinc2	equ	0xFDC
  5343                           plusw2	equ	0xFDB
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        86
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26     106
    BANK0           128     20      77
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    TMR3_vdSetTMR3Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr3_callback(), 

    TMR1_vdSetTMR1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_callback(), 

    TMR0_vdSetTMR0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_callback(), 

    LED_vdSetStatus@led	PTR struct . size(2) Largest target is 7
		 -> LED4(BANK0[7]), LED3(COMRAM[7]), LED2(COMRAM[7]), LED1(COMRAM[7]), 

    callback_CCP1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetTMR3Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr3_callback(), 

    callback_TMR3	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr3_callback(), 

    INT_vdSetTMR1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_callback(), 

    callback_TMR1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr1_callback(), 

    INT_vdSetTMR0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_callback(), 

    callback_TMR0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr0_callback(), 

    callback_INTonChange	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetINT2Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int2_callback(), 

    callback_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int2_callback(), 

    INT_vdSetINT1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int1_callback(), 

    callback_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int1_callback(), 

    INT_vdSetINT0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int0_callback(), 

    callback_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int0_callback(), 

    DIO_vdInit@dev	PTR struct . size(2) Largest target is 7
		 -> btnStop3(BANK0[7]), btnStop2(BANK0[7]), btnStop1(BANK0[7]), BTN3(BANK0[7]), 
		 -> BTN2(BANK0[7]), BTN1(BANK0[7]), LED4(BANK0[7]), LED3(COMRAM[7]), 
		 -> LED2(COMRAM[7]), LED1(COMRAM[7]), 

    BTN_u8getStatus@btn	PTR struct . size(2) Largest target is 7
		 -> btnStop3(BANK0[7]), btnStop2(BANK0[7]), btnStop1(BANK0[7]), 

    p_PORTDdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTDdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    _main->_UART_vdInit
    ___lwdiv->___wmul
    _UART_vdSendu8asASCI->___awdiv
    _UART_vdInit->___aldiv
    _TMR3_vdSetTMR3Callback->_INT_vdSetTMR3Callback
    _TMR1_vdSetTMR1Callback->_INT_vdSetTMR1Callback
    _TMR0_vdSetTMR0Callback->_INT_vdSetTMR0Callback
    _LED_vdSetStatus->_DIO_vdWritePin
    _DIO_vdInit->_DIO_vdWriteDirPin
    _BTN_u8getStatus->_DIO_u8ReadPin

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   11064
                                             18 COMRAM     8     8      0
                                              0 BANK0     20    20      0
                    _ADC_u16getValue
                         _ADC_vdInit
                    _BTN_u8getStatus
                         _DIO_vdInit
              _INT_vdSetINT0Callback
              _INT_vdSetINT1Callback
              _INT_vdSetINT2Callback
                         _INT_vdinit
                    _LED_vdSetStatus
                        _TMR0_vdInit
             _TMR0_vdSetTMR0Callback
                        _TMR0_vdStop
                        _TMR1_vdInit
             _TMR1_vdSetTMR1Callback
                        _TMR1_vdStop
                        _TMR3_vdInit
             _TMR3_vdSetTMR3Callback
                        _TMR3_vdStop
                        _UART_vdInit
                    _UART_vdSendByte
                _UART_vdSendu8asASCI
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     412
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     601
                                              8 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu8asASCI                                  6     6      0    1947
                                             10 COMRAM     6     6      0
                    _UART_vdSendByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_vdSendByte                                      1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_vdInit                                          2     0      2     746
                                             16 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdSetTMR3Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR3Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR3Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR3_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdSetTMR1Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR1Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR1Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdSetTMR0Callback                               2     0      2     363
                                              6 COMRAM     2     0      2
              _INT_vdSetTMR0Callback
 ---------------------------------------------------------------------------------
 (2) _INT_vdSetTMR0Callback                                4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdInit                                          8     3      5     515
                                              2 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LED_vdSetStatus                                      3     0      3    1756
                                              7 COMRAM     3     0      3
                     _DIO_vdWritePin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWritePin                                       5     3      2     943
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT2Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT1Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT0Callback                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DIO_vdInit                                           2     0      2    1576
                                              7 COMRAM     2     0      2
                  _DIO_vdWriteDirPin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWriteDirPin                                    5     3      2     583
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BTN_u8getStatus                                      2     0      2     636
                                              6 COMRAM     2     0      2
                      _DIO_u8ReadPin
 ---------------------------------------------------------------------------------
 (2) _DIO_u8ReadPin                                        4     3      1     304
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_vdInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_u16getValue                                      7     5      2      96
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                      _int0_callback *
                      _int1_callback *
                      _int2_callback *
                      _tmr0_callback *
                      _tmr1_callback *
                      _tmr3_callback *
 ---------------------------------------------------------------------------------
 (4) _tmr3_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _tmr1_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _tmr0_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int2_callback                                        0     0      0       0
                       _TMR3_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR3_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int1_callback                                        0     0      0       0
                       _TMR1_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR1_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int0_callback                                        0     0      0       0
                       _TMR0_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR0_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_u16getValue
   _ADC_vdInit
   _BTN_u8getStatus
     _DIO_u8ReadPin
   _DIO_vdInit
     _DIO_vdWriteDirPin
   _INT_vdSetINT0Callback
   _INT_vdSetINT1Callback
   _INT_vdSetINT2Callback
   _INT_vdinit
   _LED_vdSetStatus
     _DIO_vdWritePin
   _TMR0_vdInit
   _TMR0_vdSetTMR0Callback
     _INT_vdSetTMR0Callback
   _TMR0_vdStop
   _TMR1_vdInit
   _TMR1_vdSetTMR1Callback
     _INT_vdSetTMR1Callback
   _TMR1_vdStop
   _TMR3_vdInit
   _TMR3_vdSetTMR3Callback
     _INT_vdSetTMR3Callback
   _TMR3_vdStop
   _UART_vdInit
     ___aldiv
   _UART_vdSendByte
   _UART_vdSendu8asASCI
     _UART_vdSendByte
     ___awdiv
     ___awmod
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _ISR (ROOT)
   Absolute function(Fake) *
   _int0_callback *
     _TMR0_vdReset
   _int1_callback *
     _TMR1_vdReset
   _int2_callback *
     _TMR3_vdReset
   _tmr0_callback *
   _tmr1_callback *
   _tmr3_callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      4D       5       60.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7      15        0.0%
DATA                 0      0      B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jan 02 08:47:00 2020

                                            _DIO_vdWritePin 0512  
                                               ?_DIO_vdInit 0058  
                                        ADC_u16getValue@pin 0059  
                                              ___awdiv@sign 0058  
                                      _callback_INTonChange 0021  
                                                        _x1 0009  
                                                        _x2 0005  
                                                        _x3 0001  
                                               __CFG_BOR$ON 000000  
                                         _DIO_vdWriteDirPin 0668  
                                       ___wmul@multiplicand 0055  
                                              __CFG_CP0$OFF 000000  
                                              __CFG_CP1$OFF 000000  
                                              __CFG_CP2$OFF 000000  
                                              __CFG_CP3$OFF 000000  
                                               __CFG_OSC$XT 000000  
                                        ?_DIO_vdWriteDirPin 0053  
                                       ADC_u16getValue@data 0057  
                                                       l309 09E8  
                                                       l262 0662  
                                                       l183 0D10  
                                                       l511 0B24  
                                                       l512 0B4E  
                                                       l513 0B2A  
                                                       l610 0BE2  
                                                       l611 0BBE  
                                                       l516 0B96  
                                                       l614 0C2A  
                                                       l279 07B8  
                                                       l480 0900  
                                                       l472 08A4  
                                                       l609 0BB8  
                                                       l482 0906  
                                                       l474 08AA  
                                                       l476 08D0  
                                                       l477 08FA  
                                                       l478 08D6  
                                                       l578 0A80  
                                              __CFG_CPB$OFF 000000  
                                              __CFG_CPD$OFF 000000  
                                                       _ISR 0008  
                                              __CFG_BORV$20 000000  
                                              ___awmod@sign 0058  
                                                       tosl 000FFD  
                                                       wreg 000FE8  
                                  TMR3_vdSetTMR3Callback@pf 0057  
                                 INT_vdSetTMR3Callback@init 0055  
                                       ??_DIO_vdWriteDirPin 0055  
                                       __size_of_ADC_vdInit 0018  
                                              __CFG_LVP$OFF 000000  
                                                      ?_ISR 0051  
                                              __CFG_WDT$OFF 000000  
                                                      l1122 0DF2  
                                                      l3020 090C  
                                                      l3012 08B0  
                                                      l3022 092A  
                                                      l3016 08DC  
                                                      l3060 0B78  
                                                      l3052 0B30  
                                                      l3054 0B5C  
                                                      l3056 0B64  
                                                      l3304 04EC  
                                                      l3090 0C0C  
                                                      l3082 0BC4  
                                                      l3170 0A52  
                                                      l3250 0354  
                                                      l3234 025A  
                                                      l3084 0BF0  
                                                      l3172 0A66  
                                                      l3156 09FA  
                                                      l3086 0BF8  
                                                      l2800 0694  
                                                      l3272 0458  
                                                      l2802 06B6  
                                                      l3186 0DB8  
                                                      l3266 043C  
                                                      l3258 03C8  
                                                      l2812 0724  
                                                      l3188 0DC2  
                                                      l3284 0490  
                                                      l2814 0746  
                                                      l2806 06DC  
                                                      l2822 078E  
                                                      l2830 0518  
                                                      l2910 0870  
                                                      l3198 0DE6  
                                                      l3278 0474  
                                                      l2808 06FE  
                                                      l2840 0586  
                                                      l2770 0952  
                                                      l2818 076C  
                                                      l2842 05A8  
                                                      l2834 053E  
                                                      l2914 0888  
                                                      l2906 0860  
                                                      l2852 0616  
                                                      l2836 0560  
                                                      l2764 105E  
                                                      l2940 0AD0  
                                                      l2932 0AAE  
                                                      l2774 0972  
                                                      l2846 05CE  
                                                      l2950 0AF4  
                                                      l2926 0A9C  
                                                      l2784 09C0  
                                                      l2848 05F0  
                                                      l2856 0638  
                                                      l2786 09E4  
                                                      l2778 0998  
                                                      l2882 07DC  
                                                      l2938 0AC6  
                                                      l2954 0B00  
                                                      l2970 0C5A  
                                                      l2796 066E  
                                                      l2980 0C82  
                                                      l2894 081A  
                                                      l2958 0B10  
                                                      l2990 0CAA  
                                                      l2974 0C68  
                                                      l2896 0828  
                                                      l2888 07F6  
                                                      l2994 0CBA  
                                                      l2986 0C9E  
                                                      l2978 0C78  
                                                      _ADIF 007CF6  
                                                      _BTN1 00A3  
                                                      _LED1 004A  
                                                      _BRGH 007D62  
                                                      _BTN2 009C  
                                                      _LED2 0043  
                                                      _BTN3 0095  
                                                      _LED3 003C  
                                                      _LED4 00AA  
                                                      u2024 0688  
                                                      u2025 0682  
                                                      u2114 0760  
                                                      u2034 06A8  
                                                      u2115 075A  
                                                      u2035 06A2  
                                                      u2124 0780  
                                                      u2204 05C2  
                                                      u2125 077A  
                                                      u2205 05BC  
                                                      u2054 06D0  
                                                      u2214 05E2  
                                                      u2055 06CA  
                                                      u2215 05DC  
                                                      u2064 06F0  
                                                      u2144 0532  
                                                      u2400 0C88  
                                                      u2065 06EA  
                                                      u2145 052C  
                                                      u2234 060A  
                                                      u2154 0552  
                                                      u2235 0604  
                                                      u2155 054C  
                                                      u2084 0718  
                                                      u2244 062A  
                                                      u2340 0AD6  
                                                      u2085 0712  
                                                      u2245 0624  
                                                      u2094 0738  
                                                      u2174 057A  
                                                      u2510 0DC8  
                                                      u2095 0732  
                                                      u2175 0574  
                                                      u2184 059A  
                                                      u2280 082E  
                                                      u2600 0434  
                                                      u2185 0594  
                                                      u2610 0438  
                                                      u2435 0B58  
                                                      u2436 0B5A  
                                                      u2540 034C  
                                                      u2445 0BEC  
                                                      u2454 0CF2  
                                                      u2446 0BEE  
                                                      u2550 0350  
                                                      u2455 0CEC  
                                                      u2570 03C0  
                                                      u1924 0966  
                                                      u2580 03C4  
                                                      u1925 0960  
                                                      u1961 0992  
                                                      u1954 0986  
                                                      u1955 0980  
                                                      u2747 0504  
                                                      _PEIE 007F96  
                                                      u2757 0D02  
                                                      u1984 09AC  
                                                      _RBIF 007F90  
                                                      u1985 09A6  
                                                      _TXIF 007CF4  
                                               main@input_T 00B9  
                                              __CFG_STVR$ON 000000  
                                               main@x_max16 00BC  
                               __end_of_UART_vdSendu8asASCI 0A86  
                                                      _main 012A  
                                                      fsr2h 000FDA  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      btemp 006B  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0126  
                                    __end_of_DIO_vdWritePin 0668  
                                              ___param_bank 000000  
                                 __end_of_DIO_vdWriteDirPin 07BE  
                                                     ??_ISR 0051  
                                           ??_DIO_u8ReadPin 0054  
                                             __CFG_OSCS$OFF 000000  
                                           ??_int0_callback 0051  
                                               ?_INT_vdinit 0051  
                                           __end_of___aldiv 089E  
                                           _ADC_u16getValue 0CC8  
                                                     ?_main 0051  
                                           __end_of___awdiv 0B1E  
                                     _INT_vdSetTMR0Callback 0FEE  
                                           __end_of___awmod 0CC8  
                                           ___awdiv@divisor 0055  
                                           __end_of___lwdiv 0E00  
                                                     i2l130 1040  
                                                     i2l134 102A  
                                                     i2l138 1014  
                                           ___awdiv@counter 0057  
                                     _INT_vdSetTMR1Callback 0FD8  
                                           ??_int1_callback 0051  
                                                     _TMR0H 000FD7  
                                                     _TMR1H 000FCF  
                                                     _TMR0L 000FD6  
                                                     _TMR1L 000FCE  
                                                     _TMR3H 000FB3  
                                                     _TMR3L 000FB2  
                                                     _SPBRG 000FAF  
                                                     _TRISA 000F92  
                                          ?_LED_vdSetStatus 0058  
                                                     _TXREG 000FAD  
                                             __CFG_PWRT$OFF 000000  
                                             __CFG_WRT0$OFF 000000  
                                             __CFG_WRT1$OFF 000000  
                                             __CFG_WRT2$OFF 000000  
                                             __CFG_WRT3$OFF 000000  
                                            __CFG_EBTR0$OFF 000000  
                                            __CFG_EBTR1$OFF 000000  
                                            __CFG_EBTR2$OFF 000000  
                                            __CFG_EBTR3$OFF 000000  
                                     _INT_vdSetTMR3Callback 0FC2  
                                           ??_int2_callback 0051  
                                     __end_of_tmr0_callback 10A2  
                                           _UART_vdSendByte 105A  
                                             __CFG_WRTB$OFF 000000  
                                             __CFG_WRTC$OFF 000000  
                                             __CFG_WRTD$OFF 000000  
                                            __CFG_EBTRB$OFF 000000  
                                     __end_of_tmr1_callback 1090  
                                                     main@T 00C4  
                                       __size_of_DIO_vdInit 0034  
                                                     pclath 000FFA  
                                                     tablat 000FF5  
                                        LED_vdSetStatus@led 0058  
                                                     ttemp5 006C  
                                                     ttemp6 006F  
                                                     ttemp7 0073  
                                                     status 000FD8  
                                                     wtemp8 006C  
                                      UART_vdSendu8asASCI@i 0060  
                                          _p_PORTAdirection 0038  
                                     __end_of_tmr3_callback 107E  
                                           ?_DIO_vdWritePin 0053  
                                   ??_INT_vdSetINT0Callback 0055  
                                          _p_PORTBdirection 0034  
                                           __initialization 0D3A  
                                   ??_INT_vdSetINT1Callback 0055  
                                              __end_of_main 0512  
                                   ??_INT_vdSetINT2Callback 0055  
                                          _p_PORTCdirection 0030  
                                  __size_of_BTN_u8getStatus 0024  
                                          _p_PORTDdirection 002C  
                                                    ??_main 0063  
                                             __activetblptr 000002  
                                      TMR1_vdInit@prescaler 0054  
                                           __CFG_CCP2MUX$ON 000000  
                                                    _CCP1IF 007CF2  
                                                    _ADRESH 000FC4  
                                                    _ADRESL 000FC3  
                                          ___awdiv@dividend 0053  
                                                    _INT0IF 007F91  
                                                    _INT1IF 007F80  
                                                    _INT2IF 007F81  
                                                    i2l2000 0084  
                                                    i2l2012 00B6  
                                                    i2l2022 00E4  
                                                    i2l2032 0112  
                                                    i2l1994 005E  
                                                    i2l1988 0038  
                                                    _TMR0IF 007F92  
                                                    _TMR1IF 007CF0  
                                            __CFG_WDTPS$128 000000  
                                                    _TMR3IF 007D09  
                                                    _TRISC6 007CA6  
                                       __size_of_INT_vdinit 0026  
                                   ?_TMR1_vdSetTMR1Callback 0057  
                                              ??_ADC_vdInit 0053  
                                   __end_of_ADC_u16getValue 0D3A  
                                __size_of_DIO_vdWriteDirPin 0156  
                                                 ??___aldiv 005B  
                                                    ___wmul 0E9A  
                                                 ??___awdiv 0057  
                                                 ??___awmod 0057  
                                              ?_UART_vdInit 0061  
                                                 ??___lwdiv 005D  
                                                    clear_0 0D80  
                                                    clear_1 0D8C  
                                    ?_INT_vdSetTMR0Callback 0053  
                                          ___awdiv@quotient 0059  
                                           ___awmod@divisor 0055  
                                              ?_TMR0_vdInit 0053  
                                   __end_of_UART_vdSendByte 106C  
                                           ___awmod@counter 0057  
                                    ?_INT_vdSetTMR1Callback 0053  
                                              ?_TMR0_vdStop 0051  
                                              ?_TMR1_vdInit 0053  
                                              ?_TMR1_vdStop 0051  
                                              ?_TMR3_vdInit 0053  
                                              ?_TMR3_vdStop 0051  
                                              __pdataCOMRAM 002C  
                                    ?_INT_vdSetTMR3Callback 0053  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                             DIO_vdInit@dev 0058  
                                        BTN_u8getStatus@btn 0057  
                                        __end_of_ADC_vdInit 0FC2  
                                                __accesstop 0080  
                                   __end_of__initialization 0D92  
                            __end_of_TMR1_vdSetTMR1Callback 0F90  
                                           UART_vdInit@baud 0061  
                                             ___rparam_used 000001  
                                   INT_vdSetTMR0Callback@pf 0053  
                                            __pcstackCOMRAM 0051  
                                              ??_DIO_vdInit 005A  
                                              __pidataBANK0 0E68  
                                   INT_vdSetTMR1Callback@pf 0053  
                                         ??_BTN_u8getStatus 0059  
                                                __pbssBANK0 00C5  
                                        __end_of_DIO_vdInit 0E68  
                                          ?_ADC_u16getValue 0053  
                                                   ?___wmul 0053  
                                          DIO_u8ReadPin@pin 0053  
                                              ??_INT_vdinit 0053  
                                          ?_UART_vdSendByte 0051  
                                         DIO_vdWritePin@pin 0054  
                                   INT_vdSetTMR3Callback@pf 0053  
                                  ??_TMR0_vdSetTMR0Callback 0059  
                                                   i2u91_48 0042  
                                                   i2u91_49 005A  
                                                   i2u93_48 0068  
                                                   i2u93_49 0080  
                                                   i2u96_48 0092  
                                                   i2u96_49 00AA  
                                                   i2u89_48 001C  
                                                   i2u89_49 0034  
                                                   i2u98_48 00C0  
                                                   i2u98_49 00D8  
                                  ??_TMR3_vdSetTMR3Callback 0059  
                                          ??_DIO_vdWritePin 0055  
                                        __end_of_INT_vdinit 0F12  
                                                   __Hparam 0000  
                                                   __Lparam 0000  
                              __size_of_UART_vdSendu8asASCI 0098  
                            __size_of_INT_vdSetINT0Callback 000E  
                                                   ___aldiv 07BE  
                             __end_of_INT_vdSetINT0Callback 10F0  
                                                   ___awdiv 0A86  
                                                   ___awmod 0C44  
                                           __size_of___wmul 002A  
                            __size_of_INT_vdSetINT1Callback 000E  
                                                   ___lwdiv 0DA0  
                                               TMR1@initial 000F  
                             __end_of_INT_vdSetINT1Callback 10E2  
                            __size_of_INT_vdSetINT2Callback 000E  
                             __end_of_INT_vdSetINT2Callback 10D4  
                                                   __pcinit 0D3A  
                                     __end_of_DIO_u8ReadPin 09EE  
                                                   __ramtop 0600  
                                               TMR3@initial 000D  
                                      __size_of_UART_vdInit 0034  
                                                   __ptext0 012A  
                                                   __ptext1 0E9A  
                                                   __ptext2 0DA0  
                                                   __ptext3 09EE  
                                                   __ptext4 0C44  
                                                   __ptext5 0A86  
                                                   __ptext6 105A  
                                                   __ptext7 0E00  
                                                   __ptext8 07BE  
                                                   __ptext9 10F0  
                                             _callback_CCP1 0019  
                                             _callback_INT0 0027  
                                             _callback_INT1 0025  
                                             _callback_INT2 0023  
                                                 _T0CONbits 000FD5  
                                             _callback_TMR0 001F  
                                             _callback_TMR1 001D  
                                             _callback_TMR3 001B  
                                              __size_of_ISR 011E  
                                     __end_of_int0_callback 1046  
                                                 _T1CONbits 000FCD  
                                                   _initial 0011  
                                      __size_of_TMR0_vdInit 00AE  
                                                 _T3CONbits 000FB1  
                                          ___awmod@dividend 0053  
                                      __size_of_TMR0_vdStop 0008  
                                      __size_of_TMR1_vdInit 0094  
                                          ___aldiv@dividend 0053  
                                      __size_of_TMR1_vdStop 0008  
                                     __end_of_int1_callback 1030  
                                      __size_of_TMR3_vdInit 0092  
                                      __size_of_TMR3_vdStop 0008  
                                             ?_TMR0_vdReset 0051  
                                                   _status1 002B  
                                                   _status2 002A  
                                                   _status3 0029  
                                     __end_of_int2_callback 101A  
                                             ?_TMR1_vdReset 0051  
                                      end_of_initialization 0D92  
                                  __size_of_LED_vdSetStatus 0028  
                                             ?_TMR3_vdReset 0051  
                                             __Lmediumconst 0000  
                                                 _BTNstatus 00C5  
                                                 _RCSTAbits 000FAB  
                                          ___aldiv@quotient 005D  
                                   ??_INT_vdSetTMR0Callback 0057  
                                                   postdec1 000FE5  
                                    __size_of_tmr0_callback 0012  
                                                   postinc0 000FEE  
                                   ??_INT_vdSetTMR1Callback 0057  
                                    __size_of_tmr1_callback 0012  
                                   ??_INT_vdSetTMR3Callback 0057  
                                TMR1_vdInit@prescaler_value 0055  
                                      TMR3_vdInit@prescaler 0054  
                                    __size_of_tmr3_callback 0012  
                                            ??_TMR0_vdReset 0051  
                                       UART_vdSendByte@data 0053  
                           __size_of_TMR0_vdSetTMR0Callback 001A  
                                            ??_TMR1_vdReset 0051  
                                            ??_TMR3_vdReset 0051  
                           __size_of_TMR3_vdSetTMR3Callback 001A  
                                                 _TXSTAbits 000FAC  
                                                main@x_max8 00B1  
                                           TMR0_vdInit@bits 0053  
                                           TMR0_vdInit@init 0056  
                                           TMR0_vdInit@mode 005A  
                                           _BTN_u8getStatus 0F38  
                                            __end_of___wmul 0EC4  
                                     DIO_vdWriteDirPin@data 0057  
                                             __pidataCOMRAM 0F12  
                                     DIO_vdWriteDirPin@port 0053  
                                   INT_vdSetINT0Callback@pf 0053  
                                       start_initialization 0D3A  
                                               __end_of_ISR 0126  
                                             _tmr0_callback 1090  
                                             _tmr1_callback 107E  
                                   INT_vdSetINT1Callback@pf 0053  
                                           TMR1_vdInit@bits 0053  
                                             _tmr3_callback 106C  
                                               _p_PORTAdata 003A  
                                               _p_PORTBdata 0036  
                                               _p_PORTCdata 0032  
                                           TMR1_vdInit@init 0056  
                                               _p_PORTDdata 002E  
                                           TMR1_vdInit@mode 005A  
                                         ??_LED_vdSetStatus 005B  
                                    _TMR0_vdSetTMR0Callback 0F90  
                                                  ??___wmul 0057  
                                               __pdataBANK0 0080  
                                    _TMR3_vdSetTMR3Callback 0F5C  
                                   INT_vdSetINT2Callback@pf 0053  
                                               __pbssCOMRAM 0001  
                                 INT_vdSetTMR0Callback@init 0055  
                                  TMR1_vdSetTMR1Callback@pf 0057  
                                             __pcstackBANK0 00B1  
                                            ?_tmr0_callback 0051  
                                       _UART_vdSendu8asASCI 09EE  
                                            ?_tmr1_callback 0051  
                                   __end_of_BTN_u8getStatus 0F5C  
                                            ?_tmr3_callback 0051  
                                          ___lwdiv@dividend 0059  
                                              _initial_tmr0 0017  
                                              _initial_tmr1 0015  
                                              _initial_tmr3 0013  
                                      __end_of_TMR0_vdReset 1058  
                                                 __pintcode 0008  
                                      ?_UART_vdSendu8asASCI 0051  
                                                  ?___aldiv 0053  
                                                  ?___awdiv 0053  
                                                  ?___awmod 0053  
                                      __end_of_TMR1_vdReset 10C6  
                                                  ?___lwdiv 0059  
                                      __end_of_TMR3_vdReset 10B4  
                                  __size_of_ADC_u16getValue 0072  
                                         DIO_u8ReadPin@port 0056  
                                  ??_TMR1_vdSetTMR1Callback 0059  
                                          ___lwdiv@quotient 005E  
                                  __size_of_UART_vdSendByte 0012  
                                        DIO_vdWritePin@data 0057  
                                        DIO_vdWritePin@port 0053  
                                           ___aldiv@divisor 0057  
                                           ___aldiv@counter 005B  
                                            ___wmul@product 0057  
                                                  _IPR1bits 000F9F  
                                                  _IPR2bits 000FA2  
                                                  _PIE1bits 000F9D  
                                                  _PIE2bits 000FA0  
                                                  i2u100_48 00EE  
                                                  i2u100_49 0106  
                                           TMR3_vdInit@bits 0053  
                                           TMR3_vdInit@init 0056  
                                           TMR3_vdInit@mode 005A  
                                     ??_UART_vdSendu8asASCI 005B  
                                             ??_UART_vdInit 0063  
                            __size_of_INT_vdSetTMR0Callback 0016  
                             __end_of_INT_vdSetTMR0Callback 1004  
                            __size_of_INT_vdSetTMR1Callback 0016  
                                     _INT_vdSetINT0Callback 10E2  
                                             ??_TMR0_vdInit 0058  
                             __end_of_INT_vdSetTMR1Callback 0FEE  
                                             ??_TMR0_vdStop 0053  
                                             ??_TMR1_vdInit 0058  
                                                _ADCON0bits 000FC2  
                                                _ADCON1bits 000FC1  
                                             ??_TMR1_vdStop 0053  
                                     _INT_vdSetINT1Callback 10D4  
                                         ___wmul@multiplier 0053  
                                             ??_TMR3_vdInit 0058  
                            __size_of_INT_vdSetTMR3Callback 0016  
                                             ??_TMR3_vdStop 0053  
                                     _INT_vdSetINT2Callback 10C6  
                             __end_of_INT_vdSetTMR3Callback 0FD8  
                                           ??_tmr0_callback 0051  
                                 INT_vdSetTMR1Callback@init 0055  
                                           ??_tmr1_callback 0051  
                                               _INTCON1bits 000FF2  
                                               _INTCON2bits 000FF1  
                                               _INTCON3bits 000FF0  
                                      DIO_vdWriteDirPin@pin 0054  
                                                 copy_data0 0D4E  
                                                 copy_data1 0D6E  
                                           ??_tmr3_callback 0051  
                                    __size_of_DIO_u8ReadPin 00A2  
                                          ?_BTN_u8getStatus 0057  
                                    __size_of_int0_callback 0016  
                                                  __Hrparam 0000  
                                                  __Lrparam 0000  
                                                _ADC_vdInit 0FAA  
                                    __size_of_int1_callback 0016  
                                   __size_of_DIO_vdWritePin 0156  
                                          __size_of___aldiv 00E0  
                                          __size_of___awdiv 0098  
                                          __size_of___awmod 0084  
                                    __size_of_int2_callback 0016  
                                          __size_of___lwdiv 0060  
                                TMR0_vdInit@prescaler_value 0055  
                                       __end_of_UART_vdInit 0E34  
                                                  _main$381 00BB  
                                           ___lwdiv@divisor 005B  
                                       __end_of_TMR0_vdInit 094C  
                                TMR3_vdInit@prescaler_value 0055  
                                           ___lwdiv@counter 005D  
                                       __end_of_TMR0_vdStop 1108  
                                       __end_of_TMR1_vdInit 0BB2  
                                                  __ptext10 0F5C  
                                                  __ptext11 0FC2  
                                                  __ptext20 089E  
                                                  __ptext12 0BB2  
                                                  __ptext21 0EC4  
                                                  __ptext13 10F8  
                                                  __ptext30 094C  
                                                  __ptext22 0512  
                                                  __ptext14 0F76  
                                                  __ptext31 0FAA  
                                                  __ptext23 0EEC  
                                                  __ptext15 0FD8  
                                                  __ptext40 10B4  
                                                  __ptext32 0CC8  
                                                  __ptext24 10C6  
                                                  __ptext16 0B1E  
                                                  __ptext41 1030  
                                                  __ptext25 10D4  
                                                  __ptext17 1100  
                                                  __ptext42 1046  
                                                  __ptext34 106C  
                                                  __ptext26 10E2  
                                                  __ptext18 0F90  
                                                  __ptext43 0000  
                                                  __ptext35 107E  
                                                  __ptext27 0E34  
                                                  __ptext19 0FEE  
                                                  __ptext36 1090  
                                                  __ptext28 0668  
                                                  __ptext37 1004  
                                                  __ptext29 0F38  
                                                  __ptext38 10A2  
                                                  __ptext39 101A  
                                       __end_of_TMR1_vdStop 1100  
                                       __end_of_TMR3_vdInit 0C44  
                           __size_of_TMR1_vdSetTMR1Callback 001A  
                                                  _btnStop1 008E  
                                                  _btnStop2 0087  
                                                  _btnStop3 0080  
                                         ??_ADC_u16getValue 0055  
                                       __end_of_TMR3_vdStop 10F8  
                                           _LED_vdSetStatus 0EC4  
                                             __size_of_main 03E8  
                                     __size_of_TMR0_vdReset 0012  
                                   ?_TMR0_vdSetTMR0Callback 0057  
                                         ??_UART_vdSendByte 0053  
                                     __size_of_TMR1_vdReset 0012  
                                     __size_of_TMR3_vdReset 0012  
                                   ?_TMR3_vdSetTMR3Callback 0057  
                                                _DIO_vdInit 0E34  
                                                  int$flags 006B  
                                    ?_INT_vdSetINT0Callback 0053  
                                    ?_INT_vdSetINT1Callback 0053  
                                    ?_INT_vdSetINT2Callback 0053  
                                             _DIO_u8ReadPin 094C  
                                             _int0_callback 1030  
                                             _int1_callback 101A  
                                              _TMR0_vdReset 1046  
                                              _TMR1_vdReset 10B4  
                                             _int2_callback 1004  
                                                  intlevel2 1108  
                            __end_of_TMR0_vdSetTMR0Callback 0FAA  
                                              _TMR3_vdReset 10A2  
                                  TMR0_vdSetTMR0Callback@pf 0057  
                            __end_of_TMR3_vdSetTMR3Callback 0F76  
                                               ?_ADC_vdInit 0051  
                                    _TMR1_vdSetTMR1Callback 0F76  
                                     LED_vdSetStatus@status 005A  
                                               _UART_vdInit 0E00  
                                            ?_DIO_u8ReadPin 0053  
                                                _INT_vdinit 0EEC  
                                               _TMR0_vdInit 089E  
                                               _TMR0_vdStop 1100  
                                               _TMR1_vdInit 0B1E  
                                               _TMR1_vdStop 10F8  
                                            ?_int0_callback 0051  
                                               _TMR3_vdInit 0BB2  
                                   __end_of_LED_vdSetStatus 0EEC  
                                               _TMR3_vdStop 10F0  
                                            ?_int1_callback 0051  
                                              ___aldiv@sign 005C  
                                  UART_vdSendu8asASCI@temp2 005C  
                                            ?_int2_callback 0051  
                                   UART_vdSendu8asASCI@data 005B  
                                   UART_vdSendu8asASCI@temp 005D  
                                      TMR0_vdInit@prescaler 0054  
