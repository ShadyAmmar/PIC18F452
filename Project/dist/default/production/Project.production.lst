

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Dec 29 16:43:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F452 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  000E8A                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _p_PORTDdirection
    96  000E8A  95                 	db	149
    97  000E8B  0F                 	db	15
    98                           
    99                           ;initializer for _p_PORTDdata
   100  000E8C  83                 	db	131
   101  000E8D  0F                 	db	15
   102                           
   103                           ;initializer for _p_PORTCdirection
   104  000E8E  94                 	db	148
   105  000E8F  0F                 	db	15
   106                           
   107                           ;initializer for _p_PORTCdata
   108  000E90  82                 	db	130
   109  000E91  0F                 	db	15
   110                           
   111                           ;initializer for _p_PORTBdirection
   112  000E92  93                 	db	147
   113  000E93  0F                 	db	15
   114                           
   115                           ;initializer for _p_PORTBdata
   116  000E94  81                 	db	129
   117  000E95  0F                 	db	15
   118                           
   119                           ;initializer for _p_PORTAdirection
   120  000E96  92                 	db	146
   121  000E97  0F                 	db	15
   122                           
   123                           ;initializer for _p_PORTAdata
   124  000E98  80                 	db	128
   125  000E99  0F                 	db	15
   126                           
   127                           ;initializer for _LED2
   128  000E9A  44                 	db	68
   129  000E9B  01                 	db	1
   130  000E9C  00                 	db	0
   131  000E9D  00                 	db	0
   132  000E9E  00                 	db	0
   133  000E9F  00                 	db	0
   134  000EA0  00                 	db	0
   135                           
   136                           ;initializer for _LED1
   137  000EA1  44                 	db	68
   138  000EA2  00                 	db	0
   139  000EA3  00                 	db	0
   140  000EA4  00                 	db	0
   141  000EA5  00                 	db	0
   142  000EA6  00                 	db	0
   143  000EA7  00                 	db	0
   144                           
   145                           	psect	idataBANK0
   146  000EA8                     __pidataBANK0:
   147                           	opt callstack 0
   148                           
   149                           ;initializer for _BTN3
   150  000EA8  42                 	db	66
   151  000EA9  02                 	db	2
   152  000EAA  01                 	db	1
   153  000EAB  00                 	db	0
   154  000EAC  00                 	db	0
   155  000EAD  00                 	db	0
   156  000EAE  00                 	db	0
   157                           
   158                           ;initializer for _BTN2
   159  000EAF  42                 	db	66
   160  000EB0  01                 	db	1
   161  000EB1  01                 	db	1
   162  000EB2  00                 	db	0
   163  000EB3  00                 	db	0
   164  000EB4  00                 	db	0
   165  000EB5  00                 	db	0
   166                           
   167                           ;initializer for _BTN1
   168  000EB6  42                 	db	66
   169  000EB7  00                 	db	0
   170  000EB8  01                 	db	1
   171  000EB9  00                 	db	0
   172  000EBA  00                 	db	0
   173  000EBB  00                 	db	0
   174  000EBC  00                 	db	0
   175                           
   176                           ;initializer for _LED3
   177  000EBD  44                 	db	68
   178  000EBE  02                 	db	2
   179  000EBF  00                 	db	0
   180  000EC0  00                 	db	0
   181  000EC1  00                 	db	0
   182  000EC2  00                 	db	0
   183  000EC3  00                 	db	0
   184  0000                     _TXREG	set	4013
   185  0000                     _RCSTAbits	set	4011
   186  0000                     _TXSTAbits	set	4012
   187  0000                     _SPBRG	set	4015
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR1L	set	4046
   190  0000                     _T1CONbits	set	4045
   191  0000                     _TMR0H	set	4055
   192  0000                     _TMR0L	set	4054
   193  0000                     _T0CONbits	set	4053
   194  0000                     _IPR1bits	set	3999
   195  0000                     _PIE1bits	set	3997
   196  0000                     _INTCON2bits	set	4081
   197  0000                     _INTCON3bits	set	4080
   198  0000                     _INTCON1bits	set	4082
   199  0000                     _ADRESL	set	4035
   200  0000                     _ADRESH	set	4036
   201  0000                     _TRISA	set	3986
   202  0000                     _ADCON0bits	set	4034
   203  0000                     _ADCON1bits	set	4033
   204  0000                     _TXIF	set	31988
   205  0000                     _TRISC6	set	31910
   206  0000                     _BRGH	set	32098
   207  0000                     _CCP1IF	set	31986
   208  0000                     _TMR0IF	set	32658
   209  0000                     _RBIF	set	32656
   210  0000                     _INT2IF	set	32641
   211  0000                     _INT1IF	set	32640
   212  0000                     _INT0IF	set	32657
   213  0000                     _TMR1IF	set	31984
   214  0000                     _PEIE	set	32662
   215  0000                     _ADIF	set	31990
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  000C76                     __pcinit:
   221                           	opt callstack 0
   222  000C76                     start_initialization:
   223                           	opt callstack 0
   224  000C76                     __initialization:
   225                           	opt callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (28 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229  000C76  0EA8               	movlw	low __pidataBANK0
   230  000C78  6EF6               	movwf	tblptrl,c
   231  000C7A  0E0E               	movlw	high __pidataBANK0
   232  000C7C  6EF7               	movwf	tblptrh,c
   233  000C7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234  000C80  6EF8               	movwf	tblptru,c
   235  000C82  EE00  F080         	lfsr	0,__pdataBANK0
   236  000C86  EE10 F01C          	lfsr	1,28
   237  000C8A                     copy_data0:
   238  000C8A  0009               	tblrd		*+
   239  000C8C  CFF5 FFEE          	movff	tablat,postinc0
   240  000C90  50E5               	movf	postdec1,w,c
   241  000C92  50E1               	movf	fsr1l,w,c
   242  000C94  E1FA               	bnz	copy_data0
   243                           
   244                           ; Initialize objects allocated to COMRAM (30 bytes)
   245                           ; load TBLPTR registers with __pidataCOMRAM
   246  000C96  0E8A               	movlw	low __pidataCOMRAM
   247  000C98  6EF6               	movwf	tblptrl,c
   248  000C9A  0E0E               	movlw	high __pidataCOMRAM
   249  000C9C  6EF7               	movwf	tblptrh,c
   250  000C9E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   251  000CA0  6EF8               	movwf	tblptru,c
   252  000CA2  EE00  F04B         	lfsr	0,__pdataCOMRAM
   253  000CA6  EE10 F01E          	lfsr	1,30
   254  000CAA                     copy_data1:
   255  000CAA  0009               	tblrd		*+
   256  000CAC  CFF5 FFEE          	movff	tablat,postinc0
   257  000CB0  50E5               	movf	postdec1,w,c
   258  000CB2  50E1               	movf	fsr1l,w,c
   259  000CB4  E1FA               	bnz	copy_data1
   260                           
   261                           ; Clear objects allocated to BANK0 (8 bytes)
   262  000CB6  EE00  F0AF         	lfsr	0,__pbssBANK0
   263  000CBA  0E08               	movlw	8
   264  000CBC                     clear_0:
   265  000CBC  6AEE               	clrf	postinc0,c
   266  000CBE  06E8               	decf	wreg,f,c
   267  000CC0  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to COMRAM (33 bytes)
   270  000CC2  EE00  F02A         	lfsr	0,__pbssCOMRAM
   271  000CC6  0E21               	movlw	33
   272  000CC8                     clear_1:
   273  000CC8  6AEE               	clrf	postinc0,c
   274  000CCA  06E8               	decf	wreg,f,c
   275  000CCC  E1FD               	bnz	clear_1
   276  000CCE                     end_of_initialization:
   277                           	opt callstack 0
   278  000CCE                     __end_of__initialization:
   279                           	opt callstack 0
   280  000CCE  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281  000CD0  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282  000CD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  000CD4  6EF8               	movwf	tblptru,c
   284  000CD6  0100               	movlb	0
   285  000CD8  EF7E  F000         	goto	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMRAM
   288  00002A                     __pbssCOMRAM:
   289                           	opt callstack 0
   290  00002A                     _x3:
   291                           	opt callstack 0
   292  00002A                     	ds	4
   293  00002E                     _x2:
   294                           	opt callstack 0
   295  00002E                     	ds	4
   296  000032                     _x1:
   297                           	opt callstack 0
   298  000032                     	ds	4
   299  000036                     TMR1@initial:
   300                           	opt callstack 0
   301  000036                     	ds	2
   302  000038                     _initial:
   303                           	opt callstack 0
   304  000038                     	ds	2
   305  00003A                     _callback_CCP1:
   306                           	opt callstack 0
   307  00003A                     	ds	2
   308  00003C                     _callback_TMR1:
   309                           	opt callstack 0
   310  00003C                     	ds	2
   311  00003E                     _callback_TMR0:
   312                           	opt callstack 0
   313  00003E                     	ds	2
   314  000040                     _callback_INTonChange:
   315                           	opt callstack 0
   316  000040                     	ds	2
   317  000042                     _callback_INT2:
   318                           	opt callstack 0
   319  000042                     	ds	2
   320  000044                     _callback_INT1:
   321                           	opt callstack 0
   322  000044                     	ds	2
   323  000046                     _callback_INT0:
   324                           	opt callstack 0
   325  000046                     	ds	2
   326  000048                     _status3:
   327                           	opt callstack 0
   328  000048                     	ds	1
   329  000049                     _status2:
   330                           	opt callstack 0
   331  000049                     	ds	1
   332  00004A                     _status1:
   333                           	opt callstack 0
   334  00004A                     	ds	1
   335                           
   336                           	psect	dataCOMRAM
   337  00004B                     __pdataCOMRAM:
   338                           	opt callstack 0
   339  00004B                     _p_PORTDdirection:
   340                           	opt callstack 0
   341  00004B                     	ds	2
   342  00004D                     _p_PORTDdata:
   343                           	opt callstack 0
   344  00004D                     	ds	2
   345  00004F                     _p_PORTCdirection:
   346                           	opt callstack 0
   347  00004F                     	ds	2
   348  000051                     _p_PORTCdata:
   349                           	opt callstack 0
   350  000051                     	ds	2
   351  000053                     _p_PORTBdirection:
   352                           	opt callstack 0
   353  000053                     	ds	2
   354  000055                     _p_PORTBdata:
   355                           	opt callstack 0
   356  000055                     	ds	2
   357  000057                     _p_PORTAdirection:
   358                           	opt callstack 0
   359  000057                     	ds	2
   360  000059                     _p_PORTAdata:
   361                           	opt callstack 0
   362  000059                     	ds	2
   363  00005B                     _LED2:
   364                           	opt callstack 0
   365  00005B                     	ds	7
   366  000062                     _LED1:
   367                           	opt callstack 0
   368  000062                     	ds	7
   369                           
   370                           	psect	bssBANK0
   371  0000AF                     __pbssBANK0:
   372                           	opt callstack 0
   373  0000AF                     	ds	8
   374                           
   375                           	psect	dataBANK0
   376  000080                     __pdataBANK0:
   377                           	opt callstack 0
   378  000080                     _BTN3:
   379                           	opt callstack 0
   380  000080                     	ds	7
   381  000087                     _BTN2:
   382                           	opt callstack 0
   383  000087                     	ds	7
   384  00008E                     _BTN1:
   385                           	opt callstack 0
   386  00008E                     	ds	7
   387  000095                     _LED3:
   388                           	opt callstack 0
   389  000095                     	ds	7
   390                           
   391                           	psect	cstackBANK0
   392  00009C                     __pcstackBANK0:
   393                           	opt callstack 0
   394  00009C                     main@x_max8:
   395                           	opt callstack 0
   396                           
   397                           ; 8 bytes @ 0x0
   398  00009C                     	ds	8
   399  0000A4                     main@input_T:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x8
   403  0000A4                     	ds	2
   404  0000A6                     main@x_max16:
   405                           	opt callstack 0
   406                           
   407                           ; 8 bytes @ 0xA
   408  0000A6                     	ds	8
   409  0000AE                     main@T:
   410                           	opt callstack 0
   411                           
   412                           ; 1 bytes @ 0x12
   413  0000AE                     	ds	1
   414                           
   415                           	psect	cstackCOMRAM
   416  000001                     __pcstackCOMRAM:
   417                           	opt callstack 0
   418  000001                     DIO_vdtogglePin@pin:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x0
   422  000001                     	ds	1
   423  000002                     ??_DIO_vdtogglePin:
   424                           
   425                           ; 1 bytes @ 0x1
   426  000002                     	ds	2
   427  000004                     DIO_vdtogglePin@port:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0x3
   431  000004                     	ds	1
   432  000005                     LED_vdtoggle@led:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x4
   436  000005                     	ds	2
   437  000007                     ??_ISR:
   438  000007                     
   439                           ; 1 bytes @ 0x6
   440  000007                     	ds	4
   441  00000B                     ?_ADC_u16getValue:
   442                           	opt callstack 0
   443  00000B                     ?___wmul:
   444                           	opt callstack 0
   445  00000B                     ?___awdiv:
   446                           	opt callstack 0
   447  00000B                     ?___awmod:
   448                           	opt callstack 0
   449  00000B                     ?___lwmod:
   450                           	opt callstack 0
   451  00000B                     ?___aldiv:
   452                           	opt callstack 0
   453  00000B                     DIO_vdWritePin@port:
   454                           	opt callstack 0
   455  00000B                     DIO_vdWriteDirPin@port:
   456                           	opt callstack 0
   457  00000B                     TMR0_vdInit@bits:
   458                           	opt callstack 0
   459  00000B                     TMR1_vdInit@bits:
   460                           	opt callstack 0
   461  00000B                     UART_vdSendByte@data:
   462                           	opt callstack 0
   463  00000B                     INT_vdSetINT0Callback@pf:
   464                           	opt callstack 0
   465  00000B                     INT_vdSetINT1Callback@pf:
   466                           	opt callstack 0
   467  00000B                     INT_vdSetINT2Callback@pf:
   468                           	opt callstack 0
   469  00000B                     INT_vdSetTMR0Callback@pf:
   470                           	opt callstack 0
   471  00000B                     INT_vdSetTMR1Callback@pf:
   472                           	opt callstack 0
   473  00000B                     ___wmul@multiplier:
   474                           	opt callstack 0
   475  00000B                     ___awdiv@dividend:
   476                           	opt callstack 0
   477  00000B                     ___awmod@dividend:
   478                           	opt callstack 0
   479  00000B                     ___lwmod@dividend:
   480                           	opt callstack 0
   481  00000B                     ___aldiv@dividend:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0xA
   485  00000B                     	ds	1
   486  00000C                     DIO_vdWritePin@pin:
   487                           	opt callstack 0
   488  00000C                     DIO_vdWriteDirPin@pin:
   489                           	opt callstack 0
   490  00000C                     TMR0_vdInit@prescaler:
   491                           	opt callstack 0
   492  00000C                     TMR1_vdInit@prescaler:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0xB
   496  00000C                     	ds	1
   497  00000D                     ??_DIO_vdWriteDirPin:
   498  00000D                     ??_ADC_u16getValue:
   499  00000D                     ??_DIO_vdWritePin:
   500  00000D                     TMR0_vdInit@prescaler_value:
   501                           	opt callstack 0
   502  00000D                     TMR1_vdInit@prescaler_value:
   503                           	opt callstack 0
   504  00000D                     ___wmul@multiplicand:
   505                           	opt callstack 0
   506  00000D                     ___awdiv@divisor:
   507                           	opt callstack 0
   508  00000D                     ___awmod@divisor:
   509                           	opt callstack 0
   510  00000D                     ___lwmod@divisor:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0xC
   514  00000D                     	ds	1
   515  00000E                     TMR0_vdInit@init:
   516                           	opt callstack 0
   517  00000E                     TMR1_vdInit@init:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0xD
   521  00000E                     	ds	1
   522  00000F                     DIO_vdWriteDirPin@data:
   523                           	opt callstack 0
   524  00000F                     ___awdiv@counter:
   525                           	opt callstack 0
   526  00000F                     ___awmod@counter:
   527                           	opt callstack 0
   528  00000F                     ___lwmod@counter:
   529                           	opt callstack 0
   530  00000F                     ADC_u16getValue@data:
   531                           	opt callstack 0
   532  00000F                     ___wmul@product:
   533                           	opt callstack 0
   534  00000F                     ___aldiv@divisor:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0xE
   538  00000F                     	ds	1
   539  000010                     ??_TMR0_vdInit:
   540  000010                     ??_TMR1_vdInit:
   541  000010                     DIO_vdWritePin@data:
   542                           	opt callstack 0
   543  000010                     ___awdiv@sign:
   544                           	opt callstack 0
   545  000010                     ___awmod@sign:
   546                           	opt callstack 0
   547  000010                     DIO_vdInit@dev:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0xF
   551  000010                     	ds	1
   552  000011                     ?___lwdiv:
   553                           	opt callstack 0
   554  000011                     ADC_u16getValue@pin:
   555                           	opt callstack 0
   556  000011                     LED_vdSetStatus@led:
   557                           	opt callstack 0
   558  000011                     ___awdiv@quotient:
   559                           	opt callstack 0
   560  000011                     ___lwdiv@dividend:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x10
   564  000011                     	ds	1
   565  000012                     TMR0_vdInit@mode:
   566                           	opt callstack 0
   567  000012                     TMR1_vdInit@mode:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x11
   571  000012                     	ds	1
   572  000013                     LED_vdSetStatus@status:
   573                           	opt callstack 0
   574  000013                     UART_vdSendu8asASCI@data:
   575                           	opt callstack 0
   576  000013                     ___aldiv@counter:
   577                           	opt callstack 0
   578  000013                     ___lwdiv@divisor:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x12
   582  000013                     	ds	1
   583  000014                     UART_vdSendu8asASCI@temp2:
   584                           	opt callstack 0
   585  000014                     ___aldiv@sign:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x13
   589  000014                     	ds	1
   590  000015                     ___lwdiv@counter:
   591                           	opt callstack 0
   592  000015                     UART_vdSendu8asASCI@temp:
   593                           	opt callstack 0
   594  000015                     ___aldiv@quotient:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x14
   598  000015                     	ds	1
   599  000016                     ___lwdiv@quotient:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x15
   603  000016                     	ds	2
   604  000018                     UART_vdSendu8asASCI@i:
   605                           	opt callstack 0
   606  000018                     UART_vdSendu16asASCI@data:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x17
   610  000018                     	ds	1
   611  000019                     UART_vdInit@baud:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x18
   615  000019                     	ds	1
   616  00001A                     UART_vdSendu16asASCI@temp2:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x19
   620  00001A                     	ds	1
   621  00001B                     
   622                           ; 1 bytes @ 0x1A
   623  00001B                     	ds	1
   624  00001C                     UART_vdSendu16asASCI@i:
   625                           	opt callstack 0
   626                           
   627                           ; 1 bytes @ 0x1B
   628  00001C                     	ds	1
   629  00001D                     UART_vdSendu16asASCI@temp:
   630                           	opt callstack 0
   631                           
   632                           ; 5 bytes @ 0x1C
   633  00001D                     	ds	5
   634  000022                     ??_main:
   635                           
   636                           ; 1 bytes @ 0x21
   637  000022                     	ds	8
   638                           
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 44 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  x_max16         8   10[BANK0 ] unsigned long long 
   649 ;;  x_max8          8    0[BANK0 ] unsigned long long 
   650 ;;  input_T         2    8[BANK0 ] unsigned int 
   651 ;;  T               1   18[BANK0 ] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         0       0       0       0       0       0       0
   662 ;;      Locals:         0      19       0       0       0       0       0
   663 ;;      Temps:          8       0       0       0       0       0       0
   664 ;;      Totals:         8      19       0       0       0       0       0
   665 ;;Total ram usage:       27 bytes
   666 ;; Hardware stack levels required when called:    6
   667 ;; This function calls:
   668 ;;		_ADC_u16getValue
   669 ;;		_ADC_vdInit
   670 ;;		_DIO_vdInit
   671 ;;		_INT_vdSetINT0Callback
   672 ;;		_INT_vdSetINT1Callback
   673 ;;		_INT_vdSetINT2Callback
   674 ;;		_INT_vdSetTMR0Callback
   675 ;;		_INT_vdSetTMR1Callback
   676 ;;		_INT_vdinit
   677 ;;		_LED_vdSetStatus
   678 ;;		_TMR0_vdInit
   679 ;;		_TMR0_vdStop
   680 ;;		_TMR1_vdInit
   681 ;;		_TMR1_vdStop
   682 ;;		_UART_vdInit
   683 ;;		_UART_vdSendByte
   684 ;;		_UART_vdSendu16asASCI
   685 ;;		_UART_vdSendu8asASCI
   686 ;;		___lwdiv
   687 ;;		___wmul
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text0
   694  0000FC                     __ptext0:
   695                           	opt callstack 0
   696  0000FC                     _main:
   697                           	opt callstack 0
   698  0000FC  FFFF               	dw	65535	; assembler added errata NOP
   699                           
   700                           ;main.c: 46:     DIO_vdInit(&LED1);
   701                           
   702                           ;incstack = 0
   703  0000FE  0E62               	movlw	low _LED1
   704  000100  6E10               	movwf	DIO_vdInit@dev,c
   705  000102  0E00               	movlw	high _LED1
   706  000104  6E11               	movwf	DIO_vdInit@dev+1,c
   707  000106  ECE0  F006         	call	_DIO_vdInit	;wreg free
   708                           
   709                           ;main.c: 47:     DIO_vdInit(&LED2);
   710  00010A  0E5B               	movlw	low _LED2
   711  00010C  6E10               	movwf	DIO_vdInit@dev,c
   712  00010E  0E00               	movlw	high _LED2
   713  000110  6E11               	movwf	DIO_vdInit@dev+1,c
   714  000112  ECE0  F006         	call	_DIO_vdInit	;wreg free
   715                           
   716                           ;main.c: 48:     DIO_vdInit(&LED3);
   717  000116  0E95               	movlw	low _LED3
   718  000118  6E10               	movwf	DIO_vdInit@dev,c
   719  00011A  0E00               	movlw	high _LED3
   720  00011C  6E11               	movwf	DIO_vdInit@dev+1,c
   721  00011E  ECE0  F006         	call	_DIO_vdInit	;wreg free
   722                           
   723                           ;main.c: 49:     DIO_vdInit(&BTN1);
   724  000122  0E8E               	movlw	low _BTN1
   725  000124  6E10               	movwf	DIO_vdInit@dev,c
   726  000126  0E00               	movlw	high _BTN1
   727  000128  6E11               	movwf	DIO_vdInit@dev+1,c
   728  00012A  ECE0  F006         	call	_DIO_vdInit	;wreg free
   729                           
   730                           ;main.c: 50:     DIO_vdInit(&BTN2);
   731  00012E  0E87               	movlw	low _BTN2
   732  000130  6E10               	movwf	DIO_vdInit@dev,c
   733  000132  0E00               	movlw	high _BTN2
   734  000134  6E11               	movwf	DIO_vdInit@dev+1,c
   735  000136  ECE0  F006         	call	_DIO_vdInit	;wreg free
   736                           
   737                           ;main.c: 51:     DIO_vdInit(&BTN3);
   738  00013A  0E80               	movlw	low _BTN3
   739  00013C  6E10               	movwf	DIO_vdInit@dev,c
   740  00013E  0E00               	movlw	high _BTN3
   741  000140  6E11               	movwf	DIO_vdInit@dev+1,c
   742  000142  ECE0  F006         	call	_DIO_vdInit	;wreg free
   743                           
   744                           ;main.c: 53:     INT_vdinit();
   745  000146  EC35  F007         	call	_INT_vdinit	;wreg free
   746                           
   747                           ;main.c: 54:     INT_vdSetINT0Callback(int0_callback);
   748  00014A  0EF2               	movlw	low _int0_callback
   749  00014C  6E0B               	movwf	INT_vdSetINT0Callback@pf,c
   750  00014E  0E0E               	movlw	high _int0_callback
   751  000150  6E0C               	movwf	INT_vdSetINT0Callback@pf+1,c
   752  000152  ECD7  F007         	call	_INT_vdSetINT0Callback	;wreg free
   753                           
   754                           ;main.c: 55:     INT_vdSetINT1Callback(int1_callback);
   755  000156  0EDC               	movlw	low _int1_callback
   756  000158  6E0B               	movwf	INT_vdSetINT1Callback@pf,c
   757  00015A  0E0E               	movlw	high _int1_callback
   758  00015C  6E0C               	movwf	INT_vdSetINT1Callback@pf+1,c
   759  00015E  ECD0  F007         	call	_INT_vdSetINT1Callback	;wreg free
   760                           
   761                           ;main.c: 56:     INT_vdSetINT2Callback(int2_callback);
   762  000162  0E52               	movlw	low _int2_callback
   763  000164  6E0B               	movwf	INT_vdSetINT2Callback@pf,c
   764  000166  0E0F               	movlw	high _int2_callback
   765  000168  6E0C               	movwf	INT_vdSetINT2Callback@pf+1,c
   766  00016A  ECC9  F007         	call	_INT_vdSetINT2Callback	;wreg free
   767                           
   768                           ;main.c: 58:     TMR0_vdInit(0,0,1,0b111,0);
   769  00016E  0E00               	movlw	0
   770  000170  6E0B               	movwf	TMR0_vdInit@bits,c
   771  000172  0E01               	movlw	1
   772  000174  6E0C               	movwf	TMR0_vdInit@prescaler,c
   773  000176  0E07               	movlw	7
   774  000178  6E0D               	movwf	TMR0_vdInit@prescaler_value,c
   775  00017A  0E00               	movlw	0
   776  00017C  6E0F               	movwf	TMR0_vdInit@init+1,c
   777  00017E  0E00               	movlw	0
   778  000180  6E0E               	movwf	TMR0_vdInit@init,c
   779  000182  0E00               	movlw	0
   780  000184  EC3A  F004         	call	_TMR0_vdInit
   781                           
   782                           ;main.c: 59:     TMR0_vdStop();
   783  000188  ECE2  F007         	call	_TMR0_vdStop	;wreg free
   784                           
   785                           ;main.c: 60:     INT_vdSetTMR0Callback(tmr0_callback);
   786  00018C  0E40               	movlw	low _tmr0_callback
   787  00018E  6E0B               	movwf	INT_vdSetTMR0Callback@pf,c
   788  000190  0E0F               	movlw	high _tmr0_callback
   789  000192  6E0C               	movwf	INT_vdSetTMR0Callback@pf+1,c
   790  000194  ECC2  F007         	call	_INT_vdSetTMR0Callback	;wreg free
   791                           
   792                           ;main.c: 62:     TMR1_vdInit(0,0,0,0,3000);
   793  000198  0E00               	movlw	0
   794  00019A  6E0B               	movwf	TMR1_vdInit@bits,c
   795  00019C  0E00               	movlw	0
   796  00019E  6E0C               	movwf	TMR1_vdInit@prescaler,c
   797  0001A0  0E00               	movlw	0
   798  0001A2  6E0D               	movwf	TMR1_vdInit@prescaler_value,c
   799  0001A4  0E0B               	movlw	11
   800  0001A6  6E0F               	movwf	TMR1_vdInit@init+1,c
   801  0001A8  0EB8               	movlw	184
   802  0001AA  6E0E               	movwf	TMR1_vdInit@init,c
   803  0001AC  0E00               	movlw	0
   804  0001AE  EC7A  F005         	call	_TMR1_vdInit
   805                           
   806                           ;main.c: 63:     TMR1_vdStop();
   807  0001B2  ECDE  F007         	call	_TMR1_vdStop	;wreg free
   808                           
   809                           ;main.c: 64:     INT_vdSetTMR1Callback(tmr1_callback);
   810  0001B6  0E2E               	movlw	low _tmr1_callback
   811  0001B8  6E0B               	movwf	INT_vdSetTMR1Callback@pf,c
   812  0001BA  0E0F               	movlw	high _tmr1_callback
   813  0001BC  6E0C               	movwf	INT_vdSetTMR1Callback@pf+1,c
   814  0001BE  ECBB  F007         	call	_INT_vdSetTMR1Callback	;wreg free
   815                           
   816                           ;main.c: 66:     ADC_vdInit();
   817  0001C2  EC62  F007         	call	_ADC_vdInit	;wreg free
   818                           
   819                           ;main.c: 68:     UART_vdInit(9600);
   820  0001C6  0E25               	movlw	37
   821  0001C8  6E1A               	movwf	UART_vdInit@baud+1,c
   822  0001CA  0E80               	movlw	128
   823  0001CC  6E19               	movwf	UART_vdInit@baud,c
   824  0001CE  ECC6  F006         	call	_UART_vdInit	;wreg free
   825  0001D2                     l2991:
   826  0001D2  FFFF               	dw	65535	; assembler added errata NOP
   827                           
   828                           ;main.c: 75:         input_T = ADC_u16getValue(0);
   829  0001D4  0E00               	movlw	0
   830  0001D6  EC02  F006         	call	_ADC_u16getValue
   831  0001DA  C00B  F0A4         	movff	?_ADC_u16getValue,main@input_T
   832  0001DE  C00C  F0A5         	movff	?_ADC_u16getValue+1,main@input_T+1
   833                           
   834                           ;main.c: 76:         T = 50*input_T/1023 + 10;
   835  0001E2  C0A4  F00B         	movff	main@input_T,___wmul@multiplier
   836  0001E6  C0A5  F00C         	movff	main@input_T+1,___wmul@multiplier+1
   837  0001EA  0E00               	movlw	0
   838  0001EC  6E0E               	movwf	___wmul@multiplicand+1,c
   839  0001EE  0E32               	movlw	50
   840  0001F0  6E0D               	movwf	___wmul@multiplicand,c
   841  0001F2  ECFA  F006         	call	___wmul	;wreg free
   842  0001F6  C00B  F011         	movff	?___wmul,___lwdiv@dividend
   843  0001FA  C00C  F012         	movff	?___wmul+1,___lwdiv@dividend+1
   844  0001FE  0E03               	movlw	3
   845  000200  6E14               	movwf	___lwdiv@divisor+1,c
   846  000202  6813               	setf	___lwdiv@divisor,c
   847  000204  EC6E  F006         	call	___lwdiv	;wreg free
   848  000208  5011               	movf	?___lwdiv,w,c
   849  00020A  0F0A               	addlw	10
   850  00020C  0100               	movlb	0	; () banked
   851  00020E  6FAE               	movwf	main@T& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 81:         x_max8 = T * 14;
   855  000210  51AE               	movf	main@T& (0+255),w,b
   856  000212  0D0E               	mullw	14
   857  000214  CFF3 F022          	movff	prodl,??_main
   858  000218  CFF4 F023          	movff	prodh,??_main+1
   859  00021C  C022  F09C         	movff	??_main,main@x_max8
   860  000220  C023  F09D         	movff	??_main+1,main@x_max8+1
   861  000224  0E00               	movlw	0
   862  000226  BF9D               	btfsc	(main@x_max8+1)& (0+255),7,b
   863  000228  0EFF               	movlw	-1
   864  00022A  6F9E               	movwf	(main@x_max8+2)& (0+255),b
   865  00022C  6F9F               	movwf	(main@x_max8+3)& (0+255),b
   866  00022E  6FA0               	movwf	(main@x_max8+4)& (0+255),b
   867  000230  6FA1               	movwf	(main@x_max8+5)& (0+255),b
   868  000232  6FA2               	movwf	(main@x_max8+6)& (0+255),b
   869  000234  6FA3               	movwf	(main@x_max8+7)& (0+255),b
   870                           
   871                           ; BSR set to: 0
   872                           ;main.c: 84:         x_max16 = T * 15;
   873  000236  51AE               	movf	main@T& (0+255),w,b
   874  000238  0D0F               	mullw	15
   875  00023A  CFF3 F022          	movff	prodl,??_main
   876  00023E  CFF4 F023          	movff	prodh,??_main+1
   877  000242  C022  F0A6         	movff	??_main,main@x_max16
   878  000246  C023  F0A7         	movff	??_main+1,main@x_max16+1
   879  00024A  0E00               	movlw	0
   880  00024C  BFA7               	btfsc	(main@x_max16+1)& (0+255),7,b
   881  00024E  0EFF               	movlw	-1
   882  000250  6FA8               	movwf	(main@x_max16+2)& (0+255),b
   883  000252  6FA9               	movwf	(main@x_max16+3)& (0+255),b
   884  000254  6FAA               	movwf	(main@x_max16+4)& (0+255),b
   885  000256  6FAB               	movwf	(main@x_max16+5)& (0+255),b
   886  000258  6FAC               	movwf	(main@x_max16+6)& (0+255),b
   887  00025A  6FAD               	movwf	(main@x_max16+7)& (0+255),b
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 85:         if(x1 == x_max8){
   891  00025C  5032               	movf	_x1,w,c	;volatile
   892  00025E  6E22               	movwf	??_main& (0+255),c
   893  000260  5033               	movf	_x1+1,w,c	;volatile
   894  000262  6E23               	movwf	(??_main+1)& (0+255),c
   895  000264  5034               	movf	_x1+2,w,c	;volatile
   896  000266  6E24               	movwf	(??_main+2)& (0+255),c
   897  000268  5035               	movf	_x1+3,w,c	;volatile
   898  00026A  6E25               	movwf	(??_main+3)& (0+255),c
   899  00026C  6A26               	clrf	(??_main+4)& (0+255),c
   900  00026E  6A27               	clrf	(??_main+5)& (0+255),c
   901  000270  6A28               	clrf	(??_main+6)& (0+255),c
   902  000272  6A29               	clrf	(??_main+7)& (0+255),c
   903  000274  519C               	movf	main@x_max8& (0+255),w,b
   904  000276  1822               	xorwf	??_main,w,c
   905  000278  E129               	bnz	l3007
   906  00027A  519D               	movf	(main@x_max8+1)& (0+255),w,b
   907  00027C  1823               	xorwf	??_main+1,w,c
   908  00027E  E126               	bnz	l3007
   909  000280  519E               	movf	(main@x_max8+2)& (0+255),w,b
   910  000282  1824               	xorwf	??_main+2,w,c
   911  000284  E123               	bnz	l3007
   912  000286  519F               	movf	(main@x_max8+3)& (0+255),w,b
   913  000288  1825               	xorwf	??_main+3,w,c
   914  00028A  E120               	bnz	l3007
   915  00028C  51A0               	movf	(main@x_max8+4)& (0+255),w,b
   916  00028E  1826               	xorwf	??_main+4,w,c
   917  000290  E11D               	bnz	l3007
   918  000292  51A1               	movf	(main@x_max8+5)& (0+255),w,b
   919  000294  1827               	xorwf	??_main+5,w,c
   920  000296  E11A               	bnz	l3007
   921  000298  51A2               	movf	(main@x_max8+6)& (0+255),w,b
   922  00029A  1828               	xorwf	??_main+6,w,c
   923  00029C  E117               	bnz	l3007
   924  00029E  51A3               	movf	(main@x_max8+7)& (0+255),w,b
   925  0002A0  1829               	xorwf	??_main+7,w,c
   926  0002A2  A4D8               	btfss	status,2,c
   927  0002A4  D013               	goto	l3007
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 86:             TMR0_vdStop();
   931  0002A6  ECE2  F007         	call	_TMR0_vdStop	;wreg free
   932                           
   933                           ;main.c: 87:             x1 = 0;
   934  0002AA  0E00               	movlw	0
   935  0002AC  6E32               	movwf	_x1,c	;volatile
   936  0002AE  0E00               	movlw	0
   937  0002B0  6E33               	movwf	_x1+1,c	;volatile
   938  0002B2  0E00               	movlw	0
   939  0002B4  6E34               	movwf	_x1+2,c	;volatile
   940  0002B6  0E00               	movlw	0
   941  0002B8  6E35               	movwf	_x1+3,c	;volatile
   942                           
   943                           ;main.c: 88:             status1 = !status1;
   944  0002BA  504A               	movf	_status1,w,c	;volatile
   945  0002BC  A4D8               	btfss	status,2,c
   946  0002BE  D002               	goto	u2420
   947  0002C0  0E01               	movlw	1
   948  0002C2  D002               	goto	u2430
   949  0002C4                     u2420:
   950  0002C4  FFFF               	dw	65535	; assembler added errata NOP
   951  0002C6  0E00               	movlw	0
   952  0002C8                     u2430:
   953  0002C8  FFFF               	dw	65535	; assembler added errata NOP
   954  0002CA  6E4A               	movwf	_status1,c	;volatile
   955  0002CC                     l3007:
   956  0002CC  FFFF               	dw	65535	; assembler added errata NOP
   957                           
   958                           ;main.c: 90:         if(x2 == x_max16){
   959  0002CE  502E               	movf	_x2,w,c	;volatile
   960  0002D0  6E22               	movwf	??_main& (0+255),c
   961  0002D2  502F               	movf	_x2+1,w,c	;volatile
   962  0002D4  6E23               	movwf	(??_main+1)& (0+255),c
   963  0002D6  5030               	movf	_x2+2,w,c	;volatile
   964  0002D8  6E24               	movwf	(??_main+2)& (0+255),c
   965  0002DA  5031               	movf	_x2+3,w,c	;volatile
   966  0002DC  6E25               	movwf	(??_main+3)& (0+255),c
   967  0002DE  6A26               	clrf	(??_main+4)& (0+255),c
   968  0002E0  6A27               	clrf	(??_main+5)& (0+255),c
   969  0002E2  6A28               	clrf	(??_main+6)& (0+255),c
   970  0002E4  6A29               	clrf	(??_main+7)& (0+255),c
   971  0002E6  0100               	movlb	0	; () banked
   972  0002E8  51A6               	movf	main@x_max16& (0+255),w,b
   973  0002EA  1822               	xorwf	??_main,w,c
   974  0002EC  E129               	bnz	l3015
   975  0002EE  51A7               	movf	(main@x_max16+1)& (0+255),w,b
   976  0002F0  1823               	xorwf	??_main+1,w,c
   977  0002F2  E126               	bnz	l3015
   978  0002F4  51A8               	movf	(main@x_max16+2)& (0+255),w,b
   979  0002F6  1824               	xorwf	??_main+2,w,c
   980  0002F8  E123               	bnz	l3015
   981  0002FA  51A9               	movf	(main@x_max16+3)& (0+255),w,b
   982  0002FC  1825               	xorwf	??_main+3,w,c
   983  0002FE  E120               	bnz	l3015
   984  000300  51AA               	movf	(main@x_max16+4)& (0+255),w,b
   985  000302  1826               	xorwf	??_main+4,w,c
   986  000304  E11D               	bnz	l3015
   987  000306  51AB               	movf	(main@x_max16+5)& (0+255),w,b
   988  000308  1827               	xorwf	??_main+5,w,c
   989  00030A  E11A               	bnz	l3015
   990  00030C  51AC               	movf	(main@x_max16+6)& (0+255),w,b
   991  00030E  1828               	xorwf	??_main+6,w,c
   992  000310  E117               	bnz	l3015
   993  000312  51AD               	movf	(main@x_max16+7)& (0+255),w,b
   994  000314  1829               	xorwf	??_main+7,w,c
   995  000316  A4D8               	btfss	status,2,c
   996  000318  D013               	goto	l3015
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 91:             TMR1_vdStop();
  1000  00031A  ECDE  F007         	call	_TMR1_vdStop	;wreg free
  1001                           
  1002                           ;main.c: 92:             x2 = 0;
  1003  00031E  0E00               	movlw	0
  1004  000320  6E2E               	movwf	_x2,c	;volatile
  1005  000322  0E00               	movlw	0
  1006  000324  6E2F               	movwf	_x2+1,c	;volatile
  1007  000326  0E00               	movlw	0
  1008  000328  6E30               	movwf	_x2+2,c	;volatile
  1009  00032A  0E00               	movlw	0
  1010  00032C  6E31               	movwf	_x2+3,c	;volatile
  1011                           
  1012                           ;main.c: 93:             status2 = !status2;
  1013  00032E  5049               	movf	_status2,w,c	;volatile
  1014  000330  A4D8               	btfss	status,2,c
  1015  000332  D002               	goto	u2450
  1016  000334  0E01               	movlw	1
  1017  000336  D002               	goto	u2460
  1018  000338                     u2450:
  1019  000338  FFFF               	dw	65535	; assembler added errata NOP
  1020  00033A  0E00               	movlw	0
  1021  00033C                     u2460:
  1022  00033C  FFFF               	dw	65535	; assembler added errata NOP
  1023  00033E  6E49               	movwf	_status2,c	;volatile
  1024  000340                     l3015:
  1025  000340  FFFF               	dw	65535	; assembler added errata NOP
  1026                           
  1027                           ;main.c: 97:         LED_vdSetStatus(&LED1,status1);
  1028  000342  0E62               	movlw	low _LED1
  1029  000344  6E11               	movwf	LED_vdSetStatus@led,c
  1030  000346  0E00               	movlw	high _LED1
  1031  000348  6E12               	movwf	LED_vdSetStatus@led+1,c
  1032  00034A  C04A  F013         	movff	_status1,LED_vdSetStatus@status	;volatile
  1033  00034E  EC0F  F007         	call	_LED_vdSetStatus	;wreg free
  1034                           
  1035                           ;main.c: 98:         LED_vdSetStatus(&LED2,status2);
  1036  000352  0E5B               	movlw	low _LED2
  1037  000354  6E11               	movwf	LED_vdSetStatus@led,c
  1038  000356  0E00               	movlw	high _LED2
  1039  000358  6E12               	movwf	LED_vdSetStatus@led+1,c
  1040  00035A  C049  F013         	movff	_status2,LED_vdSetStatus@status	;volatile
  1041  00035E  EC0F  F007         	call	_LED_vdSetStatus	;wreg free
  1042                           
  1043                           ;main.c: 99:         UART_vdSendu8asASCI(T);
  1044  000362  0100               	movlb	0	; () banked
  1045  000364  51AE               	movf	main@T& (0+255),w,b
  1046  000366  ECE2  F004         	call	_UART_vdSendu8asASCI
  1047                           
  1048                           ;main.c: 100:         UART_vdSendByte('/');
  1049  00036A  0E2F               	movlw	47
  1050  00036C  EC8E  F007         	call	_UART_vdSendByte
  1051                           
  1052                           ;main.c: 101:         UART_vdSendu16asASCI((TMR1H<<8)|TMR1L);
  1053  000370  50CF               	movf	4047,w,c	;volatile
  1054  000372  6E22               	movwf	??_main& (0+255),c
  1055  000374  50CE               	movf	4046,w,c	;volatile
  1056  000376  6E18               	movwf	UART_vdSendu16asASCI@data,c
  1057  000378  C022  F019         	movff	??_main,UART_vdSendu16asASCI@data+1
  1058  00037C  EC42  F003         	call	_UART_vdSendu16asASCI	;wreg free
  1059                           
  1060                           ;main.c: 102:         UART_vdSendByte('/');
  1061  000380  0E2F               	movlw	47
  1062  000382  EC8E  F007         	call	_UART_vdSendByte
  1063                           
  1064                           ;main.c: 103:         UART_vdSendu8asASCI(x_max16);
  1065  000386  0100               	movlb	0	; () banked
  1066  000388  51A6               	movf	main@x_max16& (0+255),w,b
  1067  00038A  ECE2  F004         	call	_UART_vdSendu8asASCI
  1068                           
  1069                           ;main.c: 104:         UART_vdSendByte(' ');
  1070  00038E  0E20               	movlw	32
  1071  000390  EC8E  F007         	call	_UART_vdSendByte
  1072                           
  1073                           ;main.c: 105:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1074  000394  0E0A               	movlw	10
  1075  000396  6E22               	movwf	??_main& (0+255),c
  1076  000398  0EBE               	movlw	190
  1077  00039A                     u2477:
  1078  00039A  FFFF               	dw	65535	; errata NOP
  1079  00039C  2EE8               	decfsz	wreg,f,c
  1080  00039E  D7FD               	bra	u2477
  1081  0003A0  2E22               	decfsz	??_main& (0+255),f,c
  1082  0003A2  D7FB               	bra	u2477
  1083  0003A4  D000               	nop2	
  1084  0003A6  D715               	goto	l2991
  1085  0003A8                     __end_of_main:
  1086                           	opt callstack 0
  1087                           
  1088 ;; *************** function ___wmul *****************
  1089 ;; Defined at:
  1090 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  multiplier      2   10[COMRAM] unsigned int 
  1093 ;;  multiplicand    2   12[COMRAM] unsigned int 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  product         2   14[COMRAM] unsigned int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2   10[COMRAM] unsigned int 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, prodl, prodh
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         4       0       0       0       0       0       0
  1106 ;;      Locals:         2       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0
  1108 ;;      Totals:         6       0       0       0       0       0       0
  1109 ;;Total ram usage:        6 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    4
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text1
  1120  000DF4                     __ptext1:
  1121                           	opt callstack 0
  1122  000DF4                     ___wmul:
  1123                           	opt callstack 0
  1124  000DF4  FFFF               	dw	65535	; assembler added errata NOP
  1125                           
  1126                           ;incstack = 0
  1127  000DF6  500B               	movf	___wmul@multiplier,w,c
  1128  000DF8  020D               	mulwf	___wmul@multiplicand,c
  1129  000DFA  CFF3 F00F          	movff	prodl,___wmul@product
  1130  000DFE  CFF4 F010          	movff	prodh,___wmul@product+1
  1131  000E02  500B               	movf	___wmul@multiplier,w,c
  1132  000E04  020E               	mulwf	___wmul@multiplicand+1,c
  1133  000E06  50F3               	movf	prodl,w,c
  1134  000E08  2610               	addwf	___wmul@product+1,f,c
  1135  000E0A  500C               	movf	___wmul@multiplier+1,w,c
  1136  000E0C  020D               	mulwf	___wmul@multiplicand,c
  1137  000E0E  50F3               	movf	prodl,w,c
  1138  000E10  2610               	addwf	___wmul@product+1,f,c
  1139  000E12  C00F  F00B         	movff	___wmul@product,?___wmul
  1140  000E16  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  1141  000E1A  0012               	return		;funcret
  1142  000E1C  FFFF               	dw	65535	; errata NOP
  1143  000E1E                     __end_of___wmul:
  1144                           	opt callstack 0
  1145                           
  1146 ;; *************** function _UART_vdSendu8asASCI *****************
  1147 ;; Defined at:
  1148 ;;		line 31 in file "UART.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  data            1    wreg     unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  data            1   18[COMRAM] unsigned char 
  1153 ;;  temp            3   20[COMRAM] unsigned char [3]
  1154 ;;  i               1   23[COMRAM] unsigned char 
  1155 ;;  temp2           1   19[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1165 ;;      Params:         0       0       0       0       0       0       0
  1166 ;;      Locals:         6       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0
  1168 ;;      Totals:         6       0       0       0       0       0       0
  1169 ;;Total ram usage:        6 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    5
  1172 ;; This function calls:
  1173 ;;		_UART_vdSendByte
  1174 ;;		___awdiv
  1175 ;;		___awmod
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text2
  1182  0009C4                     __ptext2:
  1183                           	opt callstack 0
  1184  0009C4                     _UART_vdSendu8asASCI:
  1185                           	opt callstack 0
  1186  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  1187                           
  1188                           ;incstack = 0
  1189                           ;UART_vdSendu8asASCI@data stored from wreg
  1190  0009C6  6E13               	movwf	UART_vdSendu8asASCI@data,c
  1191                           
  1192                           ;UART.c: 32:  unsigned char temp[3]; unsigned char i; unsigned char temp2 = data;
  1193  0009C8  C013  F014         	movff	UART_vdSendu8asASCI@data,UART_vdSendu8asASCI@temp2
  1194                           
  1195                           ;UART.c: 33:  for(i=0;i<3;i++){
  1196  0009CC  0E00               	movlw	0
  1197  0009CE  6E18               	movwf	UART_vdSendu8asASCI@i,c
  1198  0009D0                     l2887:
  1199  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  1200                           
  1201                           ;UART.c: 34:   temp[i] = temp2%10;
  1202  0009D2  0E15               	movlw	low UART_vdSendu8asASCI@temp
  1203  0009D4  2418               	addwf	UART_vdSendu8asASCI@i,w,c
  1204  0009D6  6ED9               	movwf	fsr2l,c
  1205  0009D8  6ADA               	clrf	fsr2h,c
  1206  0009DA  0E00               	movlw	high UART_vdSendu8asASCI@temp
  1207  0009DC  22DA               	addwfc	fsr2h,f,c
  1208  0009DE  C014  F00B         	movff	UART_vdSendu8asASCI@temp2,___awmod@dividend
  1209  0009E2  6A0C               	clrf	___awmod@dividend+1,c
  1210  0009E4  0E00               	movlw	0
  1211  0009E6  6E0E               	movwf	___awmod@divisor+1,c
  1212  0009E8  0E0A               	movlw	10
  1213  0009EA  6E0D               	movwf	___awmod@divisor,c
  1214  0009EC  ECC0  F005         	call	___awmod	;wreg free
  1215  0009F0  500B               	movf	?___awmod,w,c
  1216  0009F2  6EDF               	movwf	indf2,c
  1217                           
  1218                           ;UART.c: 35:   temp2 /= 10;
  1219  0009F4  C014  F00B         	movff	UART_vdSendu8asASCI@temp2,___awdiv@dividend
  1220  0009F8  6A0C               	clrf	___awdiv@dividend+1,c
  1221  0009FA  0E00               	movlw	0
  1222  0009FC  6E0E               	movwf	___awdiv@divisor+1,c
  1223  0009FE  0E0A               	movlw	10
  1224  000A00  6E0D               	movwf	___awdiv@divisor,c
  1225  000A02  EC2E  F005         	call	___awdiv	;wreg free
  1226  000A06  500B               	movf	?___awdiv,w,c
  1227  000A08  6E14               	movwf	UART_vdSendu8asASCI@temp2,c
  1228                           
  1229                           ;UART.c: 36:  }
  1230  000A0A  2A18               	incf	UART_vdSendu8asASCI@i,f,c
  1231  000A0C  0E02               	movlw	2
  1232  000A0E  6418               	cpfsgt	UART_vdSendu8asASCI@i,c
  1233  000A10  D7DF               	goto	l2887
  1234                           
  1235                           ;UART.c: 37:  if(temp[2]==0){
  1236  000A12  5017               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1237  000A14  A4D8               	btfss	status,2,c
  1238  000A16  D012               	goto	l2903
  1239                           
  1240                           ;UART.c: 38:   if(temp[1]==0){
  1241  000A18  5016               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1242  000A1A  A4D8               	btfss	status,2,c
  1243  000A1C  D005               	goto	l2901
  1244                           
  1245                           ;UART.c: 39:    UART_vdSendByte(temp[0]+48);
  1246  000A1E  5015               	movf	UART_vdSendu8asASCI@temp,w,c
  1247  000A20  0F30               	addlw	48
  1248  000A22  EC8E  F007         	call	_UART_vdSendByte
  1249                           
  1250                           ;UART.c: 40:   }else{
  1251  000A26  D017               	goto	l391
  1252  000A28                     l2901:
  1253  000A28  FFFF               	dw	65535	; assembler added errata NOP
  1254                           
  1255                           ;UART.c: 41:    UART_vdSendByte(temp[1]+48);
  1256  000A2A  5016               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1257  000A2C  0F30               	addlw	48
  1258  000A2E  EC8E  F007         	call	_UART_vdSendByte
  1259                           
  1260                           ;UART.c: 42:    UART_vdSendByte(temp[0]+48);
  1261  000A32  5015               	movf	UART_vdSendu8asASCI@temp,w,c
  1262  000A34  0F30               	addlw	48
  1263  000A36  EC8E  F007         	call	_UART_vdSendByte
  1264  000A3A  D00D               	goto	l391
  1265  000A3C                     l2903:
  1266  000A3C  FFFF               	dw	65535	; assembler added errata NOP
  1267                           
  1268                           ;UART.c: 45:   UART_vdSendByte(temp[2]+48);
  1269  000A3E  5017               	movf	UART_vdSendu8asASCI@temp+2,w,c
  1270  000A40  0F30               	addlw	48
  1271  000A42  EC8E  F007         	call	_UART_vdSendByte
  1272                           
  1273                           ;UART.c: 46:   UART_vdSendByte(temp[1]+48);
  1274  000A46  5016               	movf	UART_vdSendu8asASCI@temp+1,w,c
  1275  000A48  0F30               	addlw	48
  1276  000A4A  EC8E  F007         	call	_UART_vdSendByte
  1277                           
  1278                           ;UART.c: 47:   UART_vdSendByte(temp[0]+48);
  1279  000A4E  5015               	movf	UART_vdSendu8asASCI@temp,w,c
  1280  000A50  0F30               	addlw	48
  1281  000A52  EC8E  F007         	call	_UART_vdSendByte
  1282  000A56                     l391:
  1283  000A56  FFFF               	dw	65535	; assembler added errata NOP
  1284  000A58  0012               	return		;funcret
  1285  000A5A  FFFF               	dw	65535	; errata NOP
  1286  000A5C                     __end_of_UART_vdSendu8asASCI:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function ___awmod *****************
  1290 ;; Defined at:
  1291 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  dividend        2   10[COMRAM] int 
  1294 ;;  divisor         2   12[COMRAM] int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  sign            1   15[COMRAM] unsigned char 
  1297 ;;  counter         1   14[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2   10[COMRAM] int 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1307 ;;      Params:         4       0       0       0       0       0       0
  1308 ;;      Locals:         2       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0
  1310 ;;      Totals:         6       0       0       0       0       0       0
  1311 ;;Total ram usage:        6 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    4
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_UART_vdSendu8asASCI
  1318 ;;		_BTN_vdRead
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text3
  1323  000B80                     __ptext3:
  1324                           	opt callstack 0
  1325  000B80                     ___awmod:
  1326                           	opt callstack 0
  1327  000B80  FFFF               	dw	65535	; assembler added errata NOP
  1328                           
  1329                           ;incstack = 0
  1330  000B82  0E00               	movlw	0
  1331  000B84  6E10               	movwf	___awmod@sign,c
  1332  000B86  AE0C               	btfss	___awmod@dividend+1,7,c
  1333  000B88  D006               	goto	l2697
  1334  000B8A  6C0B               	negf	___awmod@dividend,c
  1335  000B8C  1E0C               	comf	___awmod@dividend+1,f,c
  1336  000B8E  B0D8               	btfsc	status,0,c
  1337  000B90  2A0C               	incf	___awmod@dividend+1,f,c
  1338  000B92  0E01               	movlw	1
  1339  000B94  6E10               	movwf	___awmod@sign,c
  1340  000B96                     l2697:
  1341  000B96  FFFF               	dw	65535	; assembler added errata NOP
  1342  000B98  AE0E               	btfss	___awmod@divisor+1,7,c
  1343  000B9A  D004               	goto	l2701
  1344  000B9C  6C0D               	negf	___awmod@divisor,c
  1345  000B9E  1E0E               	comf	___awmod@divisor+1,f,c
  1346  000BA0  B0D8               	btfsc	status,0,c
  1347  000BA2  2A0E               	incf	___awmod@divisor+1,f,c
  1348  000BA4                     l2701:
  1349  000BA4  FFFF               	dw	65535	; assembler added errata NOP
  1350  000BA6  500D               	movf	___awmod@divisor,w,c
  1351  000BA8  100E               	iorwf	___awmod@divisor+1,w,c
  1352  000BAA  B4D8               	btfsc	status,2,c
  1353  000BAC  D01C               	goto	l2717
  1354  000BAE  0E01               	movlw	1
  1355  000BB0  6E0F               	movwf	___awmod@counter,c
  1356  000BB2  D005               	goto	l2707
  1357  000BB4                     l2705:
  1358  000BB4  FFFF               	dw	65535	; assembler added errata NOP
  1359  000BB6  90D8               	bcf	status,0,c
  1360  000BB8  360D               	rlcf	___awmod@divisor,f,c
  1361  000BBA  360E               	rlcf	___awmod@divisor+1,f,c
  1362  000BBC  2A0F               	incf	___awmod@counter,f,c
  1363  000BBE                     l2707:
  1364  000BBE  FFFF               	dw	65535	; assembler added errata NOP
  1365  000BC0  AE0E               	btfss	___awmod@divisor+1,7,c
  1366  000BC2  D7F8               	goto	l2705
  1367  000BC4                     u2200:
  1368  000BC4  FFFF               	dw	65535	; assembler added errata NOP
  1369  000BC6  500D               	movf	___awmod@divisor,w,c
  1370  000BC8  5C0B               	subwf	___awmod@dividend,w,c
  1371  000BCA  500E               	movf	___awmod@divisor+1,w,c
  1372  000BCC  580C               	subwfb	___awmod@dividend+1,w,c
  1373  000BCE  A0D8               	btfss	status,0,c
  1374  000BD0  D004               	goto	l2713
  1375  000BD2  500D               	movf	___awmod@divisor,w,c
  1376  000BD4  5E0B               	subwf	___awmod@dividend,f,c
  1377  000BD6  500E               	movf	___awmod@divisor+1,w,c
  1378  000BD8  5A0C               	subwfb	___awmod@dividend+1,f,c
  1379  000BDA                     l2713:
  1380  000BDA  FFFF               	dw	65535	; assembler added errata NOP
  1381  000BDC  90D8               	bcf	status,0,c
  1382  000BDE  320E               	rrcf	___awmod@divisor+1,f,c
  1383  000BE0  320D               	rrcf	___awmod@divisor,f,c
  1384  000BE2  2E0F               	decfsz	___awmod@counter,f,c
  1385  000BE4  D7EF               	goto	u2200
  1386  000BE6                     l2717:
  1387  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  1388  000BE8  5010               	movf	___awmod@sign,w,c
  1389  000BEA  B4D8               	btfsc	status,2,c
  1390  000BEC  D004               	goto	l2721
  1391  000BEE  6C0B               	negf	___awmod@dividend,c
  1392  000BF0  1E0C               	comf	___awmod@dividend+1,f,c
  1393  000BF2  B0D8               	btfsc	status,0,c
  1394  000BF4  2A0C               	incf	___awmod@dividend+1,f,c
  1395  000BF6                     l2721:
  1396  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  1397  000BF8  C00B  F00B         	movff	___awmod@dividend,?___awmod
  1398  000BFC  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  1399  000C00  0012               	return		;funcret
  1400  000C02  FFFF               	dw	65535	; errata NOP
  1401  000C04                     __end_of___awmod:
  1402                           	opt callstack 0
  1403                           
  1404 ;; *************** function ___awdiv *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  dividend        2   10[COMRAM] int 
  1409 ;;  divisor         2   12[COMRAM] int 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  quotient        2   16[COMRAM] int 
  1412 ;;  sign            1   15[COMRAM] unsigned char 
  1413 ;;  counter         1   14[COMRAM] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2   10[COMRAM] int 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         4       0       0       0       0       0       0
  1424 ;;      Locals:         4       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         8       0       0       0       0       0       0
  1427 ;;Total ram usage:        8 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    4
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_UART_vdSendu8asASCI
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text4
  1438  000A5C                     __ptext4:
  1439                           	opt callstack 0
  1440  000A5C                     ___awdiv:
  1441                           	opt callstack 0
  1442  000A5C  FFFF               	dw	65535	; assembler added errata NOP
  1443                           
  1444                           ;incstack = 0
  1445  000A5E  0E00               	movlw	0
  1446  000A60  6E10               	movwf	___awdiv@sign,c
  1447  000A62  AE0E               	btfss	___awdiv@divisor+1,7,c
  1448  000A64  D006               	goto	l2653
  1449  000A66  6C0D               	negf	___awdiv@divisor,c
  1450  000A68  1E0E               	comf	___awdiv@divisor+1,f,c
  1451  000A6A  B0D8               	btfsc	status,0,c
  1452  000A6C  2A0E               	incf	___awdiv@divisor+1,f,c
  1453  000A6E  0E01               	movlw	1
  1454  000A70  6E10               	movwf	___awdiv@sign,c
  1455  000A72                     l2653:
  1456  000A72  FFFF               	dw	65535	; assembler added errata NOP
  1457  000A74  AE0C               	btfss	___awdiv@dividend+1,7,c
  1458  000A76  D006               	goto	l2659
  1459  000A78  6C0B               	negf	___awdiv@dividend,c
  1460  000A7A  1E0C               	comf	___awdiv@dividend+1,f,c
  1461  000A7C  B0D8               	btfsc	status,0,c
  1462  000A7E  2A0C               	incf	___awdiv@dividend+1,f,c
  1463  000A80  0E01               	movlw	1
  1464  000A82  1A10               	xorwf	___awdiv@sign,f,c
  1465  000A84                     l2659:
  1466  000A84  FFFF               	dw	65535	; assembler added errata NOP
  1467  000A86  0E00               	movlw	0
  1468  000A88  6E12               	movwf	___awdiv@quotient+1,c
  1469  000A8A  0E00               	movlw	0
  1470  000A8C  6E11               	movwf	___awdiv@quotient,c
  1471  000A8E  500D               	movf	___awdiv@divisor,w,c
  1472  000A90  100E               	iorwf	___awdiv@divisor+1,w,c
  1473  000A92  B4D8               	btfsc	status,2,c
  1474  000A94  D020               	goto	l2681
  1475  000A96  0E01               	movlw	1
  1476  000A98  6E0F               	movwf	___awdiv@counter,c
  1477  000A9A  D005               	goto	l2667
  1478  000A9C                     l2665:
  1479  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  1480  000A9E  90D8               	bcf	status,0,c
  1481  000AA0  360D               	rlcf	___awdiv@divisor,f,c
  1482  000AA2  360E               	rlcf	___awdiv@divisor+1,f,c
  1483  000AA4  2A0F               	incf	___awdiv@counter,f,c
  1484  000AA6                     l2667:
  1485  000AA6  FFFF               	dw	65535	; assembler added errata NOP
  1486  000AA8  AE0E               	btfss	___awdiv@divisor+1,7,c
  1487  000AAA  D7F8               	goto	l2665
  1488  000AAC                     u2140:
  1489  000AAC  FFFF               	dw	65535	; assembler added errata NOP
  1490  000AAE  90D8               	bcf	status,0,c
  1491  000AB0  3611               	rlcf	___awdiv@quotient,f,c
  1492  000AB2  3612               	rlcf	___awdiv@quotient+1,f,c
  1493  000AB4  500D               	movf	___awdiv@divisor,w,c
  1494  000AB6  5C0B               	subwf	___awdiv@dividend,w,c
  1495  000AB8  500E               	movf	___awdiv@divisor+1,w,c
  1496  000ABA  580C               	subwfb	___awdiv@dividend+1,w,c
  1497  000ABC  A0D8               	btfss	status,0,c
  1498  000ABE  D005               	goto	l2677
  1499  000AC0  500D               	movf	___awdiv@divisor,w,c
  1500  000AC2  5E0B               	subwf	___awdiv@dividend,f,c
  1501  000AC4  500E               	movf	___awdiv@divisor+1,w,c
  1502  000AC6  5A0C               	subwfb	___awdiv@dividend+1,f,c
  1503  000AC8  8011               	bsf	___awdiv@quotient,0,c
  1504  000ACA                     l2677:
  1505  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  1506  000ACC  90D8               	bcf	status,0,c
  1507  000ACE  320E               	rrcf	___awdiv@divisor+1,f,c
  1508  000AD0  320D               	rrcf	___awdiv@divisor,f,c
  1509  000AD2  2E0F               	decfsz	___awdiv@counter,f,c
  1510  000AD4  D7EB               	goto	u2140
  1511  000AD6                     l2681:
  1512  000AD6  FFFF               	dw	65535	; assembler added errata NOP
  1513  000AD8  5010               	movf	___awdiv@sign,w,c
  1514  000ADA  B4D8               	btfsc	status,2,c
  1515  000ADC  D004               	goto	l2685
  1516  000ADE  6C11               	negf	___awdiv@quotient,c
  1517  000AE0  1E12               	comf	___awdiv@quotient+1,f,c
  1518  000AE2  B0D8               	btfsc	status,0,c
  1519  000AE4  2A12               	incf	___awdiv@quotient+1,f,c
  1520  000AE6                     l2685:
  1521  000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1522  000AE8  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  1523  000AEC  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  1524  000AF0  0012               	return		;funcret
  1525  000AF2  FFFF               	dw	65535	; errata NOP
  1526  000AF4                     __end_of___awdiv:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _UART_vdSendu16asASCI *****************
  1530 ;; Defined at:
  1531 ;;		line 52 in file "UART.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  data            2   23[COMRAM] unsigned short 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  temp            5   28[COMRAM] unsigned char [5]
  1536 ;;  temp2           2   25[COMRAM] unsigned short 
  1537 ;;  i               1   27[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         2       0       0       0       0       0       0
  1548 ;;      Locals:         8       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:        10       0       0       0       0       0       0
  1551 ;;Total ram usage:       10 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    5
  1554 ;; This function calls:
  1555 ;;		_UART_vdSendByte
  1556 ;;		___lwdiv
  1557 ;;		___lwmod
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text5
  1564  000684                     __ptext5:
  1565                           	opt callstack 0
  1566  000684                     _UART_vdSendu16asASCI:
  1567                           	opt callstack 0
  1568  000684  FFFF               	dw	65535	; assembler added errata NOP
  1569                           
  1570                           ;UART.c: 53:  unsigned char temp[5]; unsigned char i; unsigned short int temp2 = data;
  1571                           
  1572                           ;incstack = 0
  1573  000686  C018  F01A         	movff	UART_vdSendu16asASCI@data,UART_vdSendu16asASCI@temp2
  1574  00068A  C019  F01B         	movff	UART_vdSendu16asASCI@data+1,UART_vdSendu16asASCI@temp2+1
  1575                           
  1576                           ;UART.c: 54:  for(i=0;i<5;i++){
  1577  00068E  0E00               	movlw	0
  1578  000690  6E1C               	movwf	UART_vdSendu16asASCI@i,c
  1579  000692                     l2913:
  1580  000692  FFFF               	dw	65535	; assembler added errata NOP
  1581                           
  1582                           ;UART.c: 55:   temp[i] = temp2%10;
  1583  000694  0E1D               	movlw	low UART_vdSendu16asASCI@temp
  1584  000696  241C               	addwf	UART_vdSendu16asASCI@i,w,c
  1585  000698  6ED9               	movwf	fsr2l,c
  1586  00069A  6ADA               	clrf	fsr2h,c
  1587  00069C  0E00               	movlw	high UART_vdSendu16asASCI@temp
  1588  00069E  22DA               	addwfc	fsr2h,f,c
  1589  0006A0  C01A  F00B         	movff	UART_vdSendu16asASCI@temp2,___lwmod@dividend
  1590  0006A4  C01B  F00C         	movff	UART_vdSendu16asASCI@temp2+1,___lwmod@dividend+1
  1591  0006A8  0E00               	movlw	0
  1592  0006AA  6E0E               	movwf	___lwmod@divisor+1,c
  1593  0006AC  0E0A               	movlw	10
  1594  0006AE  6E0D               	movwf	___lwmod@divisor,c
  1595  0006B0  EC9E  F006         	call	___lwmod	;wreg free
  1596  0006B4  500B               	movf	?___lwmod,w,c
  1597  0006B6  6EDF               	movwf	indf2,c
  1598                           
  1599                           ;UART.c: 56:   temp2 /= 10;
  1600  0006B8  C01A  F011         	movff	UART_vdSendu16asASCI@temp2,___lwdiv@dividend
  1601  0006BC  C01B  F012         	movff	UART_vdSendu16asASCI@temp2+1,___lwdiv@dividend+1
  1602  0006C0  0E00               	movlw	0
  1603  0006C2  6E14               	movwf	___lwdiv@divisor+1,c
  1604  0006C4  0E0A               	movlw	10
  1605  0006C6  6E13               	movwf	___lwdiv@divisor,c
  1606  0006C8  EC6E  F006         	call	___lwdiv	;wreg free
  1607  0006CC  C011  F01A         	movff	?___lwdiv,UART_vdSendu16asASCI@temp2
  1608  0006D0  C012  F01B         	movff	?___lwdiv+1,UART_vdSendu16asASCI@temp2+1
  1609                           
  1610                           ;UART.c: 57:  }
  1611  0006D4  2A1C               	incf	UART_vdSendu16asASCI@i,f,c
  1612  0006D6  0E04               	movlw	4
  1613  0006D8  641C               	cpfsgt	UART_vdSendu16asASCI@i,c
  1614  0006DA  D7DB               	goto	l2913
  1615                           
  1616                           ;UART.c: 58:  if(temp[4]==0){
  1617  0006DC  5021               	movf	UART_vdSendu16asASCI@temp+4,w,c
  1618  0006DE  A4D8               	btfss	status,2,c
  1619  0006E0  D041               	goto	l2941
  1620                           
  1621                           ;UART.c: 59:   if(temp[3]==0){
  1622  0006E2  5020               	movf	UART_vdSendu16asASCI@temp+3,w,c
  1623  0006E4  A4D8               	btfss	status,2,c
  1624  0006E6  D02C               	goto	l2939
  1625                           
  1626                           ;UART.c: 60:    if(temp[2]==0){
  1627  0006E8  501F               	movf	UART_vdSendu16asASCI@temp+2,w,c
  1628  0006EA  A4D8               	btfss	status,2,c
  1629  0006EC  D01B               	goto	l2937
  1630                           
  1631                           ;UART.c: 61:                 if(temp[1]==0){
  1632  0006EE  501E               	movf	UART_vdSendu16asASCI@temp+1,w,c
  1633  0006F0  A4D8               	btfss	status,2,c
  1634  0006F2  D00E               	goto	l2935
  1635                           
  1636                           ;UART.c: 62:                     if(temp[0]==0){
  1637  0006F4  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1638  0006F6  A4D8               	btfss	status,2,c
  1639  0006F8  D005               	goto	l2933
  1640                           
  1641                           ;UART.c: 63:                         UART_vdSendByte(temp[0]+48);
  1642  0006FA  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1643  0006FC  0F30               	addlw	48
  1644  0006FE  EC8E  F007         	call	_UART_vdSendByte
  1645                           
  1646                           ;UART.c: 64:                     }else{
  1647  000702  D045               	goto	l406
  1648  000704                     l2933:
  1649  000704  FFFF               	dw	65535	; assembler added errata NOP
  1650                           
  1651                           ;UART.c: 65:                         UART_vdSendByte(temp[0]+48);
  1652  000706  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1653  000708  0F30               	addlw	48
  1654  00070A  EC8E  F007         	call	_UART_vdSendByte
  1655  00070E  D03F               	goto	l406
  1656  000710                     l2935:
  1657  000710  FFFF               	dw	65535	; assembler added errata NOP
  1658                           
  1659                           ;UART.c: 68:                     UART_vdSendByte(temp[1]+48);
  1660  000712  501E               	movf	UART_vdSendu16asASCI@temp+1,w,c
  1661  000714  0F30               	addlw	48
  1662  000716  EC8E  F007         	call	_UART_vdSendByte
  1663                           
  1664                           ;UART.c: 69:                     UART_vdSendByte(temp[0]+48);
  1665  00071A  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1666  00071C  0F30               	addlw	48
  1667  00071E  EC8E  F007         	call	_UART_vdSendByte
  1668  000722  D035               	goto	l406
  1669  000724                     l2937:
  1670  000724  FFFF               	dw	65535	; assembler added errata NOP
  1671                           
  1672                           ;UART.c: 72:                 UART_vdSendByte(temp[2]+48);
  1673  000726  501F               	movf	UART_vdSendu16asASCI@temp+2,w,c
  1674  000728  0F30               	addlw	48
  1675  00072A  EC8E  F007         	call	_UART_vdSendByte
  1676                           
  1677                           ;UART.c: 73:                 UART_vdSendByte(temp[1]+48);
  1678  00072E  501E               	movf	UART_vdSendu16asASCI@temp+1,w,c
  1679  000730  0F30               	addlw	48
  1680  000732  EC8E  F007         	call	_UART_vdSendByte
  1681                           
  1682                           ;UART.c: 74:                 UART_vdSendByte(temp[0]+48);
  1683  000736  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1684  000738  0F30               	addlw	48
  1685  00073A  EC8E  F007         	call	_UART_vdSendByte
  1686  00073E  D027               	goto	l406
  1687  000740                     l2939:
  1688  000740  FFFF               	dw	65535	; assembler added errata NOP
  1689                           
  1690                           ;UART.c: 77:             UART_vdSendByte(temp[3]+48);
  1691  000742  5020               	movf	UART_vdSendu16asASCI@temp+3,w,c
  1692  000744  0F30               	addlw	48
  1693  000746  EC8E  F007         	call	_UART_vdSendByte
  1694                           
  1695                           ;UART.c: 78:             UART_vdSendByte(temp[2]+48);
  1696  00074A  501F               	movf	UART_vdSendu16asASCI@temp+2,w,c
  1697  00074C  0F30               	addlw	48
  1698  00074E  EC8E  F007         	call	_UART_vdSendByte
  1699                           
  1700                           ;UART.c: 79:    UART_vdSendByte(temp[1]+48);
  1701  000752  501E               	movf	UART_vdSendu16asASCI@temp+1,w,c
  1702  000754  0F30               	addlw	48
  1703  000756  EC8E  F007         	call	_UART_vdSendByte
  1704                           
  1705                           ;UART.c: 80:    UART_vdSendByte(temp[0]+48);
  1706  00075A  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1707  00075C  0F30               	addlw	48
  1708  00075E  EC8E  F007         	call	_UART_vdSendByte
  1709  000762  D015               	goto	l406
  1710  000764                     l2941:
  1711  000764  FFFF               	dw	65535	; assembler added errata NOP
  1712                           
  1713                           ;UART.c: 83:         UART_vdSendByte(temp[4]+48);
  1714  000766  5021               	movf	UART_vdSendu16asASCI@temp+4,w,c
  1715  000768  0F30               	addlw	48
  1716  00076A  EC8E  F007         	call	_UART_vdSendByte
  1717                           
  1718                           ;UART.c: 84:         UART_vdSendByte(temp[3]+48);
  1719  00076E  5020               	movf	UART_vdSendu16asASCI@temp+3,w,c
  1720  000770  0F30               	addlw	48
  1721  000772  EC8E  F007         	call	_UART_vdSendByte
  1722                           
  1723                           ;UART.c: 85:   UART_vdSendByte(temp[2]+48);
  1724  000776  501F               	movf	UART_vdSendu16asASCI@temp+2,w,c
  1725  000778  0F30               	addlw	48
  1726  00077A  EC8E  F007         	call	_UART_vdSendByte
  1727                           
  1728                           ;UART.c: 86:   UART_vdSendByte(temp[1]+48);
  1729  00077E  501E               	movf	UART_vdSendu16asASCI@temp+1,w,c
  1730  000780  0F30               	addlw	48
  1731  000782  EC8E  F007         	call	_UART_vdSendByte
  1732                           
  1733                           ;UART.c: 87:   UART_vdSendByte(temp[0]+48);
  1734  000786  501D               	movf	UART_vdSendu16asASCI@temp,w,c
  1735  000788  0F30               	addlw	48
  1736  00078A  EC8E  F007         	call	_UART_vdSendByte
  1737  00078E                     l406:
  1738  00078E  FFFF               	dw	65535	; assembler added errata NOP
  1739  000790  0012               	return		;funcret
  1740  000792  FFFF               	dw	65535	; errata NOP
  1741  000794                     __end_of_UART_vdSendu16asASCI:
  1742                           	opt callstack 0
  1743                           
  1744 ;; *************** function ___lwmod *****************
  1745 ;; Defined at:
  1746 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  dividend        2   10[COMRAM] unsigned int 
  1749 ;;  divisor         2   12[COMRAM] unsigned int 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  counter         1   14[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2   10[COMRAM] unsigned int 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         4       0       0       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0
  1764 ;;      Totals:         5       0       0       0       0       0       0
  1765 ;;Total ram usage:        5 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    4
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_UART_vdSendu16asASCI
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text6
  1776  000D3C                     __ptext6:
  1777                           	opt callstack 0
  1778  000D3C                     ___lwmod:
  1779                           	opt callstack 0
  1780  000D3C  FFFF               	dw	65535	; assembler added errata NOP
  1781                           
  1782                           ;incstack = 0
  1783  000D3E  500D               	movf	___lwmod@divisor,w,c
  1784  000D40  100E               	iorwf	___lwmod@divisor+1,w,c
  1785  000D42  B4D8               	btfsc	status,2,c
  1786  000D44  D01C               	goto	l1035
  1787  000D46  0E01               	movlw	1
  1788  000D48  6E0F               	movwf	___lwmod@counter,c
  1789  000D4A  D005               	goto	l2753
  1790  000D4C                     l2751:
  1791  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  1792  000D4E  90D8               	bcf	status,0,c
  1793  000D50  360D               	rlcf	___lwmod@divisor,f,c
  1794  000D52  360E               	rlcf	___lwmod@divisor+1,f,c
  1795  000D54  2A0F               	incf	___lwmod@counter,f,c
  1796  000D56                     l2753:
  1797  000D56  FFFF               	dw	65535	; assembler added errata NOP
  1798  000D58  AE0E               	btfss	___lwmod@divisor+1,7,c
  1799  000D5A  D7F8               	goto	l2751
  1800  000D5C                     u2270:
  1801  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  1802  000D5E  500D               	movf	___lwmod@divisor,w,c
  1803  000D60  5C0B               	subwf	___lwmod@dividend,w,c
  1804  000D62  500E               	movf	___lwmod@divisor+1,w,c
  1805  000D64  580C               	subwfb	___lwmod@dividend+1,w,c
  1806  000D66  A0D8               	btfss	status,0,c
  1807  000D68  D004               	goto	l2759
  1808  000D6A  500D               	movf	___lwmod@divisor,w,c
  1809  000D6C  5E0B               	subwf	___lwmod@dividend,f,c
  1810  000D6E  500E               	movf	___lwmod@divisor+1,w,c
  1811  000D70  5A0C               	subwfb	___lwmod@dividend+1,f,c
  1812  000D72                     l2759:
  1813  000D72  FFFF               	dw	65535	; assembler added errata NOP
  1814  000D74  90D8               	bcf	status,0,c
  1815  000D76  320E               	rrcf	___lwmod@divisor+1,f,c
  1816  000D78  320D               	rrcf	___lwmod@divisor,f,c
  1817  000D7A  2E0F               	decfsz	___lwmod@counter,f,c
  1818  000D7C  D7EF               	goto	u2270
  1819  000D7E                     l1035:
  1820  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  1821  000D80  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  1822  000D84  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  1823  000D88  0012               	return		;funcret
  1824  000D8A  FFFF               	dw	65535	; errata NOP
  1825  000D8C                     __end_of___lwmod:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function ___lwdiv *****************
  1829 ;; Defined at:
  1830 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  dividend        2   16[COMRAM] unsigned int 
  1833 ;;  divisor         2   18[COMRAM] unsigned int 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  quotient        2   21[COMRAM] unsigned int 
  1836 ;;  counter         1   20[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   16[COMRAM] unsigned int 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1846 ;;      Params:         4       0       0       0       0       0       0
  1847 ;;      Locals:         3       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0
  1849 ;;      Totals:         7       0       0       0       0       0       0
  1850 ;;Total ram usage:        7 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    4
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_UART_vdSendu16asASCI
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text7
  1862  000CDC                     __ptext7:
  1863                           	opt callstack 0
  1864  000CDC                     ___lwdiv:
  1865                           	opt callstack 0
  1866  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  1867                           
  1868                           ;incstack = 0
  1869  000CDE  0E00               	movlw	0
  1870  000CE0  6E17               	movwf	___lwdiv@quotient+1,c
  1871  000CE2  0E00               	movlw	0
  1872  000CE4  6E16               	movwf	___lwdiv@quotient,c
  1873  000CE6  5013               	movf	___lwdiv@divisor,w,c
  1874  000CE8  1014               	iorwf	___lwdiv@divisor+1,w,c
  1875  000CEA  B4D8               	btfsc	status,2,c
  1876  000CEC  D020               	goto	l1025
  1877  000CEE  0E01               	movlw	1
  1878  000CF0  6E15               	movwf	___lwdiv@counter,c
  1879  000CF2  D005               	goto	l2733
  1880  000CF4                     l2731:
  1881  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  1882  000CF6  90D8               	bcf	status,0,c
  1883  000CF8  3613               	rlcf	___lwdiv@divisor,f,c
  1884  000CFA  3614               	rlcf	___lwdiv@divisor+1,f,c
  1885  000CFC  2A15               	incf	___lwdiv@counter,f,c
  1886  000CFE                     l2733:
  1887  000CFE  FFFF               	dw	65535	; assembler added errata NOP
  1888  000D00  AE14               	btfss	___lwdiv@divisor+1,7,c
  1889  000D02  D7F8               	goto	l2731
  1890  000D04                     u2240:
  1891  000D04  FFFF               	dw	65535	; assembler added errata NOP
  1892  000D06  90D8               	bcf	status,0,c
  1893  000D08  3616               	rlcf	___lwdiv@quotient,f,c
  1894  000D0A  3617               	rlcf	___lwdiv@quotient+1,f,c
  1895  000D0C  5013               	movf	___lwdiv@divisor,w,c
  1896  000D0E  5C11               	subwf	___lwdiv@dividend,w,c
  1897  000D10  5014               	movf	___lwdiv@divisor+1,w,c
  1898  000D12  5812               	subwfb	___lwdiv@dividend+1,w,c
  1899  000D14  A0D8               	btfss	status,0,c
  1900  000D16  D005               	goto	l2743
  1901  000D18  5013               	movf	___lwdiv@divisor,w,c
  1902  000D1A  5E11               	subwf	___lwdiv@dividend,f,c
  1903  000D1C  5014               	movf	___lwdiv@divisor+1,w,c
  1904  000D1E  5A12               	subwfb	___lwdiv@dividend+1,f,c
  1905  000D20  8016               	bsf	___lwdiv@quotient,0,c
  1906  000D22                     l2743:
  1907  000D22  FFFF               	dw	65535	; assembler added errata NOP
  1908  000D24  90D8               	bcf	status,0,c
  1909  000D26  3214               	rrcf	___lwdiv@divisor+1,f,c
  1910  000D28  3213               	rrcf	___lwdiv@divisor,f,c
  1911  000D2A  2E15               	decfsz	___lwdiv@counter,f,c
  1912  000D2C  D7EB               	goto	u2240
  1913  000D2E                     l1025:
  1914  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  1915  000D30  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  1916  000D34  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1917  000D38  0012               	return		;funcret
  1918  000D3A  FFFF               	dw	65535	; errata NOP
  1919  000D3C                     __end_of___lwdiv:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _UART_vdSendByte *****************
  1923 ;; Defined at:
  1924 ;;		line 22 in file "UART.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  data            1    wreg     unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  data            1   10[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         0       0       0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0
  1941 ;;      Totals:         1       0       0       0       0       0       0
  1942 ;;Total ram usage:        1 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    4
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_UART_vdSendu8asASCI
  1949 ;;		_UART_vdSendu16asASCI
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text8
  1955  000F1C                     __ptext8:
  1956                           	opt callstack 0
  1957  000F1C                     _UART_vdSendByte:
  1958                           	opt callstack 0
  1959  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  1960                           
  1961                           ;incstack = 0
  1962                           ;UART_vdSendByte@data stored from wreg
  1963  000F1E  6E0B               	movwf	UART_vdSendByte@data,c
  1964  000F20  FFFF               	dw	65535	; assembler added errata NOP
  1965                           
  1966                           ;UART.c: 23:  while (!TXIF);
  1967  000F22  A89E               	btfss	3998,4,c	;volatile
  1968  000F24  D7FD               	goto	l2597
  1969                           
  1970                           ;UART.c: 28:  TXREG = data;
  1971  000F26  C00B  FFAD         	movff	UART_vdSendByte@data,4013	;volatile
  1972  000F2A  0012               	return		;funcret
  1973  000F2C  FFFF               	dw	65535	; errata NOP
  1974  000F2E                     __end_of_UART_vdSendByte:
  1975                           	opt callstack 0
  1976                           
  1977 ;; *************** function _UART_vdInit *****************
  1978 ;; Defined at:
  1979 ;;		line 13 in file "UART.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  baud            2   24[COMRAM] unsigned short 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1993 ;;      Params:         2       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    5
  2000 ;; This function calls:
  2001 ;;		___aldiv
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text9
  2008  000D8C                     __ptext9:
  2009                           	opt callstack 0
  2010  000D8C                     _UART_vdInit:
  2011                           	opt callstack 0
  2012  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  2013                           
  2014                           ;UART.c: 14:  BRGH = 1;
  2015                           
  2016                           ;incstack = 0
  2017  000D8E  84AC               	bsf	4012,2,c	;volatile
  2018                           
  2019                           ;UART.c: 15:     SPBRG = ((4000000/16)/baud) - 1;
  2020  000D90  0E90               	movlw	144
  2021  000D92  6E0B               	movwf	___aldiv@dividend,c
  2022  000D94  0ED0               	movlw	208
  2023  000D96  6E0C               	movwf	___aldiv@dividend+1,c
  2024  000D98  0E03               	movlw	3
  2025  000D9A  6E0D               	movwf	___aldiv@dividend+2,c
  2026  000D9C  0E00               	movlw	0
  2027  000D9E  6E0E               	movwf	___aldiv@dividend+3,c
  2028  000DA0  C019  F00F         	movff	UART_vdInit@baud,___aldiv@divisor
  2029  000DA4  C01A  F010         	movff	UART_vdInit@baud+1,___aldiv@divisor+1
  2030  000DA8  6A11               	clrf	___aldiv@divisor+2,c
  2031  000DAA  6A12               	clrf	___aldiv@divisor+3,c
  2032  000DAC  ECCA  F003         	call	___aldiv	;wreg free
  2033  000DB0  040B               	decf	?___aldiv,w,c
  2034  000DB2  6EAF               	movwf	4015,c	;volatile
  2035                           
  2036                           ;UART.c: 16:     TXSTAbits.SYNC = 0;
  2037  000DB4  98AC               	bcf	4012,4,c	;volatile
  2038                           
  2039                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  2040  000DB6  8EAB               	bsf	4011,7,c	;volatile
  2041                           
  2042                           ;UART.c: 18:     TRISC6 = 0;
  2043  000DB8  9C94               	bcf	3988,6,c	;volatile
  2044                           
  2045                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  2046  000DBA  8AAC               	bsf	4012,5,c	;volatile
  2047  000DBC  0012               	return		;funcret
  2048  000DBE  FFFF               	dw	65535	; errata NOP
  2049  000DC0                     __end_of_UART_vdInit:
  2050                           	opt callstack 0
  2051                           
  2052 ;; *************** function ___aldiv *****************
  2053 ;; Defined at:
  2054 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  dividend        4   10[COMRAM] long 
  2057 ;;  divisor         4   14[COMRAM] long 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  quotient        4   20[COMRAM] long 
  2060 ;;  sign            1   19[COMRAM] unsigned char 
  2061 ;;  counter         1   18[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  4   10[COMRAM] long 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         8       0       0       0       0       0       0
  2072 ;;      Locals:         6       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0
  2074 ;;      Totals:        14       0       0       0       0       0       0
  2075 ;;Total ram usage:       14 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    4
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_UART_vdInit
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text10
  2086  000794                     __ptext10:
  2087                           	opt callstack 0
  2088  000794                     ___aldiv:
  2089                           	opt callstack 0
  2090  000794  FFFF               	dw	65535	; assembler added errata NOP
  2091                           
  2092                           ;incstack = 0
  2093  000796  0E00               	movlw	0
  2094  000798  6E14               	movwf	___aldiv@sign,c
  2095  00079A  AE12               	btfss	___aldiv@divisor+3,7,c
  2096  00079C  D00A               	goto	l2609
  2097  00079E  1E12               	comf	___aldiv@divisor+3,f,c
  2098  0007A0  1E11               	comf	___aldiv@divisor+2,f,c
  2099  0007A2  1E10               	comf	___aldiv@divisor+1,f,c
  2100  0007A4  6C0F               	negf	___aldiv@divisor,c
  2101  0007A6  0E00               	movlw	0
  2102  0007A8  2210               	addwfc	___aldiv@divisor+1,f,c
  2103  0007AA  2211               	addwfc	___aldiv@divisor+2,f,c
  2104  0007AC  2212               	addwfc	___aldiv@divisor+3,f,c
  2105  0007AE  0E01               	movlw	1
  2106  0007B0  6E14               	movwf	___aldiv@sign,c
  2107  0007B2                     l2609:
  2108  0007B2  FFFF               	dw	65535	; assembler added errata NOP
  2109  0007B4  AE0E               	btfss	___aldiv@dividend+3,7,c
  2110  0007B6  D00A               	goto	l2615
  2111  0007B8  1E0E               	comf	___aldiv@dividend+3,f,c
  2112  0007BA  1E0D               	comf	___aldiv@dividend+2,f,c
  2113  0007BC  1E0C               	comf	___aldiv@dividend+1,f,c
  2114  0007BE  6C0B               	negf	___aldiv@dividend,c
  2115  0007C0  0E00               	movlw	0
  2116  0007C2  220C               	addwfc	___aldiv@dividend+1,f,c
  2117  0007C4  220D               	addwfc	___aldiv@dividend+2,f,c
  2118  0007C6  220E               	addwfc	___aldiv@dividend+3,f,c
  2119  0007C8  0E01               	movlw	1
  2120  0007CA  1A14               	xorwf	___aldiv@sign,f,c
  2121  0007CC                     l2615:
  2122  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  2123  0007CE  0E00               	movlw	0
  2124  0007D0  6E15               	movwf	___aldiv@quotient,c
  2125  0007D2  0E00               	movlw	0
  2126  0007D4  6E16               	movwf	___aldiv@quotient+1,c
  2127  0007D6  0E00               	movlw	0
  2128  0007D8  6E17               	movwf	___aldiv@quotient+2,c
  2129  0007DA  0E00               	movlw	0
  2130  0007DC  6E18               	movwf	___aldiv@quotient+3,c
  2131  0007DE  500F               	movf	___aldiv@divisor,w,c
  2132  0007E0  1010               	iorwf	___aldiv@divisor+1,w,c
  2133  0007E2  1011               	iorwf	___aldiv@divisor+2,w,c
  2134  0007E4  1012               	iorwf	___aldiv@divisor+3,w,c
  2135  0007E6  B4D8               	btfsc	status,2,c
  2136  0007E8  D02E               	goto	l2637
  2137  0007EA  0E01               	movlw	1
  2138  0007EC  6E13               	movwf	___aldiv@counter,c
  2139  0007EE  D007               	goto	l2623
  2140  0007F0                     l2621:
  2141  0007F0  FFFF               	dw	65535	; assembler added errata NOP
  2142  0007F2  90D8               	bcf	status,0,c
  2143  0007F4  360F               	rlcf	___aldiv@divisor,f,c
  2144  0007F6  3610               	rlcf	___aldiv@divisor+1,f,c
  2145  0007F8  3611               	rlcf	___aldiv@divisor+2,f,c
  2146  0007FA  3612               	rlcf	___aldiv@divisor+3,f,c
  2147  0007FC  2A13               	incf	___aldiv@counter,f,c
  2148  0007FE                     l2623:
  2149  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  2150  000800  AE12               	btfss	___aldiv@divisor+3,7,c
  2151  000802  D7F6               	goto	l2621
  2152  000804                     u2080:
  2153  000804  FFFF               	dw	65535	; assembler added errata NOP
  2154  000806  90D8               	bcf	status,0,c
  2155  000808  3615               	rlcf	___aldiv@quotient,f,c
  2156  00080A  3616               	rlcf	___aldiv@quotient+1,f,c
  2157  00080C  3617               	rlcf	___aldiv@quotient+2,f,c
  2158  00080E  3618               	rlcf	___aldiv@quotient+3,f,c
  2159  000810  500F               	movf	___aldiv@divisor,w,c
  2160  000812  5C0B               	subwf	___aldiv@dividend,w,c
  2161  000814  5010               	movf	___aldiv@divisor+1,w,c
  2162  000816  580C               	subwfb	___aldiv@dividend+1,w,c
  2163  000818  5011               	movf	___aldiv@divisor+2,w,c
  2164  00081A  580D               	subwfb	___aldiv@dividend+2,w,c
  2165  00081C  5012               	movf	___aldiv@divisor+3,w,c
  2166  00081E  580E               	subwfb	___aldiv@dividend+3,w,c
  2167  000820  A0D8               	btfss	status,0,c
  2168  000822  D009               	goto	l2633
  2169  000824  500F               	movf	___aldiv@divisor,w,c
  2170  000826  5E0B               	subwf	___aldiv@dividend,f,c
  2171  000828  5010               	movf	___aldiv@divisor+1,w,c
  2172  00082A  5A0C               	subwfb	___aldiv@dividend+1,f,c
  2173  00082C  5011               	movf	___aldiv@divisor+2,w,c
  2174  00082E  5A0D               	subwfb	___aldiv@dividend+2,f,c
  2175  000830  5012               	movf	___aldiv@divisor+3,w,c
  2176  000832  5A0E               	subwfb	___aldiv@dividend+3,f,c
  2177  000834  8015               	bsf	___aldiv@quotient,0,c
  2178  000836                     l2633:
  2179  000836  FFFF               	dw	65535	; assembler added errata NOP
  2180  000838  90D8               	bcf	status,0,c
  2181  00083A  3212               	rrcf	___aldiv@divisor+3,f,c
  2182  00083C  3211               	rrcf	___aldiv@divisor+2,f,c
  2183  00083E  3210               	rrcf	___aldiv@divisor+1,f,c
  2184  000840  320F               	rrcf	___aldiv@divisor,f,c
  2185  000842  2E13               	decfsz	___aldiv@counter,f,c
  2186  000844  D7DF               	goto	u2080
  2187  000846                     l2637:
  2188  000846  FFFF               	dw	65535	; assembler added errata NOP
  2189  000848  5014               	movf	___aldiv@sign,w,c
  2190  00084A  B4D8               	btfsc	status,2,c
  2191  00084C  D008               	goto	l2641
  2192  00084E  1E18               	comf	___aldiv@quotient+3,f,c
  2193  000850  1E17               	comf	___aldiv@quotient+2,f,c
  2194  000852  1E16               	comf	___aldiv@quotient+1,f,c
  2195  000854  6C15               	negf	___aldiv@quotient,c
  2196  000856  0E00               	movlw	0
  2197  000858  2216               	addwfc	___aldiv@quotient+1,f,c
  2198  00085A  2217               	addwfc	___aldiv@quotient+2,f,c
  2199  00085C  2218               	addwfc	___aldiv@quotient+3,f,c
  2200  00085E                     l2641:
  2201  00085E  FFFF               	dw	65535	; assembler added errata NOP
  2202  000860  C015  F00B         	movff	___aldiv@quotient,?___aldiv
  2203  000864  C016  F00C         	movff	___aldiv@quotient+1,?___aldiv+1
  2204  000868  C017  F00D         	movff	___aldiv@quotient+2,?___aldiv+2
  2205  00086C  C018  F00E         	movff	___aldiv@quotient+3,?___aldiv+3
  2206  000870  0012               	return		;funcret
  2207  000872  FFFF               	dw	65535	; errata NOP
  2208  000874                     __end_of___aldiv:
  2209                           	opt callstack 0
  2210                           
  2211 ;; *************** function _TMR1_vdStop *****************
  2212 ;; Defined at:
  2213 ;;		line 42 in file "TMR1.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		None
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2227 ;;      Params:         0       0       0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0
  2230 ;;      Totals:         0       0       0       0       0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    4
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text11
  2242  000FBC                     __ptext11:
  2243                           	opt callstack 0
  2244  000FBC                     _TMR1_vdStop:
  2245                           	opt callstack 0
  2246  000FBC  FFFF               	dw	65535	; assembler added errata NOP
  2247                           
  2248                           ;TMR1.c: 43:     T1CONbits.TMR1ON = 0;
  2249                           
  2250                           ;incstack = 0
  2251  000FBE  90CD               	bcf	4045,0,c	;volatile
  2252  000FC0  0012               	return		;funcret
  2253  000FC2  FFFF               	dw	65535	; errata NOP
  2254  000FC4                     __end_of_TMR1_vdStop:
  2255                           	opt callstack 0
  2256                           
  2257 ;; *************** function _TMR1_vdInit *****************
  2258 ;; Defined at:
  2259 ;;		line 14 in file "TMR1.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  mode            1    wreg     unsigned char 
  2262 ;;  bits            1   10[COMRAM] unsigned char 
  2263 ;;  prescaler       1   11[COMRAM] unsigned char 
  2264 ;;  prescaler_va    1   12[COMRAM] unsigned char 
  2265 ;;  init            2   13[COMRAM] unsigned int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  mode            1   17[COMRAM] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2277 ;;      Params:         5       0       0       0       0       0       0
  2278 ;;      Locals:         1       0       0       0       0       0       0
  2279 ;;      Temps:          2       0       0       0       0       0       0
  2280 ;;      Totals:         8       0       0       0       0       0       0
  2281 ;;Total ram usage:        8 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    4
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text12
  2292  000AF4                     __ptext12:
  2293                           	opt callstack 0
  2294  000AF4                     _TMR1_vdInit:
  2295                           	opt callstack 0
  2296  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  2297                           
  2298                           ;incstack = 0
  2299                           ;TMR1_vdInit@mode stored from wreg
  2300  000AF6  6E12               	movwf	TMR1_vdInit@mode,c
  2301                           
  2302                           ;TMR1.c: 15:     switch(mode){
  2303  000AF8  D006               	goto	l2843
  2304  000AFA                     l327:
  2305  000AFA  FFFF               	dw	65535	; assembler added errata NOP
  2306                           
  2307                           ;TMR1.c: 17:             T1CONbits.TMR1CS = 1;
  2308  000AFC  82CD               	bsf	4045,1,c	;volatile
  2309                           
  2310                           ;TMR1.c: 18:             break;
  2311  000AFE  D012               	goto	l328
  2312  000B00                     l329:
  2313  000B00  FFFF               	dw	65535	; assembler added errata NOP
  2314                           
  2315                           ;TMR1.c: 20:             T1CONbits.TMR1CS = 0;
  2316  000B02  92CD               	bcf	4045,1,c	;volatile
  2317                           
  2318                           ;TMR1.c: 21:             break;
  2319  000B04  D00F               	goto	l328
  2320  000B06                     l2843:
  2321  000B06  FFFF               	dw	65535	; assembler added errata NOP
  2322  000B08  5012               	movf	TMR1_vdInit@mode,w,c
  2323  000B0A  6E10               	movwf	??_TMR1_vdInit& (0+255),c
  2324  000B0C  6A11               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  000B0E  5011               	movf	??_TMR1_vdInit+1,w,c
  2334  000B10  0A00               	xorlw	0	; case 0
  2335  000B12  A4D8               	btfss	status,2,c
  2336  000B14  D007               	goto	l328
  2337                           
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 2, Range of values is 0 to 1
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            7     4 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344  000B16  5010               	movf	??_TMR1_vdInit,w,c
  2345  000B18  0A00               	xorlw	0	; case 0
  2346  000B1A  B4D8               	btfsc	status,2,c
  2347  000B1C  D7F1               	goto	l329
  2348  000B1E  0A01               	xorlw	1	; case 1
  2349  000B20  B4D8               	btfsc	status,2,c
  2350  000B22  D7EB               	goto	l327
  2351  000B24                     l328:
  2352  000B24  FFFF               	dw	65535	; assembler added errata NOP
  2353                           
  2354                           ;TMR1.c: 24:     T1CONbits.RD16 = bits;
  2355  000B26  B00B               	btfsc	TMR1_vdInit@bits,0,c
  2356  000B28  D002               	bra	u2315
  2357  000B2A  9ECD               	bcf	4045,7,c	;volatile
  2358  000B2C  D001               	bra	u2316
  2359  000B2E                     u2315:
  2360  000B2E  8ECD               	bsf	4045,7,c	;volatile
  2361  000B30                     u2316:
  2362                           
  2363                           ;TMR1.c: 26:     switch(prescaler){
  2364  000B30  D00E               	goto	l2851
  2365  000B32                     l2845:
  2366  000B32  FFFF               	dw	65535	; assembler added errata NOP
  2367                           
  2368                           ;TMR1.c: 28:             T1CONbits.T1CKPS = 0;
  2369  000B34  0ECF               	movlw	-49
  2370  000B36  16CD               	andwf	4045,f,c	;volatile
  2371                           
  2372                           ;TMR1.c: 29:             break;
  2373  000B38  D019               	goto	l332
  2374  000B3A                     l2847:
  2375  000B3A  FFFF               	dw	65535	; assembler added errata NOP
  2376                           
  2377                           ;TMR1.c: 31:             T1CONbits.T1CKPS = prescaler_value;
  2378  000B3C  C00D  F010         	movff	TMR1_vdInit@prescaler_value,??_TMR1_vdInit
  2379  000B40  3A10               	swapf	??_TMR1_vdInit,f,c
  2380  000B42  50CD               	movf	4045,w,c	;volatile
  2381  000B44  1810               	xorwf	??_TMR1_vdInit,w,c
  2382  000B46  0BCF               	andlw	-49
  2383  000B48  1810               	xorwf	??_TMR1_vdInit,w,c
  2384  000B4A  6ECD               	movwf	4045,c	;volatile
  2385                           
  2386                           ;TMR1.c: 32:             break;
  2387  000B4C  D00F               	goto	l332
  2388  000B4E                     l2851:
  2389  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2390  000B50  500C               	movf	TMR1_vdInit@prescaler,w,c
  2391  000B52  6E10               	movwf	??_TMR1_vdInit& (0+255),c
  2392  000B54  6A11               	clrf	(??_TMR1_vdInit+1)& (0+255),c
  2393                           
  2394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 1, Range of values is 0 to 0
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte            4     3 (average)
  2400                           ;	Chosen strategy is simple_byte
  2401  000B56  5011               	movf	??_TMR1_vdInit+1,w,c
  2402  000B58  0A00               	xorlw	0	; case 0
  2403  000B5A  A4D8               	btfss	status,2,c
  2404  000B5C  D007               	goto	l332
  2405                           
  2406                           ; Switch size 1, requested type "simple"
  2407                           ; Number of cases is 2, Range of values is 0 to 1
  2408                           ; switch strategies available:
  2409                           ; Name         Instructions Cycles
  2410                           ; simple_byte            7     4 (average)
  2411                           ;	Chosen strategy is simple_byte
  2412  000B5E  5010               	movf	??_TMR1_vdInit,w,c
  2413  000B60  0A00               	xorlw	0	; case 0
  2414  000B62  B4D8               	btfsc	status,2,c
  2415  000B64  D7E6               	goto	l2845
  2416  000B66  0A01               	xorlw	1	; case 1
  2417  000B68  B4D8               	btfsc	status,2,c
  2418  000B6A  D7E7               	goto	l2847
  2419  000B6C                     l332:
  2420  000B6C  FFFF               	dw	65535	; assembler added errata NOP
  2421                           
  2422                           ;TMR1.c: 35:     T1CONbits.T1OSCEN = 0;
  2423  000B6E  96CD               	bcf	4045,3,c	;volatile
  2424                           
  2425                           ;TMR1.c: 36:     TMR1IF = 0;
  2426  000B70  909E               	bcf	3998,0,c	;volatile
  2427                           
  2428                           ;TMR1.c: 37:     TMR1L = initial;
  2429  000B72  C036  FFCE         	movff	TMR1@initial,4046	;volatile
  2430                           
  2431                           ;TMR1.c: 38:     TMR1H = (initial>>8);
  2432  000B76  5037               	movf	TMR1@initial+1,w,c
  2433  000B78  6ECF               	movwf	4047,c	;volatile
  2434                           
  2435                           ;TMR1.c: 39:     T1CONbits.TMR1ON = 1;
  2436  000B7A  80CD               	bsf	4045,0,c	;volatile
  2437  000B7C  0012               	return		;funcret
  2438  000B7E  FFFF               	dw	65535	; errata NOP
  2439  000B80                     __end_of_TMR1_vdInit:
  2440                           	opt callstack 0
  2441                           
  2442 ;; *************** function _TMR0_vdStop *****************
  2443 ;; Defined at:
  2444 ;;		line 50 in file "TMR0.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		None
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2458 ;;      Params:         0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    4
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text13
  2473  000FC4                     __ptext13:
  2474                           	opt callstack 0
  2475  000FC4                     _TMR0_vdStop:
  2476                           	opt callstack 0
  2477  000FC4  FFFF               	dw	65535	; assembler added errata NOP
  2478                           
  2479                           ;TMR0.c: 51:     T0CONbits.TMR0ON = 0;
  2480                           
  2481                           ;incstack = 0
  2482  000FC6  9ED5               	bcf	4053,7,c	;volatile
  2483  000FC8  0012               	return		;funcret
  2484  000FCA  FFFF               	dw	65535	; errata NOP
  2485  000FCC                     __end_of_TMR0_vdStop:
  2486                           	opt callstack 0
  2487                           
  2488 ;; *************** function _TMR0_vdInit *****************
  2489 ;; Defined at:
  2490 ;;		line 14 in file "TMR0.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  mode            1    wreg     unsigned char 
  2493 ;;  bits            1   10[COMRAM] unsigned char 
  2494 ;;  prescaler       1   11[COMRAM] unsigned char 
  2495 ;;  prescaler_va    1   12[COMRAM] unsigned char 
  2496 ;;  init            2   13[COMRAM] unsigned int 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  mode            1   17[COMRAM] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2508 ;;      Params:         5       0       0       0       0       0       0
  2509 ;;      Locals:         1       0       0       0       0       0       0
  2510 ;;      Temps:          2       0       0       0       0       0       0
  2511 ;;      Totals:         8       0       0       0       0       0       0
  2512 ;;Total ram usage:        8 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    4
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text14
  2523  000874                     __ptext14:
  2524                           	opt callstack 0
  2525  000874                     _TMR0_vdInit:
  2526                           	opt callstack 0
  2527  000874  FFFF               	dw	65535	; assembler added errata NOP
  2528                           
  2529                           ;incstack = 0
  2530                           ;TMR0_vdInit@mode stored from wreg
  2531  000876  6E12               	movwf	TMR0_vdInit@mode,c
  2532                           
  2533                           ;TMR0.c: 15:     switch(mode){
  2534  000878  D006               	goto	l2805
  2535  00087A                     l293:
  2536  00087A  FFFF               	dw	65535	; assembler added errata NOP
  2537                           
  2538                           ;TMR0.c: 17:             T0CONbits.T0CS = 1;
  2539  00087C  8AD5               	bsf	4053,5,c	;volatile
  2540                           
  2541                           ;TMR0.c: 18:             break;
  2542  00087E  D019               	goto	l2809
  2543  000880                     l295:
  2544  000880  FFFF               	dw	65535	; assembler added errata NOP
  2545                           
  2546                           ;TMR0.c: 20:             T0CONbits.T0CS = 0;
  2547  000882  9AD5               	bcf	4053,5,c	;volatile
  2548                           
  2549                           ;TMR0.c: 21:             break;
  2550  000884  D016               	goto	l2809
  2551  000886                     l2805:
  2552  000886  FFFF               	dw	65535	; assembler added errata NOP
  2553  000888  5012               	movf	TMR0_vdInit@mode,w,c
  2554  00088A  6E10               	movwf	??_TMR0_vdInit& (0+255),c
  2555  00088C  6A11               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2556                           
  2557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2558                           ; Switch size 1, requested type "simple"
  2559                           ; Number of cases is 1, Range of values is 0 to 0
  2560                           ; switch strategies available:
  2561                           ; Name         Instructions Cycles
  2562                           ; simple_byte            4     3 (average)
  2563                           ;	Chosen strategy is simple_byte
  2564  00088E  5011               	movf	??_TMR0_vdInit+1,w,c
  2565  000890  0A00               	xorlw	0	; case 0
  2566  000892  A4D8               	btfss	status,2,c
  2567  000894  D00E               	goto	l2809
  2568                           
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 2, Range of values is 0 to 1
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            7     4 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575  000896  5010               	movf	??_TMR0_vdInit,w,c
  2576  000898  0A00               	xorlw	0	; case 0
  2577  00089A  B4D8               	btfsc	status,2,c
  2578  00089C  D7F1               	goto	l295
  2579  00089E  0A01               	xorlw	1	; case 1
  2580  0008A0  B4D8               	btfsc	status,2,c
  2581  0008A2  D7EB               	goto	l293
  2582  0008A4  D006               	goto	l2809
  2583  0008A6                     l297:
  2584  0008A6  FFFF               	dw	65535	; assembler added errata NOP
  2585                           
  2586                           ;TMR0.c: 25:             T0CONbits.T08BIT = 1;
  2587  0008A8  8CD5               	bsf	4053,6,c	;volatile
  2588                           
  2589                           ;TMR0.c: 26:             break;
  2590  0008AA  D012               	goto	l298
  2591  0008AC                     l299:
  2592  0008AC  FFFF               	dw	65535	; assembler added errata NOP
  2593                           
  2594                           ;TMR0.c: 28:             T0CONbits.T08BIT = 0;
  2595  0008AE  9CD5               	bcf	4053,6,c	;volatile
  2596                           
  2597                           ;TMR0.c: 29:             break;
  2598  0008B0  D00F               	goto	l298
  2599  0008B2                     l2809:
  2600  0008B2  FFFF               	dw	65535	; assembler added errata NOP
  2601  0008B4  500B               	movf	TMR0_vdInit@bits,w,c
  2602  0008B6  6E10               	movwf	??_TMR0_vdInit& (0+255),c
  2603  0008B8  6A11               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2604                           
  2605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  0008BA  5011               	movf	??_TMR0_vdInit+1,w,c
  2613  0008BC  0A00               	xorlw	0	; case 0
  2614  0008BE  A4D8               	btfss	status,2,c
  2615  0008C0  D007               	goto	l298
  2616                           
  2617                           ; Switch size 1, requested type "simple"
  2618                           ; Number of cases is 2, Range of values is 0 to 1
  2619                           ; switch strategies available:
  2620                           ; Name         Instructions Cycles
  2621                           ; simple_byte            7     4 (average)
  2622                           ;	Chosen strategy is simple_byte
  2623  0008C2  5010               	movf	??_TMR0_vdInit,w,c
  2624  0008C4  0A00               	xorlw	0	; case 0
  2625  0008C6  B4D8               	btfsc	status,2,c
  2626  0008C8  D7EE               	goto	l297
  2627  0008CA  0A01               	xorlw	1	; case 1
  2628  0008CC  B4D8               	btfsc	status,2,c
  2629  0008CE  D7EE               	goto	l299
  2630  0008D0                     l298:
  2631  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  2632                           
  2633                           ;TMR0.c: 32:     T0CONbits.T0SE = 0;
  2634  0008D2  98D5               	bcf	4053,4,c	;volatile
  2635                           
  2636                           ;TMR0.c: 34:     switch(prescaler){
  2637  0008D4  D006               	goto	l2813
  2638  0008D6                     l301:
  2639  0008D6  FFFF               	dw	65535	; assembler added errata NOP
  2640                           
  2641                           ;TMR0.c: 36:             T0CONbits.PSA = 1;
  2642  0008D8  86D5               	bsf	4053,3,c	;volatile
  2643                           
  2644                           ;TMR0.c: 37:             break;
  2645  0008DA  D012               	goto	l2815
  2646  0008DC                     l303:
  2647  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  2648                           
  2649                           ;TMR0.c: 39:             T0CONbits.PSA = 0;
  2650  0008DE  96D5               	bcf	4053,3,c	;volatile
  2651                           
  2652                           ;TMR0.c: 40:             break;
  2653  0008E0  D00F               	goto	l2815
  2654  0008E2                     l2813:
  2655  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  2656  0008E4  500C               	movf	TMR0_vdInit@prescaler,w,c
  2657  0008E6  6E10               	movwf	??_TMR0_vdInit& (0+255),c
  2658  0008E8  6A11               	clrf	(??_TMR0_vdInit+1)& (0+255),c
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ;	Chosen strategy is simple_byte
  2667  0008EA  5011               	movf	??_TMR0_vdInit+1,w,c
  2668  0008EC  0A00               	xorlw	0	; case 0
  2669  0008EE  A4D8               	btfss	status,2,c
  2670  0008F0  D007               	goto	l2815
  2671                           
  2672                           ; Switch size 1, requested type "simple"
  2673                           ; Number of cases is 2, Range of values is 0 to 1
  2674                           ; switch strategies available:
  2675                           ; Name         Instructions Cycles
  2676                           ; simple_byte            7     4 (average)
  2677                           ;	Chosen strategy is simple_byte
  2678  0008F2  5010               	movf	??_TMR0_vdInit,w,c
  2679  0008F4  0A00               	xorlw	0	; case 0
  2680  0008F6  B4D8               	btfsc	status,2,c
  2681  0008F8  D7EE               	goto	l301
  2682  0008FA  0A01               	xorlw	1	; case 1
  2683  0008FC  B4D8               	btfsc	status,2,c
  2684  0008FE  D7EE               	goto	l303
  2685  000900                     l2815:
  2686  000900  FFFF               	dw	65535	; assembler added errata NOP
  2687                           
  2688                           ;TMR0.c: 43:     T0CONbits.T0PS = prescaler_value;
  2689  000902  50D5               	movf	4053,w,c	;volatile
  2690  000904  180D               	xorwf	TMR0_vdInit@prescaler_value,w,c
  2691  000906  0BF8               	andlw	-8
  2692  000908  180D               	xorwf	TMR0_vdInit@prescaler_value,w,c
  2693  00090A  6ED5               	movwf	4053,c	;volatile
  2694                           
  2695                           ;TMR0.c: 44:     initial = init;
  2696  00090C  C00E  F038         	movff	TMR0_vdInit@init,_initial
  2697  000910  C00F  F039         	movff	TMR0_vdInit@init+1,_initial+1
  2698                           
  2699                           ;TMR0.c: 45:     TMR0L = initial;
  2700  000914  C038  FFD6         	movff	_initial,4054	;volatile
  2701                           
  2702                           ;TMR0.c: 46:     TMR0H = (initial>>8);
  2703  000918  5039               	movf	_initial+1,w,c
  2704  00091A  6ED7               	movwf	4055,c	;volatile
  2705                           
  2706                           ;TMR0.c: 47:     T0CONbits.TMR0ON = 1;
  2707  00091C  8ED5               	bsf	4053,7,c	;volatile
  2708  00091E  0012               	return		;funcret
  2709  000920  FFFF               	dw	65535	; errata NOP
  2710  000922                     __end_of_TMR0_vdInit:
  2711                           	opt callstack 0
  2712                           
  2713 ;; *************** function _LED_vdSetStatus *****************
  2714 ;; Defined at:
  2715 ;;		line 25 in file "LED.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  led             2   16[COMRAM] PTR struct .
  2718 ;;		 -> LED2(7), LED1(7), 
  2719 ;;  status          1   18[COMRAM] unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         3       0       0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0
  2734 ;;      Totals:         3       0       0       0       0       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    5
  2738 ;; This function calls:
  2739 ;;		_DIO_vdWritePin
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text15
  2746  000E1E                     __ptext15:
  2747                           	opt callstack 0
  2748  000E1E                     _LED_vdSetStatus:
  2749                           	opt callstack 0
  2750  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2751                           
  2752                           ;LED.c: 26:  DIO_vdWritePin(status,led->PORT,led->pin);
  2753                           
  2754                           ;incstack = 0
  2755  000E20  C011  FFD9         	movff	LED_vdSetStatus@led,fsr2l
  2756  000E24  C012  FFDA         	movff	LED_vdSetStatus@led+1,fsr2h
  2757  000E28  50DF               	movf	indf2,w,c
  2758  000E2A  6E0B               	movwf	DIO_vdWritePin@port,c
  2759  000E2C  EE20 F001          	lfsr	2,1
  2760  000E30  5011               	movf	LED_vdSetStatus@led,w,c
  2761  000E32  26D9               	addwf	fsr2l,f,c
  2762  000E34  5012               	movf	LED_vdSetStatus@led+1,w,c
  2763  000E36  22DA               	addwfc	fsr2h,f,c
  2764  000E38  50DF               	movf	indf2,w,c
  2765  000E3A  6E0C               	movwf	DIO_vdWritePin@pin,c
  2766  000E3C  5013               	movf	LED_vdSetStatus@status,w,c
  2767  000E3E  ECD4  F001         	call	_DIO_vdWritePin
  2768  000E42  0012               	return		;funcret
  2769  000E44  FFFF               	dw	65535	; errata NOP
  2770  000E46                     __end_of_LED_vdSetStatus:
  2771                           	opt callstack 0
  2772                           
  2773 ;; *************** function _DIO_vdWritePin *****************
  2774 ;; Defined at:
  2775 ;;		line 19 in file "DIO.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  data            1    wreg     unsigned char 
  2778 ;;  port            1   10[COMRAM] unsigned char 
  2779 ;;  pin             1   11[COMRAM] unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  data            1   15[COMRAM] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2791 ;;      Params:         2       0       0       0       0       0       0
  2792 ;;      Locals:         1       0       0       0       0       0       0
  2793 ;;      Temps:          3       0       0       0       0       0       0
  2794 ;;      Totals:         6       0       0       0       0       0       0
  2795 ;;Total ram usage:        6 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    4
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_LED_vdSetStatus
  2802 ;;		_LED_vdOn
  2803 ;;		_LED_vdOff
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text16
  2808  0003A8                     __ptext16:
  2809                           	opt callstack 0
  2810  0003A8                     _DIO_vdWritePin:
  2811                           	opt callstack 0
  2812  0003A8  FFFF               	dw	65535	; assembler added errata NOP
  2813                           
  2814                           ;incstack = 0
  2815                           ;DIO_vdWritePin@data stored from wreg
  2816  0003AA  6E10               	movwf	DIO_vdWritePin@data,c
  2817                           
  2818                           ;DIO.c: 20:  switch(port){
  2819  0003AC  D0A8               	goto	l2591
  2820  0003AE                     l2565:
  2821  0003AE  FFFF               	dw	65535	; assembler added errata NOP
  2822                           
  2823                           ;DIO.c: 22:    if(data){
  2824  0003B0  5010               	movf	DIO_vdWritePin@data,w,c
  2825  0003B2  B4D8               	btfsc	status,2,c
  2826  0003B4  D011               	goto	l2569
  2827                           
  2828                           ;DIO.c: 23:     (*p_PORTAdata).PORT |= (1<<pin);
  2829  0003B6  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2830  0003BA  0E01               	movlw	1
  2831  0003BC  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2832  0003BE  2A0D               	incf	??_DIO_vdWritePin,f,c
  2833  0003C0  D003               	goto	u1934
  2834  0003C2                     u1935:
  2835  0003C2  FFFF               	dw	65535	; assembler added errata NOP
  2836  0003C4  90D8               	bcf	status,0,c
  2837  0003C6  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2838  0003C8                     u1934:
  2839  0003C8  FFFF               	dw	65535	; assembler added errata NOP
  2840  0003CA  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2841  0003CC  D7FA               	goto	u1935
  2842  0003CE  C059  FFD9         	movff	_p_PORTAdata,fsr2l
  2843  0003D2  C05A  FFDA         	movff	_p_PORTAdata+1,fsr2h
  2844  0003D6  D077               	goto	L3
  2845  0003D8                     l2569:
  2846  0003D8  FFFF               	dw	65535	; assembler added errata NOP
  2847                           
  2848                           ;DIO.c: 25:     (*p_PORTAdata).PORT &= ~(1<<pin);
  2849  0003DA  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2850  0003DE  0E01               	movlw	1
  2851  0003E0  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2852  0003E2  2A0D               	incf	??_DIO_vdWritePin,f,c
  2853  0003E4  D003               	goto	u1944
  2854  0003E6                     u1945:
  2855  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  2856  0003E8  90D8               	bcf	status,0,c
  2857  0003EA  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2858  0003EC                     u1944:
  2859  0003EC  FFFF               	dw	65535	; assembler added errata NOP
  2860  0003EE  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2861  0003F0  D7FA               	goto	u1945
  2862  0003F2  500E               	movf	??_DIO_vdWritePin+1,w,c
  2863  0003F4  0AFF               	xorlw	255
  2864  0003F6  6E0F               	movwf	(??_DIO_vdWritePin+2)& (0+255),c
  2865  0003F8  C059  FFD9         	movff	_p_PORTAdata,fsr2l
  2866  0003FC  C05A  FFDA         	movff	_p_PORTAdata+1,fsr2h
  2867  000400  D07A               	goto	L4
  2868  000402                     l2571:
  2869  000402  FFFF               	dw	65535	; assembler added errata NOP
  2870                           
  2871                           ;DIO.c: 29:    if(data){
  2872  000404  5010               	movf	DIO_vdWritePin@data,w,c
  2873  000406  B4D8               	btfsc	status,2,c
  2874  000408  D011               	goto	l2575
  2875                           
  2876                           ;DIO.c: 30:     (*p_PORTBdata).PORT |= (1<<pin);
  2877  00040A  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2878  00040E  0E01               	movlw	1
  2879  000410  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2880  000412  2A0D               	incf	??_DIO_vdWritePin,f,c
  2881  000414  D003               	goto	u1964
  2882  000416                     u1965:
  2883  000416  FFFF               	dw	65535	; assembler added errata NOP
  2884  000418  90D8               	bcf	status,0,c
  2885  00041A  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2886  00041C                     u1964:
  2887  00041C  FFFF               	dw	65535	; assembler added errata NOP
  2888  00041E  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2889  000420  D7FA               	goto	u1965
  2890  000422  C055  FFD9         	movff	_p_PORTBdata,fsr2l
  2891  000426  C056  FFDA         	movff	_p_PORTBdata+1,fsr2h
  2892  00042A  D04D               	goto	L3
  2893  00042C                     l2575:
  2894  00042C  FFFF               	dw	65535	; assembler added errata NOP
  2895                           
  2896                           ;DIO.c: 32:     (*p_PORTBdata).PORT &= ~(1<<pin);
  2897  00042E  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2898  000432  0E01               	movlw	1
  2899  000434  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2900  000436  2A0D               	incf	??_DIO_vdWritePin,f,c
  2901  000438  D003               	goto	u1974
  2902  00043A                     u1975:
  2903  00043A  FFFF               	dw	65535	; assembler added errata NOP
  2904  00043C  90D8               	bcf	status,0,c
  2905  00043E  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2906  000440                     u1974:
  2907  000440  FFFF               	dw	65535	; assembler added errata NOP
  2908  000442  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2909  000444  D7FA               	goto	u1975
  2910  000446  500E               	movf	??_DIO_vdWritePin+1,w,c
  2911  000448  0AFF               	xorlw	255
  2912  00044A  6E0F               	movwf	(??_DIO_vdWritePin+2)& (0+255),c
  2913  00044C  C055  FFD9         	movff	_p_PORTBdata,fsr2l
  2914  000450  C056  FFDA         	movff	_p_PORTBdata+1,fsr2h
  2915  000454  D050               	goto	L4
  2916  000456                     l2577:
  2917  000456  FFFF               	dw	65535	; assembler added errata NOP
  2918                           
  2919                           ;DIO.c: 36:    if(data){
  2920  000458  5010               	movf	DIO_vdWritePin@data,w,c
  2921  00045A  B4D8               	btfsc	status,2,c
  2922  00045C  D00F               	goto	l2581
  2923                           
  2924                           ;DIO.c: 37:     (*p_PORTCdata).PORT |= (1<<pin);
  2925  00045E  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2926  000462  0E01               	movlw	1
  2927  000464  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2928  000466  2A0D               	incf	??_DIO_vdWritePin,f,c
  2929  000468  D003               	goto	u1994
  2930  00046A                     u1995:
  2931  00046A  FFFF               	dw	65535	; assembler added errata NOP
  2932  00046C  90D8               	bcf	status,0,c
  2933  00046E  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2934  000470                     u1994:
  2935  000470  FFFF               	dw	65535	; assembler added errata NOP
  2936  000472  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2937  000474  D7FA               	goto	u1995
  2938  000476  500E               	movf	??_DIO_vdWritePin+1,w,c
  2939  000478  1282               	iorwf	3970,f,c	;volatile
  2940                           
  2941                           ;DIO.c: 38:     }else{
  2942  00047A  D056               	goto	l115
  2943  00047C                     l2581:
  2944  00047C  FFFF               	dw	65535	; assembler added errata NOP
  2945                           
  2946                           ;DIO.c: 39:     (*p_PORTCdata).PORT &= ~(1<<pin);
  2947  00047E  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2948  000482  0E01               	movlw	1
  2949  000484  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2950  000486  2A0D               	incf	??_DIO_vdWritePin,f,c
  2951  000488  D003               	goto	u2004
  2952  00048A                     u2005:
  2953  00048A  FFFF               	dw	65535	; assembler added errata NOP
  2954  00048C  90D8               	bcf	status,0,c
  2955  00048E  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2956  000490                     u2004:
  2957  000490  FFFF               	dw	65535	; assembler added errata NOP
  2958  000492  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2959  000494  D7FA               	goto	u2005
  2960  000496  500E               	movf	??_DIO_vdWritePin+1,w,c
  2961  000498  0AFF               	xorlw	255
  2962  00049A  1682               	andwf	3970,f,c	;volatile
  2963  00049C  D045               	goto	l115
  2964  00049E                     l2583:
  2965  00049E  FFFF               	dw	65535	; assembler added errata NOP
  2966                           
  2967                           ;DIO.c: 43:    if(data){
  2968  0004A0  5010               	movf	DIO_vdWritePin@data,w,c
  2969  0004A2  B4D8               	btfsc	status,2,c
  2970  0004A4  D014               	goto	l2587
  2971                           
  2972                           ;DIO.c: 44:     (*p_PORTDdata).PORT |= (1<<pin);
  2973  0004A6  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  2974  0004AA  0E01               	movlw	1
  2975  0004AC  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  2976  0004AE  2A0D               	incf	??_DIO_vdWritePin,f,c
  2977  0004B0  D003               	goto	u2024
  2978  0004B2                     u2025:
  2979  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  2980  0004B4  90D8               	bcf	status,0,c
  2981  0004B6  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  2982  0004B8                     u2024:
  2983  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  2984  0004BA  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  2985  0004BC  D7FA               	goto	u2025
  2986  0004BE  C04D  FFD9         	movff	_p_PORTDdata,fsr2l
  2987  0004C2  C04E  FFDA         	movff	_p_PORTDdata+1,fsr2h
  2988  0004C6                     L3:
  2989  0004C6  FFFF               	dw	65535	; assembler added errata NOP
  2990  0004C8  500E               	movf	??_DIO_vdWritePin+1,w,c
  2991  0004CA  12DF               	iorwf	indf2,f,c
  2992                           
  2993                           ;DIO.c: 45:     }else{
  2994  0004CC  D02D               	goto	l115
  2995  0004CE                     l2587:
  2996  0004CE  FFFF               	dw	65535	; assembler added errata NOP
  2997                           
  2998                           ;DIO.c: 46:     (*p_PORTDdata).PORT &= ~(1<<pin);
  2999  0004D0  C00C  F00D         	movff	DIO_vdWritePin@pin,??_DIO_vdWritePin
  3000  0004D4  0E01               	movlw	1
  3001  0004D6  6E0E               	movwf	(??_DIO_vdWritePin+1)& (0+255),c
  3002  0004D8  2A0D               	incf	??_DIO_vdWritePin,f,c
  3003  0004DA  D003               	goto	u2034
  3004  0004DC                     u2035:
  3005  0004DC  FFFF               	dw	65535	; assembler added errata NOP
  3006  0004DE  90D8               	bcf	status,0,c
  3007  0004E0  360E               	rlcf	??_DIO_vdWritePin+1,f,c
  3008  0004E2                     u2034:
  3009  0004E2  FFFF               	dw	65535	; assembler added errata NOP
  3010  0004E4  2E0D               	decfsz	??_DIO_vdWritePin,f,c
  3011  0004E6  D7FA               	goto	u2035
  3012  0004E8  500E               	movf	??_DIO_vdWritePin+1,w,c
  3013  0004EA  0AFF               	xorlw	255
  3014  0004EC  6E0F               	movwf	(??_DIO_vdWritePin+2)& (0+255),c
  3015  0004EE  C04D  FFD9         	movff	_p_PORTDdata,fsr2l
  3016  0004F2  C04E  FFDA         	movff	_p_PORTDdata+1,fsr2h
  3017  0004F6                     L4:
  3018  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3019  0004F8  500F               	movf	??_DIO_vdWritePin+2,w,c
  3020  0004FA  16DF               	andwf	indf2,f,c
  3021  0004FC  D015               	goto	l115
  3022  0004FE                     l2591:
  3023  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  3024  000500  500B               	movf	DIO_vdWritePin@port,w,c
  3025  000502  6E0D               	movwf	??_DIO_vdWritePin& (0+255),c
  3026  000504  6A0E               	clrf	(??_DIO_vdWritePin+1)& (0+255),c
  3027                           
  3028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3029                           ; Switch size 1, requested type "simple"
  3030                           ; Number of cases is 1, Range of values is 0 to 0
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte            4     3 (average)
  3034                           ;	Chosen strategy is simple_byte
  3035  000506  500E               	movf	??_DIO_vdWritePin+1,w,c
  3036  000508  0A00               	xorlw	0	; case 0
  3037  00050A  A4D8               	btfss	status,2,c
  3038  00050C  D00D               	goto	l115
  3039                           
  3040                           ; Switch size 1, requested type "simple"
  3041                           ; Number of cases is 4, Range of values is 65 to 68
  3042                           ; switch strategies available:
  3043                           ; Name         Instructions Cycles
  3044                           ; simple_byte           13     7 (average)
  3045                           ;	Chosen strategy is simple_byte
  3046  00050E  500D               	movf	??_DIO_vdWritePin,w,c
  3047  000510  0A41               	xorlw	65	; case 65
  3048  000512  B4D8               	btfsc	status,2,c
  3049  000514  D74C               	goto	l2565
  3050  000516  0A03               	xorlw	3	; case 66
  3051  000518  B4D8               	btfsc	status,2,c
  3052  00051A  D773               	goto	l2571
  3053  00051C  0A01               	xorlw	1	; case 67
  3054  00051E  B4D8               	btfsc	status,2,c
  3055  000520  D79A               	goto	l2577
  3056  000522  0A07               	xorlw	7	; case 68
  3057  000524  B4D8               	btfsc	status,2,c
  3058  000526  D7BB               	goto	l2583
  3059  000528                     l115:
  3060  000528  FFFF               	dw	65535	; assembler added errata NOP
  3061  00052A  0012               	return		;funcret
  3062  00052C  FFFF               	dw	65535	; errata NOP
  3063  00052E                     __end_of_DIO_vdWritePin:
  3064                           	opt callstack 0
  3065                           
  3066 ;; *************** function _INT_vdinit *****************
  3067 ;; Defined at:
  3068 ;;		line 19 in file "INT.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		None
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3082 ;;      Params:         0       0       0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    4
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text17
  3097  000E6A                     __ptext17:
  3098                           	opt callstack 0
  3099  000E6A                     _INT_vdinit:
  3100                           	opt callstack 0
  3101  000E6A  FFFF               	dw	65535	; assembler added errata NOP
  3102                           
  3103                           ;INT.c: 20:     INTCON1bits.GIE = 1;
  3104                           
  3105                           ;incstack = 0
  3106  000E6C  8EF2               	bsf	4082,7,c	;volatile
  3107                           
  3108                           ;INT.c: 21:     PEIE = 1;
  3109  000E6E  8CF2               	bsf	4082,6,c	;volatile
  3110                           
  3111                           ;INT.c: 24:     INTCON1bits.INT0IE = 1;
  3112  000E70  88F2               	bsf	4082,4,c	;volatile
  3113                           
  3114                           ;INT.c: 25:     INTCON3bits.INT1IE = 1;
  3115  000E72  86F0               	bsf	4080,3,c	;volatile
  3116                           
  3117                           ;INT.c: 26:     INTCON3bits.INT2IE = 1;
  3118  000E74  88F0               	bsf	4080,4,c	;volatile
  3119                           
  3120                           ;INT.c: 28:     INTCON2bits.INTEDG0 = 1;
  3121  000E76  8CF1               	bsf	4081,6,c	;volatile
  3122                           
  3123                           ;INT.c: 29:     INTCON2bits.INTEDG1 = 1;
  3124  000E78  8AF1               	bsf	4081,5,c	;volatile
  3125                           
  3126                           ;INT.c: 30:     INTCON2bits.INTEDG2 = 1;
  3127  000E7A  88F1               	bsf	4081,4,c	;volatile
  3128                           
  3129                           ;INT.c: 33:     INTCON1bits.RBIE = 0;
  3130  000E7C  96F2               	bcf	4082,3,c	;volatile
  3131                           
  3132                           ;INT.c: 36:     INTCON1bits.TMR0IE = 0;
  3133  000E7E  9AF2               	bcf	4082,5,c	;volatile
  3134                           
  3135                           ;INT.c: 39:     TMR1IF = 0;
  3136  000E80  909E               	bcf	3998,0,c	;volatile
  3137                           
  3138                           ;INT.c: 40:     PIE1bits.TMR1IE = 1;
  3139  000E82  809D               	bsf	3997,0,c	;volatile
  3140                           
  3141                           ;INT.c: 41:     IPR1bits.TMR1IP = 0;
  3142  000E84  909F               	bcf	3999,0,c	;volatile
  3143  000E86  0012               	return		;funcret
  3144  000E88  FFFF               	dw	65535	; errata NOP
  3145  000E8A                     __end_of_INT_vdinit:
  3146                           	opt callstack 0
  3147                           
  3148 ;; *************** function _INT_vdSetTMR1Callback *****************
  3149 ;; Defined at:
  3150 ;;		line 59 in file "INT.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  pf              2   10[COMRAM] PTR FTN()void 
  3153 ;;		 -> tmr1_callback(1), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3165 ;;      Params:         2       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0
  3168 ;;      Totals:         2       0       0       0       0       0       0
  3169 ;;Total ram usage:        2 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    4
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text18
  3180  000F76                     __ptext18:
  3181                           	opt callstack 0
  3182  000F76                     _INT_vdSetTMR1Callback:
  3183                           	opt callstack 0
  3184  000F76  FFFF               	dw	65535	; assembler added errata NOP
  3185                           
  3186                           ;INT.c: 60:     callback_TMR1 = pf;
  3187                           
  3188                           ;incstack = 0
  3189  000F78  C00B  F03C         	movff	INT_vdSetTMR1Callback@pf,_callback_TMR1
  3190  000F7C  C00C  F03D         	movff	INT_vdSetTMR1Callback@pf+1,_callback_TMR1+1
  3191  000F80  0012               	return		;funcret
  3192  000F82  FFFF               	dw	65535	; errata NOP
  3193  000F84                     __end_of_INT_vdSetTMR1Callback:
  3194                           	opt callstack 0
  3195                           
  3196 ;; *************** function _INT_vdSetTMR0Callback *****************
  3197 ;; Defined at:
  3198 ;;		line 56 in file "INT.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  pf              2   10[COMRAM] PTR FTN()void 
  3201 ;;		 -> tmr0_callback(1), 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3213 ;;      Params:         2       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0
  3216 ;;      Totals:         2       0       0       0       0       0       0
  3217 ;;Total ram usage:        2 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text19
  3228  000F84                     __ptext19:
  3229                           	opt callstack 0
  3230  000F84                     _INT_vdSetTMR0Callback:
  3231                           	opt callstack 0
  3232  000F84  FFFF               	dw	65535	; assembler added errata NOP
  3233                           
  3234                           ;INT.c: 57:     callback_TMR0 = pf;
  3235                           
  3236                           ;incstack = 0
  3237  000F86  C00B  F03E         	movff	INT_vdSetTMR0Callback@pf,_callback_TMR0
  3238  000F8A  C00C  F03F         	movff	INT_vdSetTMR0Callback@pf+1,_callback_TMR0+1
  3239  000F8E  0012               	return		;funcret
  3240  000F90  FFFF               	dw	65535	; errata NOP
  3241  000F92                     __end_of_INT_vdSetTMR0Callback:
  3242                           	opt callstack 0
  3243                           
  3244 ;; *************** function _INT_vdSetINT2Callback *****************
  3245 ;; Defined at:
  3246 ;;		line 50 in file "INT.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  pf              2   10[COMRAM] PTR FTN()void 
  3249 ;;		 -> int2_callback(1), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3261 ;;      Params:         2       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0
  3264 ;;      Totals:         2       0       0       0       0       0       0
  3265 ;;Total ram usage:        2 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    4
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text20
  3276  000F92                     __ptext20:
  3277                           	opt callstack 0
  3278  000F92                     _INT_vdSetINT2Callback:
  3279                           	opt callstack 0
  3280  000F92  FFFF               	dw	65535	; assembler added errata NOP
  3281                           
  3282                           ;INT.c: 51:     callback_INT2 = pf;
  3283                           
  3284                           ;incstack = 0
  3285  000F94  C00B  F042         	movff	INT_vdSetINT2Callback@pf,_callback_INT2
  3286  000F98  C00C  F043         	movff	INT_vdSetINT2Callback@pf+1,_callback_INT2+1
  3287  000F9C  0012               	return		;funcret
  3288  000F9E  FFFF               	dw	65535	; errata NOP
  3289  000FA0                     __end_of_INT_vdSetINT2Callback:
  3290                           	opt callstack 0
  3291                           
  3292 ;; *************** function _INT_vdSetINT1Callback *****************
  3293 ;; Defined at:
  3294 ;;		line 47 in file "INT.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  pf              2   10[COMRAM] PTR FTN()void 
  3297 ;;		 -> int1_callback(1), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3309 ;;      Params:         2       0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0
  3312 ;;      Totals:         2       0       0       0       0       0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    4
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text21
  3324  000FA0                     __ptext21:
  3325                           	opt callstack 0
  3326  000FA0                     _INT_vdSetINT1Callback:
  3327                           	opt callstack 0
  3328  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ;INT.c: 48:     callback_INT1 = pf;
  3331                           
  3332                           ;incstack = 0
  3333  000FA2  C00B  F044         	movff	INT_vdSetINT1Callback@pf,_callback_INT1
  3334  000FA6  C00C  F045         	movff	INT_vdSetINT1Callback@pf+1,_callback_INT1+1
  3335  000FAA  0012               	return		;funcret
  3336  000FAC  FFFF               	dw	65535	; errata NOP
  3337  000FAE                     __end_of_INT_vdSetINT1Callback:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _INT_vdSetINT0Callback *****************
  3341 ;; Defined at:
  3342 ;;		line 44 in file "INT.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  pf              2   10[COMRAM] PTR FTN()void 
  3345 ;;		 -> int0_callback(1), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3357 ;;      Params:         2       0       0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0
  3360 ;;      Totals:         2       0       0       0       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text22
  3372  000FAE                     __ptext22:
  3373                           	opt callstack 0
  3374  000FAE                     _INT_vdSetINT0Callback:
  3375                           	opt callstack 0
  3376  000FAE  FFFF               	dw	65535	; assembler added errata NOP
  3377                           
  3378                           ;INT.c: 45:     callback_INT0 = pf;
  3379                           
  3380                           ;incstack = 0
  3381  000FB0  C00B  F046         	movff	INT_vdSetINT0Callback@pf,_callback_INT0
  3382  000FB4  C00C  F047         	movff	INT_vdSetINT0Callback@pf+1,_callback_INT0+1
  3383  000FB8  0012               	return		;funcret
  3384  000FBA  FFFF               	dw	65535	; errata NOP
  3385  000FBC                     __end_of_INT_vdSetINT0Callback:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _DIO_vdInit *****************
  3389 ;; Defined at:
  3390 ;;		line 15 in file "DIO.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  dev             2   15[COMRAM] PTR struct .
  3393 ;;		 -> BTN3(7), BTN2(7), BTN1(7), LED3(7), 
  3394 ;;		 -> LED2(7), LED1(7), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3406 ;;      Params:         2       0       0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0
  3409 ;;      Totals:         2       0       0       0       0       0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    5
  3413 ;; This function calls:
  3414 ;;		_DIO_vdWriteDirPin
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text23
  3421  000DC0                     __ptext23:
  3422                           	opt callstack 0
  3423  000DC0                     _DIO_vdInit:
  3424                           	opt callstack 0
  3425  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  3426                           
  3427                           ;DIO.c: 16:     DIO_vdWriteDirPin(dev->mode,dev->PORT,dev->pin);
  3428                           
  3429                           ;incstack = 0
  3430  000DC2  C010  FFD9         	movff	DIO_vdInit@dev,fsr2l
  3431  000DC6  C011  FFDA         	movff	DIO_vdInit@dev+1,fsr2h
  3432  000DCA  50DF               	movf	indf2,w,c
  3433  000DCC  6E0B               	movwf	DIO_vdWriteDirPin@port,c
  3434  000DCE  EE20 F001          	lfsr	2,1
  3435  000DD2  5010               	movf	DIO_vdInit@dev,w,c
  3436  000DD4  26D9               	addwf	fsr2l,f,c
  3437  000DD6  5011               	movf	DIO_vdInit@dev+1,w,c
  3438  000DD8  22DA               	addwfc	fsr2h,f,c
  3439  000DDA  50DF               	movf	indf2,w,c
  3440  000DDC  6E0C               	movwf	DIO_vdWriteDirPin@pin,c
  3441  000DDE  EE20 F002          	lfsr	2,2
  3442  000DE2  5010               	movf	DIO_vdInit@dev,w,c
  3443  000DE4  26D9               	addwf	fsr2l,f,c
  3444  000DE6  5011               	movf	DIO_vdInit@dev+1,w,c
  3445  000DE8  22DA               	addwfc	fsr2h,f,c
  3446  000DEA  50DF               	movf	indf2,w,c
  3447  000DEC  EC97  F002         	call	_DIO_vdWriteDirPin
  3448  000DF0  0012               	return		;funcret
  3449  000DF2  FFFF               	dw	65535	; errata NOP
  3450  000DF4                     __end_of_DIO_vdInit:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function _DIO_vdWriteDirPin *****************
  3454 ;; Defined at:
  3455 ;;		line 52 in file "DIO.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  data            1    wreg     unsigned char 
  3458 ;;  port            1   10[COMRAM] unsigned char 
  3459 ;;  pin             1   11[COMRAM] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  data            1   14[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3471 ;;      Params:         2       0       0       0       0       0       0
  3472 ;;      Locals:         1       0       0       0       0       0       0
  3473 ;;      Temps:          2       0       0       0       0       0       0
  3474 ;;      Totals:         5       0       0       0       0       0       0
  3475 ;;Total ram usage:        5 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_DIO_vdInit
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text24
  3486  00052E                     __ptext24:
  3487                           	opt callstack 0
  3488  00052E                     _DIO_vdWriteDirPin:
  3489                           	opt callstack 0
  3490  00052E  FFFF               	dw	65535	; assembler added errata NOP
  3491                           
  3492                           ;incstack = 0
  3493                           ;DIO_vdWriteDirPin@data stored from wreg
  3494  000530  6E0F               	movwf	DIO_vdWriteDirPin@data,c
  3495                           
  3496                           ;DIO.c: 53:  switch(port){
  3497  000532  D090               	goto	l2557
  3498  000534                     l2531:
  3499  000534  FFFF               	dw	65535	; assembler added errata NOP
  3500                           
  3501                           ;DIO.c: 55:    if(data){
  3502  000536  500F               	movf	DIO_vdWriteDirPin@data,w,c
  3503  000538  B4D8               	btfsc	status,2,c
  3504  00053A  D00F               	goto	l2535
  3505                           
  3506                           ;DIO.c: 56:     (*p_PORTAdirection).PORT |= (1<<pin);
  3507  00053C  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3508  000540  0E01               	movlw	1
  3509  000542  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3510  000544  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3511  000546  D003               	goto	u1814
  3512  000548                     u1815:
  3513  000548  FFFF               	dw	65535	; assembler added errata NOP
  3514  00054A  90D8               	bcf	status,0,c
  3515  00054C  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3516  00054E                     u1814:
  3517  00054E  FFFF               	dw	65535	; assembler added errata NOP
  3518  000550  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3519  000552  D7FA               	goto	u1815
  3520  000554  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3521  000556  1292               	iorwf	3986,f,c	;volatile
  3522                           
  3523                           ;DIO.c: 57:    }else{
  3524  000558  D092               	goto	l132
  3525  00055A                     l2535:
  3526  00055A  FFFF               	dw	65535	; assembler added errata NOP
  3527                           
  3528                           ;DIO.c: 58:     (*p_PORTAdirection).PORT &= ~(1<<pin);
  3529  00055C  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3530  000560  0E01               	movlw	1
  3531  000562  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3532  000564  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3533  000566  D003               	goto	u1824
  3534  000568                     u1825:
  3535  000568  FFFF               	dw	65535	; assembler added errata NOP
  3536  00056A  90D8               	bcf	status,0,c
  3537  00056C  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3538  00056E                     u1824:
  3539  00056E  FFFF               	dw	65535	; assembler added errata NOP
  3540  000570  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3541  000572  D7FA               	goto	u1825
  3542  000574  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3543  000576  0AFF               	xorlw	255
  3544  000578  1692               	andwf	3986,f,c	;volatile
  3545  00057A  D081               	goto	l132
  3546  00057C                     l2537:
  3547  00057C  FFFF               	dw	65535	; assembler added errata NOP
  3548                           
  3549                           ;DIO.c: 62:    if(data){
  3550  00057E  500F               	movf	DIO_vdWriteDirPin@data,w,c
  3551  000580  B4D8               	btfsc	status,2,c
  3552  000582  D00F               	goto	l2541
  3553                           
  3554                           ;DIO.c: 63:     (*p_PORTBdirection).PORT |= (1<<pin);
  3555  000584  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3556  000588  0E01               	movlw	1
  3557  00058A  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3558  00058C  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3559  00058E  D003               	goto	u1844
  3560  000590                     u1845:
  3561  000590  FFFF               	dw	65535	; assembler added errata NOP
  3562  000592  90D8               	bcf	status,0,c
  3563  000594  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3564  000596                     u1844:
  3565  000596  FFFF               	dw	65535	; assembler added errata NOP
  3566  000598  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3567  00059A  D7FA               	goto	u1845
  3568  00059C  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3569  00059E  1293               	iorwf	3987,f,c	;volatile
  3570                           
  3571                           ;DIO.c: 64:     }else{
  3572  0005A0  D06E               	goto	l132
  3573  0005A2                     l2541:
  3574  0005A2  FFFF               	dw	65535	; assembler added errata NOP
  3575                           
  3576                           ;DIO.c: 65:     (*p_PORTBdirection).PORT &= ~(1<<pin);
  3577  0005A4  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3578  0005A8  0E01               	movlw	1
  3579  0005AA  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3580  0005AC  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3581  0005AE  D003               	goto	u1854
  3582  0005B0                     u1855:
  3583  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  3584  0005B2  90D8               	bcf	status,0,c
  3585  0005B4  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3586  0005B6                     u1854:
  3587  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  3588  0005B8  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3589  0005BA  D7FA               	goto	u1855
  3590  0005BC  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3591  0005BE  0AFF               	xorlw	255
  3592  0005C0  1693               	andwf	3987,f,c	;volatile
  3593  0005C2  D05D               	goto	l132
  3594  0005C4                     l2543:
  3595  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  3596                           
  3597                           ;DIO.c: 69:    if(data){
  3598  0005C6  500F               	movf	DIO_vdWriteDirPin@data,w,c
  3599  0005C8  B4D8               	btfsc	status,2,c
  3600  0005CA  D00F               	goto	l2547
  3601                           
  3602                           ;DIO.c: 70:     (*p_PORTCdirection).PORT |= (1<<pin);
  3603  0005CC  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3604  0005D0  0E01               	movlw	1
  3605  0005D2  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3606  0005D4  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3607  0005D6  D003               	goto	u1874
  3608  0005D8                     u1875:
  3609  0005D8  FFFF               	dw	65535	; assembler added errata NOP
  3610  0005DA  90D8               	bcf	status,0,c
  3611  0005DC  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3612  0005DE                     u1874:
  3613  0005DE  FFFF               	dw	65535	; assembler added errata NOP
  3614  0005E0  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3615  0005E2  D7FA               	goto	u1875
  3616  0005E4  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3617  0005E6  1294               	iorwf	3988,f,c	;volatile
  3618                           
  3619                           ;DIO.c: 71:     }else{
  3620  0005E8  D04A               	goto	l132
  3621  0005EA                     l2547:
  3622  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3623                           
  3624                           ;DIO.c: 72:     (*p_PORTCdirection).PORT &= ~(1<<pin);
  3625  0005EC  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3626  0005F0  0E01               	movlw	1
  3627  0005F2  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3628  0005F4  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3629  0005F6  D003               	goto	u1884
  3630  0005F8                     u1885:
  3631  0005F8  FFFF               	dw	65535	; assembler added errata NOP
  3632  0005FA  90D8               	bcf	status,0,c
  3633  0005FC  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3634  0005FE                     u1884:
  3635  0005FE  FFFF               	dw	65535	; assembler added errata NOP
  3636  000600  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3637  000602  D7FA               	goto	u1885
  3638  000604  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3639  000606  0AFF               	xorlw	255
  3640  000608  1694               	andwf	3988,f,c	;volatile
  3641  00060A  D039               	goto	l132
  3642  00060C                     l2549:
  3643  00060C  FFFF               	dw	65535	; assembler added errata NOP
  3644                           
  3645                           ;DIO.c: 76:    if(data){
  3646  00060E  500F               	movf	DIO_vdWriteDirPin@data,w,c
  3647  000610  B4D8               	btfsc	status,2,c
  3648  000612  D00F               	goto	l2553
  3649                           
  3650                           ;DIO.c: 77:     (*p_PORTDdirection).PORT |= (1<<pin);
  3651  000614  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3652  000618  0E01               	movlw	1
  3653  00061A  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3654  00061C  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3655  00061E  D003               	goto	u1904
  3656  000620                     u1905:
  3657  000620  FFFF               	dw	65535	; assembler added errata NOP
  3658  000622  90D8               	bcf	status,0,c
  3659  000624  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3660  000626                     u1904:
  3661  000626  FFFF               	dw	65535	; assembler added errata NOP
  3662  000628  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3663  00062A  D7FA               	goto	u1905
  3664  00062C  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3665  00062E  1295               	iorwf	3989,f,c	;volatile
  3666                           
  3667                           ;DIO.c: 78:     }else{
  3668  000630  D026               	goto	l132
  3669  000632                     l2553:
  3670  000632  FFFF               	dw	65535	; assembler added errata NOP
  3671                           
  3672                           ;DIO.c: 79:     (*p_PORTDdirection).PORT &= ~(1<<pin);
  3673  000634  C00C  F00D         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  3674  000638  0E01               	movlw	1
  3675  00063A  6E0E               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3676  00063C  2A0D               	incf	??_DIO_vdWriteDirPin,f,c
  3677  00063E  D003               	goto	u1914
  3678  000640                     u1915:
  3679  000640  FFFF               	dw	65535	; assembler added errata NOP
  3680  000642  90D8               	bcf	status,0,c
  3681  000644  360E               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  3682  000646                     u1914:
  3683  000646  FFFF               	dw	65535	; assembler added errata NOP
  3684  000648  2E0D               	decfsz	??_DIO_vdWriteDirPin,f,c
  3685  00064A  D7FA               	goto	u1915
  3686  00064C  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3687  00064E  0AFF               	xorlw	255
  3688  000650  1695               	andwf	3989,f,c	;volatile
  3689  000652  D015               	goto	l132
  3690  000654                     l2557:
  3691  000654  FFFF               	dw	65535	; assembler added errata NOP
  3692  000656  500B               	movf	DIO_vdWriteDirPin@port,w,c
  3693  000658  6E0D               	movwf	??_DIO_vdWriteDirPin& (0+255),c
  3694  00065A  6A0E               	clrf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  3695                           
  3696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3697                           ; Switch size 1, requested type "simple"
  3698                           ; Number of cases is 1, Range of values is 0 to 0
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; simple_byte            4     3 (average)
  3702                           ;	Chosen strategy is simple_byte
  3703  00065C  500E               	movf	??_DIO_vdWriteDirPin+1,w,c
  3704  00065E  0A00               	xorlw	0	; case 0
  3705  000660  A4D8               	btfss	status,2,c
  3706  000662  D00D               	goto	l132
  3707                           
  3708                           ; Switch size 1, requested type "simple"
  3709                           ; Number of cases is 4, Range of values is 65 to 68
  3710                           ; switch strategies available:
  3711                           ; Name         Instructions Cycles
  3712                           ; simple_byte           13     7 (average)
  3713                           ;	Chosen strategy is simple_byte
  3714  000664  500D               	movf	??_DIO_vdWriteDirPin,w,c
  3715  000666  0A41               	xorlw	65	; case 65
  3716  000668  B4D8               	btfsc	status,2,c
  3717  00066A  D764               	goto	l2531
  3718  00066C  0A03               	xorlw	3	; case 66
  3719  00066E  B4D8               	btfsc	status,2,c
  3720  000670  D785               	goto	l2537
  3721  000672  0A01               	xorlw	1	; case 67
  3722  000674  B4D8               	btfsc	status,2,c
  3723  000676  D7A6               	goto	l2543
  3724  000678  0A07               	xorlw	7	; case 68
  3725  00067A  B4D8               	btfsc	status,2,c
  3726  00067C  D7C7               	goto	l2549
  3727  00067E                     l132:
  3728  00067E  FFFF               	dw	65535	; assembler added errata NOP
  3729  000680  0012               	return		;funcret
  3730  000682  FFFF               	dw	65535	; errata NOP
  3731  000684                     __end_of_DIO_vdWriteDirPin:
  3732                           	opt callstack 0
  3733                           
  3734 ;; *************** function _ADC_vdInit *****************
  3735 ;; Defined at:
  3736 ;;		line 13 in file "ADC.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3750 ;;      Params:         0       0       0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    4
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text25
  3765  000EC4                     __ptext25:
  3766                           	opt callstack 0
  3767  000EC4                     _ADC_vdInit:
  3768                           	opt callstack 0
  3769  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  3770                           
  3771                           ;ADC.c: 14:     ADCON1bits.PCFG = 0b0000;
  3772                           
  3773                           ;incstack = 0
  3774  000EC6  0EF0               	movlw	-16
  3775  000EC8  16C1               	andwf	4033,f,c	;volatile
  3776                           
  3777                           ;ADC.c: 15:     ADCON1bits.ADFM = 1;
  3778  000ECA  8EC1               	bsf	4033,7,c	;volatile
  3779                           
  3780                           ;ADC.c: 16:     ADCON0bits.ADCS = 0b001;
  3781  000ECC  50C2               	movf	4034,w,c	;volatile
  3782  000ECE  0B3F               	andlw	-193
  3783  000ED0  0940               	iorlw	64
  3784  000ED2  6EC2               	movwf	4034,c	;volatile
  3785                           
  3786                           ;ADC.c: 17:     ADCON1bits.ADCS2 = (0b001>>2);
  3787  000ED4  9CC1               	bcf	4033,6,c	;volatile
  3788                           
  3789                           ;ADC.c: 18:     ADCON0bits.ADON = 1;
  3790  000ED6  80C2               	bsf	4034,0,c	;volatile
  3791  000ED8  0012               	return		;funcret
  3792  000EDA  FFFF               	dw	65535	; errata NOP
  3793  000EDC                     __end_of_ADC_vdInit:
  3794                           	opt callstack 0
  3795                           
  3796 ;; *************** function _ADC_u16getValue *****************
  3797 ;; Defined at:
  3798 ;;		line 21 in file "ADC.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  pin             1    wreg     unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  pin             1   16[COMRAM] unsigned char 
  3803 ;;  data            2   14[COMRAM] unsigned short 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2   10[COMRAM] unsigned short 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3813 ;;      Params:         2       0       0       0       0       0       0
  3814 ;;      Locals:         3       0       0       0       0       0       0
  3815 ;;      Temps:          2       0       0       0       0       0       0
  3816 ;;      Totals:         7       0       0       0       0       0       0
  3817 ;;Total ram usage:        7 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    4
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text26
  3828  000C04                     __ptext26:
  3829                           	opt callstack 0
  3830  000C04                     _ADC_u16getValue:
  3831                           	opt callstack 0
  3832  000C04  FFFF               	dw	65535	; assembler added errata NOP
  3833                           
  3834                           ;incstack = 0
  3835                           ;ADC_u16getValue@pin stored from wreg
  3836  000C06  6E11               	movwf	ADC_u16getValue@pin,c
  3837                           
  3838                           ;ADC.c: 22:     ADCON0bits.CHS = pin;
  3839  000C08  C011  F00D         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  3840  000C0C  460D               	rlncf	??_ADC_u16getValue,f,c
  3841  000C0E  460D               	rlncf	??_ADC_u16getValue,f,c
  3842  000C10  460D               	rlncf	??_ADC_u16getValue,f,c
  3843  000C12  50C2               	movf	4034,w,c	;volatile
  3844  000C14  180D               	xorwf	??_ADC_u16getValue,w,c
  3845  000C16  0BC7               	andlw	-57
  3846  000C18  180D               	xorwf	??_ADC_u16getValue,w,c
  3847  000C1A  6EC2               	movwf	4034,c	;volatile
  3848                           
  3849                           ;ADC.c: 23:     TRISA |= (1<<pin);
  3850  000C1C  C011  F00D         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  3851  000C20  0E01               	movlw	1
  3852  000C22  6E0E               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  3853  000C24  2A0D               	incf	??_ADC_u16getValue,f,c
  3854  000C26  D003               	goto	u2294
  3855  000C28                     u2295:
  3856  000C28  FFFF               	dw	65535	; assembler added errata NOP
  3857  000C2A  90D8               	bcf	status,0,c
  3858  000C2C  360E               	rlcf	??_ADC_u16getValue+1,f,c
  3859  000C2E                     u2294:
  3860  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  3861  000C30  2E0D               	decfsz	??_ADC_u16getValue,f,c
  3862  000C32  D7FA               	goto	u2295
  3863  000C34  500E               	movf	??_ADC_u16getValue+1,w,c
  3864  000C36  1292               	iorwf	3986,f,c	;volatile
  3865                           
  3866                           ;ADC.c: 24:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3867  000C38  0E02               	movlw	2
  3868  000C3A  6E0D               	movwf	??_ADC_u16getValue& (0+255),c
  3869  000C3C  0EF2               	movlw	242
  3870  000C3E                     u2487:
  3871  000C3E  FFFF               	dw	65535	; errata NOP
  3872  000C40  2EE8               	decfsz	wreg,f,c
  3873  000C42  D7FD               	bra	u2487
  3874  000C44  2E0D               	decfsz	??_ADC_u16getValue& (0+255),f,c
  3875  000C46  D7FB               	bra	u2487
  3876  000C48  D000               	nop2	
  3877                           
  3878                           ;ADC.c: 25:     ADCON0bits.GO = 1;
  3879  000C4A  84C2               	bsf	4034,2,c	;volatile
  3880  000C4C                     l36:
  3881  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  3882  000C4E  AC9E               	btfss	3998,6,c	;volatile
  3883  000C50  D7FD               	goto	l36
  3884                           
  3885                           ;ADC.c: 27:     unsigned short int data = ( (ADRESH<<8)|(ADRESL) );
  3886  000C52  50C3               	movf	4035,w,c	;volatile
  3887  000C54  CFC4 F00D          	movff	4036,??_ADC_u16getValue	;volatile
  3888  000C58  6A0E               	clrf	(??_ADC_u16getValue+1)& (0+255),c
  3889  000C5A  C00D  F00E         	movff	??_ADC_u16getValue,??_ADC_u16getValue+1
  3890  000C5E  6A0D               	clrf	??_ADC_u16getValue,c
  3891  000C60  100D               	iorwf	??_ADC_u16getValue,w,c
  3892  000C62  6E0F               	movwf	ADC_u16getValue@data,c
  3893  000C64  500E               	movf	??_ADC_u16getValue+1,w,c
  3894  000C66  6E10               	movwf	ADC_u16getValue@data+1,c
  3895                           
  3896                           ;ADC.c: 28:     ADIF = 0;
  3897  000C68  9C9E               	bcf	3998,6,c	;volatile
  3898                           
  3899                           ;ADC.c: 29:     return data;
  3900  000C6A  C00F  F00B         	movff	ADC_u16getValue@data,?_ADC_u16getValue
  3901  000C6E  C010  F00C         	movff	ADC_u16getValue@data+1,?_ADC_u16getValue+1
  3902  000C72  0012               	return		;funcret
  3903  000C74  FFFF               	dw	65535	; errata NOP
  3904  000C76                     __end_of_ADC_u16getValue:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function _ISR *****************
  3908 ;; Defined at:
  3909 ;;		line 66 in file "INT.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3923 ;;      Params:         0       0       0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0
  3925 ;;      Temps:          4       0       0       0       0       0       0
  3926 ;;      Totals:         4       0       0       0       0       0       0
  3927 ;;Total ram usage:        4 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    3
  3930 ;; This function calls:
  3931 ;;		Absolute function
  3932 ;;		_int0_callback
  3933 ;;		_int1_callback
  3934 ;;		_int2_callback
  3935 ;;		_tmr0_callback
  3936 ;;		_tmr1_callback
  3937 ;; This function is called by:
  3938 ;;		Interrupt level 2
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	intcode
  3943  000008                     __pintcode:
  3944                           	opt callstack 0
  3945  000008                     _ISR:
  3946                           	opt callstack 0
  3947  000008  FFFF               	dw	65535	; assembler added errata NOP
  3948                           
  3949                           ;incstack = 0
  3950  00000A  8269               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3951  00000C  CFFA F007          	movff	pclath,??_ISR
  3952  000010  CFFB F008          	movff	pclatu,??_ISR+1
  3953  000014  CFD9 F009          	movff	fsr2l,??_ISR+2
  3954  000018  CFDA F00A          	movff	fsr2h,??_ISR+3
  3955                           
  3956                           ;INT.c: 68:     if(INT0IF){
  3957  00001C  A2F2               	btfss	4082,1,c	;volatile
  3958  00001E  D010               	goto	i2l2395
  3959                           
  3960                           ;INT.c: 69:         callback_INT0();
  3961  000020  D801               	call	i2u163_48
  3962  000022  D00C               	goto	i2u163_49
  3963  000024                     i2u163_48:
  3964  000024  FFFF               	dw	65535	; assembler added errata NOP
  3965  000026  0005               	push	
  3966  000028  6EFA               	movwf	pclath,c
  3967  00002A  5046               	movf	_callback_INT0,w,c
  3968  00002C  6EFD               	movwf	tosl,c
  3969  00002E  5047               	movf	_callback_INT0+1,w,c
  3970  000030  6EFE               	movwf	tosh,c
  3971  000032  50F8               	movf	tblptru,w,c
  3972  000034  6EFF               	movwf	tosu,c
  3973  000036  50FA               	movf	pclath,w,c
  3974  000038  0012               	return		;indir
  3975  00003A  FFFF               	dw	65535	; errata NOP
  3976  00003C                     i2u163_49:
  3977  00003C  FFFF               	dw	65535	; assembler added errata NOP
  3978                           
  3979                           ;INT.c: 70:         INT0IF = 0;
  3980  00003E  92F2               	bcf	4082,1,c	;volatile
  3981  000040                     i2l2395:
  3982  000040  FFFF               	dw	65535	; assembler added errata NOP
  3983                           
  3984                           ;INT.c: 72:     if(INT1IF){
  3985  000042  A0F0               	btfss	4080,0,c	;volatile
  3986  000044  D010               	goto	i2l2401
  3987                           
  3988                           ;INT.c: 73:         callback_INT1();
  3989  000046  D801               	call	i2u165_48
  3990  000048  D00C               	goto	i2u165_49
  3991  00004A                     i2u165_48:
  3992  00004A  FFFF               	dw	65535	; assembler added errata NOP
  3993  00004C  0005               	push	
  3994  00004E  6EFA               	movwf	pclath,c
  3995  000050  5044               	movf	_callback_INT1,w,c
  3996  000052  6EFD               	movwf	tosl,c
  3997  000054  5045               	movf	_callback_INT1+1,w,c
  3998  000056  6EFE               	movwf	tosh,c
  3999  000058  50F8               	movf	tblptru,w,c
  4000  00005A  6EFF               	movwf	tosu,c
  4001  00005C  50FA               	movf	pclath,w,c
  4002  00005E  0012               	return		;indir
  4003  000060  FFFF               	dw	65535	; errata NOP
  4004  000062                     i2u165_49:
  4005  000062  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ;INT.c: 74:         INT1IF = 0;
  4008  000064  90F0               	bcf	4080,0,c	;volatile
  4009  000066                     i2l2401:
  4010  000066  FFFF               	dw	65535	; assembler added errata NOP
  4011                           
  4012                           ;INT.c: 76:     if(INT2IF){
  4013  000068  A2F0               	btfss	4080,1,c	;volatile
  4014  00006A  D010               	goto	i2l2407
  4015                           
  4016                           ;INT.c: 77:         callback_INT2();
  4017  00006C  D801               	call	i2u167_48
  4018  00006E  D00C               	goto	i2u167_49
  4019  000070                     i2u167_48:
  4020  000070  FFFF               	dw	65535	; assembler added errata NOP
  4021  000072  0005               	push	
  4022  000074  6EFA               	movwf	pclath,c
  4023  000076  5042               	movf	_callback_INT2,w,c
  4024  000078  6EFD               	movwf	tosl,c
  4025  00007A  5043               	movf	_callback_INT2+1,w,c
  4026  00007C  6EFE               	movwf	tosh,c
  4027  00007E  50F8               	movf	tblptru,w,c
  4028  000080  6EFF               	movwf	tosu,c
  4029  000082  50FA               	movf	pclath,w,c
  4030  000084  0012               	return		;indir
  4031  000086  FFFF               	dw	65535	; errata NOP
  4032  000088                     i2u167_49:
  4033  000088  FFFF               	dw	65535	; assembler added errata NOP
  4034                           
  4035                           ;INT.c: 78:         INT2IF = 0;
  4036  00008A  92F0               	bcf	4080,1,c	;volatile
  4037  00008C                     i2l2407:
  4038  00008C  FFFF               	dw	65535	; assembler added errata NOP
  4039                           
  4040                           ;INT.c: 81:         callback_INTonChange();
  4041  00008E  B0F2               	btfsc	4082,0,c	;volatile
  4042                           
  4043                           ;INT.c: 82:         RBIF = 0;
  4044  000090  90F2               	bcf	4082,0,c	;volatile
  4045                           
  4046                           ;INT.c: 86:     if(TMR0IF){
  4047                           
  4048                           ;INT.c: 83:     }
  4049  000092  A4F2               	btfss	4082,2,c	;volatile
  4050  000094  D010               	goto	i2l2415
  4051                           
  4052                           ;INT.c: 87:         callback_TMR0();
  4053  000096  D801               	call	i2u170_48
  4054  000098  D00C               	goto	i2u170_49
  4055  00009A                     i2u170_48:
  4056  00009A  FFFF               	dw	65535	; assembler added errata NOP
  4057  00009C  0005               	push	
  4058  00009E  6EFA               	movwf	pclath,c
  4059  0000A0  503E               	movf	_callback_TMR0,w,c
  4060  0000A2  6EFD               	movwf	tosl,c
  4061  0000A4  503F               	movf	_callback_TMR0+1,w,c
  4062  0000A6  6EFE               	movwf	tosh,c
  4063  0000A8  50F8               	movf	tblptru,w,c
  4064  0000AA  6EFF               	movwf	tosu,c
  4065  0000AC  50FA               	movf	pclath,w,c
  4066  0000AE  0012               	return		;indir
  4067  0000B0  FFFF               	dw	65535	; errata NOP
  4068  0000B2                     i2u170_49:
  4069  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  4070                           
  4071                           ;INT.c: 88:         TMR0IF = 0;
  4072  0000B4  94F2               	bcf	4082,2,c	;volatile
  4073  0000B6                     i2l2415:
  4074  0000B6  FFFF               	dw	65535	; assembler added errata NOP
  4075                           
  4076                           ;INT.c: 92:     if(TMR1IF){
  4077  0000B8  A09E               	btfss	3998,0,c	;volatile
  4078  0000BA  D010               	goto	i2l2421
  4079                           
  4080                           ;INT.c: 93:         callback_TMR1();
  4081  0000BC  D801               	call	i2u172_48
  4082  0000BE  D00C               	goto	i2u172_49
  4083  0000C0                     i2u172_48:
  4084  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  4085  0000C2  0005               	push	
  4086  0000C4  6EFA               	movwf	pclath,c
  4087  0000C6  503C               	movf	_callback_TMR1,w,c
  4088  0000C8  6EFD               	movwf	tosl,c
  4089  0000CA  503D               	movf	_callback_TMR1+1,w,c
  4090  0000CC  6EFE               	movwf	tosh,c
  4091  0000CE  50F8               	movf	tblptru,w,c
  4092  0000D0  6EFF               	movwf	tosu,c
  4093  0000D2  50FA               	movf	pclath,w,c
  4094  0000D4  0012               	return		;indir
  4095  0000D6  FFFF               	dw	65535	; errata NOP
  4096  0000D8                     i2u172_49:
  4097  0000D8  FFFF               	dw	65535	; assembler added errata NOP
  4098                           
  4099                           ;INT.c: 94:         TMR1IF = 0;
  4100  0000DA  909E               	bcf	3998,0,c	;volatile
  4101  0000DC                     i2l2421:
  4102  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  4103                           
  4104                           ;INT.c: 99:         callback_CCP1();
  4105  0000DE  B49E               	btfsc	3998,2,c	;volatile
  4106                           
  4107                           ;INT.c: 100:         CCP1IF = 0;
  4108  0000E0  949E               	bcf	3998,2,c	;volatile
  4109  0000E2  C00A  FFDA         	movff	??_ISR+3,fsr2h
  4110  0000E6  C009  FFD9         	movff	??_ISR+2,fsr2l
  4111  0000EA  C008  FFFB         	movff	??_ISR+1,pclatu
  4112  0000EE  C007  FFFA         	movff	??_ISR,pclath
  4113  0000F2  9269               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4114  0000F4  0011               	retfie		f
  4115  0000F6  FFFF               	dw	65535	; errata NOP
  4116  0000F8                     __end_of_ISR:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _tmr1_callback *****************
  4120 ;; Defined at:
  4121 ;;		line 134 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4135 ;;      Params:         0       0       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_main
  4145 ;;		_ISR
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text28
  4150  000F2E                     __ptext28:
  4151                           	opt callstack 0
  4152  000F2E                     _tmr1_callback:
  4153                           	opt callstack 0
  4154  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  4155                           
  4156                           ;main.c: 135:     x2++;
  4157                           
  4158                           ;incstack = 0
  4159  000F30  0E01               	movlw	1
  4160  000F32  262E               	addwf	_x2,f,c	;volatile
  4161  000F34  0E00               	movlw	0
  4162  000F36  222F               	addwfc	_x2+1,f,c	;volatile
  4163  000F38  2230               	addwfc	_x2+2,f,c	;volatile
  4164  000F3A  2231               	addwfc	_x2+3,f,c	;volatile
  4165  000F3C  0012               	return		;funcret
  4166  000F3E  FFFF               	dw	65535	; errata NOP
  4167  000F40                     __end_of_tmr1_callback:
  4168                           	opt callstack 0
  4169                           
  4170 ;; *************** function _tmr0_callback *****************
  4171 ;; Defined at:
  4172 ;;		line 130 in file "main.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         0       0       0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;;		_ISR
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text29
  4201  000F40                     __ptext29:
  4202                           	opt callstack 0
  4203  000F40                     _tmr0_callback:
  4204                           	opt callstack 0
  4205  000F40  FFFF               	dw	65535	; assembler added errata NOP
  4206                           
  4207                           ;main.c: 131:     x1++;
  4208                           
  4209                           ;incstack = 0
  4210  000F42  0E01               	movlw	1
  4211  000F44  2632               	addwf	_x1,f,c	;volatile
  4212  000F46  0E00               	movlw	0
  4213  000F48  2233               	addwfc	_x1+1,f,c	;volatile
  4214  000F4A  2234               	addwfc	_x1+2,f,c	;volatile
  4215  000F4C  2235               	addwfc	_x1+3,f,c	;volatile
  4216  000F4E  0012               	return		;funcret
  4217  000F50  FFFF               	dw	65535	; errata NOP
  4218  000F52                     __end_of_tmr0_callback:
  4219                           	opt callstack 0
  4220                           
  4221 ;; *************** function _int2_callback *****************
  4222 ;; Defined at:
  4223 ;;		line 126 in file "main.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4237 ;;      Params:         0       0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		_LED_vdtoggle
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;;		_ISR
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text30
  4253  000F52                     __ptext30:
  4254                           	opt callstack 0
  4255  000F52                     _int2_callback:
  4256                           	opt callstack 0
  4257  000F52  FFFF               	dw	65535	; assembler added errata NOP
  4258                           
  4259                           ;main.c: 127:     LED_vdtoggle(&LED3);
  4260                           
  4261                           ;incstack = 0
  4262  000F54  0E95               	movlw	low _LED3
  4263  000F56  6E05               	movwf	LED_vdtoggle@led,c
  4264  000F58  0E00               	movlw	high _LED3
  4265  000F5A  6E06               	movwf	LED_vdtoggle@led+1,c
  4266  000F5C  EC23  F007         	call	_LED_vdtoggle	;wreg free
  4267  000F60  0012               	return		;funcret
  4268  000F62  FFFF               	dw	65535	; errata NOP
  4269  000F64                     __end_of_int2_callback:
  4270                           	opt callstack 0
  4271                           
  4272 ;; *************** function _LED_vdtoggle *****************
  4273 ;; Defined at:
  4274 ;;		line 21 in file "LED.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  led             2    4[COMRAM] PTR struct .
  4277 ;;		 -> LED3(7), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4289 ;;      Params:         2       0       0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    1
  4296 ;; This function calls:
  4297 ;;		_DIO_vdtogglePin
  4298 ;; This function is called by:
  4299 ;;		_int2_callback
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text31
  4304  000E46                     __ptext31:
  4305                           	opt callstack 0
  4306  000E46                     _LED_vdtoggle:
  4307                           	opt callstack 0
  4308  000E46  FFFF               	dw	65535	; assembler added errata NOP
  4309                           
  4310                           ;LED.c: 22:  DIO_vdtogglePin(led->PORT,led->pin);
  4311                           
  4312                           ;incstack = 0
  4313  000E48  EE20 F001          	lfsr	2,1
  4314  000E4C  5005               	movf	LED_vdtoggle@led,w,c
  4315  000E4E  26D9               	addwf	fsr2l,f,c
  4316  000E50  5006               	movf	LED_vdtoggle@led+1,w,c
  4317  000E52  22DA               	addwfc	fsr2h,f,c
  4318  000E54  50DF               	movf	indf2,w,c
  4319  000E56  6E01               	movwf	DIO_vdtogglePin@pin,c
  4320  000E58  C005  FFD9         	movff	LED_vdtoggle@led,fsr2l
  4321  000E5C  C006  FFDA         	movff	LED_vdtoggle@led+1,fsr2h
  4322  000E60  50DF               	movf	indf2,w,c
  4323  000E62  EC91  F004         	call	_DIO_vdtogglePin
  4324  000E66  0012               	return		;funcret
  4325  000E68  FFFF               	dw	65535	; errata NOP
  4326  000E6A                     __end_of_LED_vdtoggle:
  4327                           	opt callstack 0
  4328                           
  4329 ;; *************** function _DIO_vdtogglePin *****************
  4330 ;; Defined at:
  4331 ;;		line 118 in file "DIO.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  port            1    wreg     unsigned char 
  4334 ;;  pin             1    0[COMRAM] unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  port            1    3[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4346 ;;      Params:         1       0       0       0       0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0
  4348 ;;      Temps:          2       0       0       0       0       0       0
  4349 ;;      Totals:         4       0       0       0       0       0       0
  4350 ;;Total ram usage:        4 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_LED_vdtoggle
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text32
  4360  000922                     __ptext32:
  4361                           	opt callstack 0
  4362  000922                     _DIO_vdtogglePin:
  4363                           	opt callstack 0
  4364  000922  FFFF               	dw	65535	; assembler added errata NOP
  4365                           
  4366                           ;incstack = 0
  4367                           ;DIO_vdtogglePin@port stored from wreg
  4368  000924  6E04               	movwf	DIO_vdtogglePin@port,c
  4369                           
  4370                           ;DIO.c: 119:  switch(port){
  4371  000926  D039               	goto	i2l1947
  4372  000928                     i2l1939:
  4373  000928  FFFF               	dw	65535	; assembler added errata NOP
  4374                           
  4375                           ;DIO.c: 121:    (*p_PORTAdata).PORT ^= (1<<pin);
  4376  00092A  C001  F002         	movff	DIO_vdtogglePin@pin,??_DIO_vdtogglePin
  4377  00092E  0E01               	movlw	1
  4378  000930  6E03               	movwf	(??_DIO_vdtogglePin+1)& (0+255),c
  4379  000932  2A02               	incf	??_DIO_vdtogglePin,f,c
  4380  000934  D003               	goto	i2u98_44
  4381  000936                     i2u98_45:
  4382  000936  FFFF               	dw	65535	; assembler added errata NOP
  4383  000938  90D8               	bcf	status,0,c
  4384  00093A  3603               	rlcf	??_DIO_vdtogglePin+1,f,c
  4385  00093C                     i2u98_44:
  4386  00093C  FFFF               	dw	65535	; assembler added errata NOP
  4387  00093E  2E02               	decfsz	??_DIO_vdtogglePin,f,c
  4388  000940  D7FA               	goto	i2u98_45
  4389  000942  C059  FFD9         	movff	_p_PORTAdata,fsr2l
  4390  000946  C05A  FFDA         	movff	_p_PORTAdata+1,fsr2h
  4391  00094A  D023               	goto	L6
  4392  00094C                     i2l1941:
  4393  00094C  FFFF               	dw	65535	; assembler added errata NOP
  4394                           
  4395                           ;DIO.c: 124:    (*p_PORTBdata).PORT ^= (1<<pin);
  4396  00094E  C001  F002         	movff	DIO_vdtogglePin@pin,??_DIO_vdtogglePin
  4397  000952  0E01               	movlw	1
  4398  000954  6E03               	movwf	(??_DIO_vdtogglePin+1)& (0+255),c
  4399  000956  2A02               	incf	??_DIO_vdtogglePin,f,c
  4400  000958  D003               	goto	i2u99_44
  4401  00095A                     i2u99_45:
  4402  00095A  FFFF               	dw	65535	; assembler added errata NOP
  4403  00095C  90D8               	bcf	status,0,c
  4404  00095E  3603               	rlcf	??_DIO_vdtogglePin+1,f,c
  4405  000960                     i2u99_44:
  4406  000960  FFFF               	dw	65535	; assembler added errata NOP
  4407  000962  2E02               	decfsz	??_DIO_vdtogglePin,f,c
  4408  000964  D7FA               	goto	i2u99_45
  4409  000966  C055  FFD9         	movff	_p_PORTBdata,fsr2l
  4410  00096A  C056  FFDA         	movff	_p_PORTBdata+1,fsr2h
  4411  00096E  D011               	goto	L6
  4412  000970                     i2l1943:
  4413  000970  FFFF               	dw	65535	; assembler added errata NOP
  4414                           
  4415                           ;DIO.c: 127:    (*p_PORTDdata).PORT ^= (1<<pin);
  4416  000972  C001  F002         	movff	DIO_vdtogglePin@pin,??_DIO_vdtogglePin
  4417  000976  0E01               	movlw	1
  4418  000978  6E03               	movwf	(??_DIO_vdtogglePin+1)& (0+255),c
  4419  00097A  2A02               	incf	??_DIO_vdtogglePin,f,c
  4420  00097C  D003               	goto	i2u100_44
  4421  00097E                     i2u100_45:
  4422  00097E  FFFF               	dw	65535	; assembler added errata NOP
  4423  000980  90D8               	bcf	status,0,c
  4424  000982  3603               	rlcf	??_DIO_vdtogglePin+1,f,c
  4425  000984                     i2u100_44:
  4426  000984  FFFF               	dw	65535	; assembler added errata NOP
  4427  000986  2E02               	decfsz	??_DIO_vdtogglePin,f,c
  4428  000988  D7FA               	goto	i2u100_45
  4429  00098A  C04D  FFD9         	movff	_p_PORTDdata,fsr2l
  4430  00098E  C04E  FFDA         	movff	_p_PORTDdata+1,fsr2h
  4431  000992                     L6:
  4432  000992  FFFF               	dw	65535	; assembler added errata NOP
  4433  000994  5003               	movf	??_DIO_vdtogglePin+1,w,c
  4434  000996  1ADF               	xorwf	indf2,f,c
  4435                           
  4436                           ;DIO.c: 128:             break;
  4437  000998  D012               	goto	i2l157
  4438  00099A                     i2l1947:
  4439  00099A  FFFF               	dw	65535	; assembler added errata NOP
  4440  00099C  5004               	movf	DIO_vdtogglePin@port,w,c
  4441  00099E  6E02               	movwf	??_DIO_vdtogglePin& (0+255),c
  4442  0009A0  6A03               	clrf	(??_DIO_vdtogglePin+1)& (0+255),c
  4443                           
  4444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4445                           ; Switch size 1, requested type "simple"
  4446                           ; Number of cases is 1, Range of values is 0 to 0
  4447                           ; switch strategies available:
  4448                           ; Name         Instructions Cycles
  4449                           ; simple_byte            4     3 (average)
  4450                           ;	Chosen strategy is simple_byte
  4451  0009A2  5003               	movf	??_DIO_vdtogglePin+1,w,c
  4452  0009A4  0A00               	xorlw	0	; case 0
  4453  0009A6  A4D8               	btfss	status,2,c
  4454  0009A8  D00A               	goto	i2l157
  4455                           
  4456                           ; Switch size 1, requested type "simple"
  4457                           ; Number of cases is 3, Range of values is 65 to 68
  4458                           ; switch strategies available:
  4459                           ; Name         Instructions Cycles
  4460                           ; simple_byte           10     6 (average)
  4461                           ;	Chosen strategy is simple_byte
  4462  0009AA  5002               	movf	??_DIO_vdtogglePin,w,c
  4463  0009AC  0A41               	xorlw	65	; case 65
  4464  0009AE  B4D8               	btfsc	status,2,c
  4465  0009B0  D7BB               	goto	i2l1939
  4466  0009B2  0A03               	xorlw	3	; case 66
  4467  0009B4  B4D8               	btfsc	status,2,c
  4468  0009B6  D7CA               	goto	i2l1941
  4469  0009B8  0A06               	xorlw	6	; case 68
  4470  0009BA  B4D8               	btfsc	status,2,c
  4471  0009BC  D7D9               	goto	i2l1943
  4472  0009BE                     i2l157:
  4473  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  4474  0009C0  0012               	return		;funcret
  4475  0009C2  FFFF               	dw	65535	; errata NOP
  4476  0009C4                     __end_of_DIO_vdtogglePin:
  4477                           	opt callstack 0
  4478                           
  4479 ;; *************** function _int1_callback *****************
  4480 ;; Defined at:
  4481 ;;		line 119 in file "main.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4495 ;;      Params:         0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    1
  4502 ;; This function calls:
  4503 ;;		_TMR1_vdReset
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;;		_ISR
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text33
  4511  000EDC                     __ptext33:
  4512                           	opt callstack 0
  4513  000EDC                     _int1_callback:
  4514                           	opt callstack 0
  4515  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  4516                           
  4517                           ;main.c: 120:     if(!status2){
  4518                           
  4519                           ;incstack = 0
  4520  000EDE  5049               	movf	_status2,w,c	;volatile
  4521  000EE0  A4D8               	btfss	status,2,c
  4522  000EE2  D004               	goto	i2l522
  4523                           
  4524                           ;main.c: 121:         status2 = 1;
  4525  000EE4  0E01               	movlw	1
  4526  000EE6  6E49               	movwf	_status2,c	;volatile
  4527                           
  4528                           ;main.c: 122:         TMR1_vdReset();
  4529  000EE8  ECB2  F007         	call	_TMR1_vdReset	;wreg free
  4530  000EEC                     i2l522:
  4531  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  4532  000EEE  0012               	return		;funcret
  4533  000EF0  FFFF               	dw	65535	; errata NOP
  4534  000EF2                     __end_of_int1_callback:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function _TMR1_vdReset *****************
  4538 ;; Defined at:
  4539 ;;		line 50 in file "TMR1.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4553 ;;      Params:         0       0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_int1_callback
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text34
  4567  000F64                     __ptext34:
  4568                           	opt callstack 0
  4569  000F64                     _TMR1_vdReset:
  4570                           	opt callstack 0
  4571  000F64  FFFF               	dw	65535	; assembler added errata NOP
  4572                           
  4573                           ;TMR1.c: 51:     T1CONbits.TMR1ON = 0;
  4574                           
  4575                           ;incstack = 0
  4576  000F66  90CD               	bcf	4045,0,c	;volatile
  4577                           
  4578                           ;TMR1.c: 52:     TMR1L = initial;
  4579  000F68  C036  FFCE         	movff	TMR1@initial,4046	;volatile
  4580                           
  4581                           ;TMR1.c: 53:     TMR1H = (initial>>8);
  4582  000F6C  5037               	movf	TMR1@initial+1,w,c
  4583  000F6E  6ECF               	movwf	4047,c	;volatile
  4584                           
  4585                           ;TMR1.c: 54:     T1CONbits.TMR1ON = 1;
  4586  000F70  80CD               	bsf	4045,0,c	;volatile
  4587  000F72  0012               	return		;funcret
  4588  000F74  FFFF               	dw	65535	; errata NOP
  4589  000F76                     __end_of_TMR1_vdReset:
  4590                           	opt callstack 0
  4591                           
  4592 ;; *************** function _int0_callback *****************
  4593 ;; Defined at:
  4594 ;;		line 111 in file "main.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    1
  4615 ;; This function calls:
  4616 ;;		_TMR0_vdReset
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;;		_ISR
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text35
  4624  000EF2                     __ptext35:
  4625                           	opt callstack 0
  4626  000EF2                     _int0_callback:
  4627                           	opt callstack 0
  4628  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  4629                           
  4630                           ;main.c: 112:     if(!status1){
  4631                           
  4632                           ;incstack = 0
  4633  000EF4  504A               	movf	_status1,w,c	;volatile
  4634  000EF6  A4D8               	btfss	status,2,c
  4635  000EF8  D004               	goto	i2l518
  4636                           
  4637                           ;main.c: 113:         status1 = 1;
  4638  000EFA  0E01               	movlw	1
  4639  000EFC  6E4A               	movwf	_status1,c	;volatile
  4640                           
  4641                           ;main.c: 114:         TMR0_vdReset();
  4642  000EFE  EC84  F007         	call	_TMR0_vdReset	;wreg free
  4643  000F02                     i2l518:
  4644  000F02  FFFF               	dw	65535	; assembler added errata NOP
  4645  000F04  0012               	return		;funcret
  4646  000F06  FFFF               	dw	65535	; errata NOP
  4647  000F08                     __end_of_int0_callback:
  4648                           	opt callstack 0
  4649                           
  4650 ;; *************** function _TMR0_vdReset *****************
  4651 ;; Defined at:
  4652 ;;		line 58 in file "TMR0.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4666 ;;      Params:         0       0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_int0_callback
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text36
  4680  000F08                     __ptext36:
  4681                           	opt callstack 0
  4682  000F08                     _TMR0_vdReset:
  4683                           	opt callstack 0
  4684  000F08  FFFF               	dw	65535	; assembler added errata NOP
  4685                           
  4686                           ;TMR0.c: 59:     T0CONbits.TMR0ON = 0;
  4687                           
  4688                           ;incstack = 0
  4689  000F0A  9ED5               	bcf	4053,7,c	;volatile
  4690                           
  4691                           ;TMR0.c: 60:     TMR0L = initial;
  4692  000F0C  C038  FFD6         	movff	_initial,4054	;volatile
  4693                           
  4694                           ;TMR0.c: 61:     TMR0H = (initial>>8);
  4695  000F10  5039               	movf	_initial+1,w,c
  4696  000F12  6ED7               	movwf	4055,c	;volatile
  4697                           
  4698                           ;TMR0.c: 62:     T0CONbits.TMR0ON = 1;
  4699  000F14  8ED5               	bsf	4053,7,c	;volatile
  4700  000F16  0012               	return		;funcret
  4701  000F18  FFFF               	dw	65535	; errata NOP
  4702  000F1A                     __end_of_TMR0_vdReset:
  4703                           	opt callstack 0
  4704  000F1A  FFFF               	dw	65535	; assembler added errata NOP
  4705                           
  4706                           	psect	text37
  4707  000000                     __ptext37:
  4708                           	opt callstack 0
  4709                           
  4710                           	psect	rparam
  4711  0000                     
  4712                           	psect	temp
  4713  000069                     btemp:
  4714                           	opt callstack 0
  4715  000069                     	ds	1
  4716  0000                     int$flags	set	btemp
  4717  0000                     wtemp8	set	btemp+1
  4718  0000                     ttemp5	set	btemp+1
  4719  0000                     ttemp6	set	btemp+4
  4720  0000                     ttemp7	set	btemp+8
  4721                           tosu	equ	0xFFF
  4722                           tosh	equ	0xFFE
  4723                           tosl	equ	0xFFD
  4724                           stkptr	equ	0xFFC
  4725                           pclatu	equ	0xFFB
  4726                           pclath	equ	0xFFA
  4727                           pcl	equ	0xFF9
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodh	equ	0xFF4
  4733                           prodl	equ	0xFF3
  4734                           indf0	equ	0xFEF
  4735                           postinc0	equ	0xFEE
  4736                           postdec0	equ	0xFED
  4737                           preinc0	equ	0xFEC
  4738                           plusw0	equ	0xFEB
  4739                           fsr0h	equ	0xFEA
  4740                           fsr0l	equ	0xFE9
  4741                           wreg	equ	0xFE8
  4742                           indf1	equ	0xFE7
  4743                           postinc1	equ	0xFE6
  4744                           postdec1	equ	0xFE5
  4745                           preinc1	equ	0xFE4
  4746                           plusw1	equ	0xFE3
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           bsr	equ	0xFE0
  4750                           indf2	equ	0xFDF
  4751                           postinc2	equ	0xFDE
  4752                           postdec2	equ	0xFDD
  4753                           preinc2	equ	0xFDC
  4754                           plusw2	equ	0xFDB
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     41     104
    BANK0           128     19      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LED_vdSetStatus@led	PTR struct . size(2) Largest target is 7
		 -> LED2(COMRAM[7]), LED1(COMRAM[7]), 

    LED_vdtoggle@led	PTR struct . size(2) Largest target is 7
		 -> LED3(BANK0[7]), 

    callback_CCP1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetTMR1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr1_callback(), 

    callback_TMR1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr1_callback(), 

    INT_vdSetTMR0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> tmr0_callback(), 

    callback_TMR0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), tmr0_callback(), 

    callback_INTonChange	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_vdSetINT2Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int2_callback(), 

    callback_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int2_callback(), 

    INT_vdSetINT1Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int1_callback(), 

    callback_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int1_callback(), 

    INT_vdSetINT0Callback@pf	PTR FTN()void  size(2) Largest target is 1
		 -> int0_callback(), 

    callback_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), int0_callback(), 

    DIO_vdInit@dev	PTR struct . size(2) Largest target is 7
		 -> BTN3(BANK0[7]), BTN2(BANK0[7]), BTN1(BANK0[7]), LED3(BANK0[7]), 
		 -> LED2(COMRAM[7]), LED1(COMRAM[7]), 

    p_PORTDdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTDdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    _main->_UART_vdSendu16asASCI
    _UART_vdSendu8asASCI->___awdiv
    _UART_vdSendu16asASCI->___lwdiv
    ___lwdiv->___wmul
    _UART_vdInit->___aldiv
    _LED_vdSetStatus->_DIO_vdWritePin
    _DIO_vdInit->_DIO_vdWriteDirPin

Critical Paths under _ISR in COMRAM

    _int2_callback->_LED_vdtoggle
    _LED_vdtoggle->_DIO_vdtogglePin

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   10340
                                             33 COMRAM     8     8      0
                                              0 BANK0     19    19      0
                    _ADC_u16getValue
                         _ADC_vdInit
                         _DIO_vdInit
              _INT_vdSetINT0Callback
              _INT_vdSetINT1Callback
              _INT_vdSetINT2Callback
              _INT_vdSetTMR0Callback
              _INT_vdSetTMR1Callback
                         _INT_vdinit
                    _LED_vdSetStatus
                        _TMR0_vdInit
                        _TMR0_vdStop
                        _TMR1_vdInit
                        _TMR1_vdStop
                        _UART_vdInit
                    _UART_vdSendByte
               _UART_vdSendu16asASCI
                _UART_vdSendu8asASCI
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     412
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu8asASCI                                  6     6      0    1947
                                             18 COMRAM     6     6      0
                    _UART_vdSendByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu16asASCI                                10     8      2    2062
                                             23 COMRAM    10     8      2
                    _UART_vdSendByte
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     601
                                             16 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_vdSendByte                                      1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_vdInit                                          2     0      2     746
                                             24 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                             10 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_vdInit                                          8     3      5     484
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdStop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_vdInit                                          8     3      5     515
                                             10 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LED_vdSetStatus                                      3     0      3    1396
                                             16 COMRAM     3     0      3
                     _DIO_vdWritePin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWritePin                                       6     4      2     943
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetTMR1Callback                                2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetTMR0Callback                                2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT2Callback                                2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT1Callback                                2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _INT_vdSetINT0Callback                                2     0      2     121
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DIO_vdInit                                           2     0      2    1216
                                             15 COMRAM     2     0      2
                  _DIO_vdWriteDirPin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWriteDirPin                                    5     3      2     583
                                             10 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_vdInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_u16getValue                                      7     5      2      96
                                             10 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     284
                                              6 COMRAM     4     4      0
                   Absolute function *
                      _int0_callback *
                      _int1_callback *
                      _int2_callback *
                      _tmr0_callback *
                      _tmr1_callback *
 ---------------------------------------------------------------------------------
 (4) _tmr1_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _tmr0_callback                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int2_callback                                        0     0      0     284
                       _LED_vdtoggle
 ---------------------------------------------------------------------------------
 (5) _LED_vdtoggle                                         2     0      2     284
                                              4 COMRAM     2     0      2
                    _DIO_vdtogglePin
 ---------------------------------------------------------------------------------
 (6) _DIO_vdtogglePin                                      4     3      1     164
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) _int1_callback                                        0     0      0       0
                       _TMR1_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR1_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _int0_callback                                        0     0      0       0
                       _TMR0_vdReset
 ---------------------------------------------------------------------------------
 (5) _TMR0_vdReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_u16getValue
   _ADC_vdInit
   _DIO_vdInit
     _DIO_vdWriteDirPin
   _INT_vdSetINT0Callback
   _INT_vdSetINT1Callback
   _INT_vdSetINT2Callback
   _INT_vdSetTMR0Callback
   _INT_vdSetTMR1Callback
   _INT_vdinit
   _LED_vdSetStatus
     _DIO_vdWritePin
   _TMR0_vdInit
   _TMR0_vdStop
   _TMR1_vdInit
   _TMR1_vdStop
   _UART_vdInit
     ___aldiv
   _UART_vdSendByte
   _UART_vdSendu16asASCI
     _UART_vdSendByte
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
   _UART_vdSendu8asASCI
     _UART_vdSendByte
     ___awdiv
     ___awmod
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _ISR (ROOT)
   Absolute function(Fake) *
   _int0_callback *
     _TMR0_vdReset
   _int1_callback *
     _TMR1_vdReset
   _int2_callback *
     _LED_vdtoggle
       _DIO_vdtogglePin
   _tmr0_callback *
   _tmr1_callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     13      37       5       43.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     29      68       1       82.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      15        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Dec 29 16:43:03 2019

                                            _DIO_vdWritePin 03A8  
                                               ?_DIO_vdInit 0010  
                                                        l36 0C4C  
                                        ADC_u16getValue@pin 0011  
                                     UART_vdSendu16asASCI@i 001C  
                                              ___awdiv@sign 0010  
                                      _callback_INTonChange 0040  
                                                        _x1 0032  
                                                        _x2 002E  
                                                        _x3 002A  
                                               __CFG_BOR$ON 000000  
                                         _DIO_vdWriteDirPin 052E  
                                       ___wmul@multiplicand 000D  
                                              __CFG_CP0$OFF 000000  
                                              __CFG_CP1$OFF 000000  
                                              __CFG_CP2$OFF 000000  
                                              __CFG_CP3$OFF 000000  
                                               __CFG_OSC$XT 000000  
                                        ?_DIO_vdWriteDirPin 000B  
                                       ADC_u16getValue@data 000F  
                                                       l115 0528  
                                                       l132 067E  
                                                       l301 08D6  
                                                       l303 08DC  
                                                       l332 0B6C  
                                                       l406 078E  
                                                       l327 0AFA  
                                                       l328 0B24  
                                                       l329 0B00  
                                                       l293 087A  
                                                       l295 0880  
                                                       l391 0A56  
                                                       l297 08A6  
                                                       l298 08D0  
                                                       l299 08AC  
                                              __CFG_CPB$OFF 000000  
                                              __CFG_CPD$OFF 000000  
                                                       _ISR 0008  
                                              __CFG_BORV$20 000000  
                                              ___awmod@sign 0010  
                                                       tosl 000FFD  
                                                       wreg 000FE8  
                                       ??_DIO_vdWriteDirPin 000D  
                                       __size_of_ADC_vdInit 0018  
                                              __CFG_LVP$OFF 000000  
                                                      ?_ISR 0001  
                                              __CFG_WDT$OFF 000000  
                                                      l1025 0D2E  
                                                      l1035 0D7E  
                                                      l3015 0340  
                                                      l3007 02CC  
                                                      l2531 0534  
                                                      l2541 05A2  
                                                      l2621 07F0  
                                                      l2701 0BA4  
                                                      l2543 05C4  
                                                      l2535 055A  
                                                      l2623 07FE  
                                                      l2615 07CC  
                                                      l2553 0632  
                                                      l2537 057C  
                                                      l2641 085E  
                                                      l2633 0836  
                                                      l2609 07B2  
                                                      l2721 0BF6  
                                                      l2713 0BDA  
                                                      l2705 0BB4  
                                                      l2547 05EA  
                                                      l2571 0402  
                                                      l2731 0CF4  
                                                      l2707 0BBE  
                                                      l2549 060C  
                                                      l2557 0654  
                                                      l2581 047C  
                                                      l2565 03AE  
                                                      l2813 08E2  
                                                      l2805 0886  
                                                      l2637 0846  
                                                      l2733 0CFE  
                                                      l2653 0A72  
                                                      l2717 0BE6  
                                                      l2901 0A28  
                                                      l2583 049E  
                                                      l2575 042C  
                                                      l2591 04FE  
                                                      l2815 0900  
                                                      l2743 0D22  
                                                      l2751 0D4C  
                                                      l2903 0A3C  
                                                      l2577 0456  
                                                      l2569 03D8  
                                                      l2809 08B2  
                                                      l2753 0D56  
                                                      l2913 0692  
                                                      l2665 0A9C  
                                                      l2681 0AD6  
                                                      l2587 04CE  
                                                      l2851 0B4E  
                                                      l2843 0B06  
                                                      l2667 0AA6  
                                                      l2659 0A84  
                                                      l2845 0B32  
                                                      l2597 0F20  
                                                      l2933 0704  
                                                      l2941 0764  
                                                      l2685 0AE6  
                                                      l2677 0ACA  
                                                      l2847 0B3A  
                                                      l2759 0D72  
                                                      l2935 0710  
                                                      l2937 0724  
                                                      l2697 0B96  
                                                      l2939 0740  
                                                      l2887 09D0  
                                                      l2991 01D2  
                                                      _ADIF 007CF6  
                                                      _BTN1 008E  
                                                      _LED1 0062  
                                                      _BRGH 007D62  
                                                      _BTN2 0087  
                                                      _LED2 005B  
                                                      _LED3 0095  
                                                      _BTN3 0080  
                                                      u2004 0490  
                                                      u2005 048A  
                                                      u2024 04B8  
                                                      u2200 0BC4  
                                                      u2025 04B2  
                                                      u2034 04E2  
                                                      u2035 04DC  
                                                      u2140 0AAC  
                                                      u2080 0804  
                                                      u2240 0D04  
                                                      u2315 0B2E  
                                                      u2316 0B30  
                                                      u2420 02C4  
                                                      u2270 0D5C  
                                                      u2430 02C8  
                                                      u2450 0338  
                                                      u2460 033C  
                                                      u2294 0C2E  
                                                      u1814 054E  
                                                      u2295 0C28  
                                                      u1815 0548  
                                                      u1904 0626  
                                                      u1824 056E  
                                                      u1905 0620  
                                                      u1825 0568  
                                                      u1914 0646  
                                                      u1915 0640  
                                                      u1844 0596  
                                                      u1845 0590  
                                                      u2477 039A  
                                                      u1854 05B6  
                                                      u1934 03C8  
                                                      u2487 0C3E  
                                                      u1855 05B0  
                                                      u1935 03C2  
                                                      u1944 03EC  
                                                      u1945 03E6  
                                                      u1874 05DE  
                                                      u1875 05D8  
                                                      _PEIE 007F96  
                                                      u1884 05FE  
                                                      u1964 041C  
                                                      u1885 05F8  
                                                      u1965 0416  
                                                      u1974 0440  
                                                      u1975 043A  
                                                      _RBIF 007F90  
                                                      u1994 0470  
                                                      u1995 046A  
                              __end_of_UART_vdSendu16asASCI 0794  
                                                      _TXIF 007CF4  
                                               main@input_T 00A4  
                                              __CFG_STVR$ON 000000  
                                               main@x_max16 00A6  
                               __end_of_UART_vdSendu8asASCI 0A5C  
                                                      _main 00FC  
                                                      fsr2h 000FDA  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      btemp 0069  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 00F8  
                                    __end_of_DIO_vdWritePin 052E  
                                              ___param_bank 000000  
                                           LED_vdtoggle@led 0005  
                                 __end_of_DIO_vdWriteDirPin 0684  
                                                     ??_ISR 0007  
                                             __CFG_OSCS$OFF 000000  
                                           ??_int0_callback 0001  
                                               ?_INT_vdinit 0001  
                                           __end_of___aldiv 0874  
                                           _ADC_u16getValue 0C04  
                                                     ?_main 0001  
                                           __end_of___awdiv 0AF4  
                                     _INT_vdSetTMR0Callback 0F84  
                                           __end_of___awmod 0C04  
                                           ___awdiv@divisor 000D  
                                           __end_of___lwdiv 0D3C  
                                           __end_of___lwmod 0D8C  
                                                     i2l157 09BE  
                                                     i2l522 0EEC  
                                                     i2l518 0F02  
                                           ___awdiv@counter 000F  
                                     _INT_vdSetTMR1Callback 0F76  
                                           ??_int1_callback 0001  
                                                     _TMR0H 000FD7  
                                                     _TMR1H 000FCF  
                                                     _TMR0L 000FD6  
                                                     _TMR1L 000FCE  
                                                     _SPBRG 000FAF  
                                                     _TRISA 000F92  
                                          ?_LED_vdSetStatus 0011  
                                                     _TXREG 000FAD  
                                             __CFG_PWRT$OFF 000000  
                                             __CFG_WRT0$OFF 000000  
                                             __CFG_WRT1$OFF 000000  
                                             __CFG_WRT2$OFF 000000  
                                             __CFG_WRT3$OFF 000000  
                                  UART_vdSendu16asASCI@data 0018  
                                            __CFG_EBTR0$OFF 000000  
                                            __CFG_EBTR1$OFF 000000  
                                            __CFG_EBTR2$OFF 000000  
                                            __CFG_EBTR3$OFF 000000  
                                           ??_int2_callback 0007  
                                     __end_of_tmr0_callback 0F52  
                                           _UART_vdSendByte 0F1C  
                                  UART_vdSendu16asASCI@temp 001D  
                                             __CFG_WRTB$OFF 000000  
                                             __CFG_WRTC$OFF 000000  
                                             __CFG_WRTD$OFF 000000  
                                            __CFG_EBTRB$OFF 000000  
                                     __end_of_tmr1_callback 0F40  
                                                     main@T 00AE  
                                       __size_of_DIO_vdInit 0034  
                                                     pclath 000FFA  
                                                     tablat 000FF5  
                                           _DIO_vdtogglePin 0922  
                                        LED_vdSetStatus@led 0011  
                                                     ttemp5 006A  
                                                     ttemp6 006D  
                                                     ttemp7 0071  
                                                     status 000FD8  
                                                     wtemp8 006A  
                                      UART_vdSendu8asASCI@i 0018  
                                          _p_PORTAdirection 0057  
                                           ?_DIO_vdWritePin 000B  
                                   ??_INT_vdSetINT0Callback 000D  
                                          _p_PORTBdirection 0053  
                                           __initialization 0C76  
                                   ??_INT_vdSetINT1Callback 000D  
                                              __end_of_main 03A8  
                                   ??_INT_vdSetINT2Callback 000D  
                                          _p_PORTCdirection 004F  
                                          _p_PORTDdirection 004B  
                                                    ??_main 0022  
                                             ?_LED_vdtoggle 0005  
                                             __activetblptr 000002  
                                      TMR1_vdInit@prescaler 000C  
                                           __CFG_CCP2MUX$ON 000000  
                                                    _CCP1IF 007CF2  
                                                    _ADRESH 000FC4  
                                                    _ADRESL 000FC3  
                                          ___awdiv@dividend 000B  
                                                    _INT0IF 007F91  
                                                    _INT1IF 007F80  
                                                    _INT2IF 007F81  
                                                    i2l2401 0066  
                                                    i2l2421 00DC  
                                                    i2l2415 00B6  
                                                    i2l2407 008C  
                                                    i2l2395 0040  
                                                    i2l1941 094C  
                                                    i2l1943 0970  
                                                    i2l1939 0928  
                                                    i2l1947 099A  
                                                    _TMR0IF 007F92  
                                                    _TMR1IF 007CF0  
                                            __CFG_WDTPS$128 000000  
                                                    _TRISC6 007CA6  
                                       __size_of_INT_vdinit 0020  
                                              ??_ADC_vdInit 000B  
                                   __end_of_ADC_u16getValue 0C76  
                                __size_of_DIO_vdWriteDirPin 0156  
                                                 ??___aldiv 0013  
                                                    ___wmul 0DF4  
                                                 ??___awdiv 000F  
                                                 ??___awmod 000F  
                                              ?_UART_vdInit 0019  
                                                 ??___lwdiv 0015  
                                                 ??___lwmod 000F  
                                                    clear_0 0CBC  
                                                    clear_1 0CC8  
                                    ?_INT_vdSetTMR0Callback 000B  
                                          ___awdiv@quotient 0011  
                                           ___awmod@divisor 000D  
                                              ?_TMR0_vdInit 000B  
                                   __end_of_UART_vdSendByte 0F2E  
                                           ___awmod@counter 000F  
                                      _UART_vdSendu16asASCI 0684  
                                            ??_LED_vdtoggle 0007  
                                    ?_INT_vdSetTMR1Callback 000B  
                                              ?_TMR0_vdStop 0001  
                                              ?_TMR1_vdInit 000B  
                                              ?_TMR1_vdStop 0001  
                                              __pdataCOMRAM 004B  
                                   __end_of_DIO_vdtogglePin 09C4  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                             DIO_vdInit@dev 0010  
                                        __end_of_ADC_vdInit 0EDC  
                                                __accesstop 0080  
                                   __end_of__initialization 0CCE  
                                           UART_vdInit@baud 0019  
                                             ___rparam_used 000001  
                                   INT_vdSetTMR0Callback@pf 000B  
                                            __pcstackCOMRAM 0001  
                                              ??_DIO_vdInit 0012  
                                              __pidataBANK0 0EA8  
                                     ?_UART_vdSendu16asASCI 0018  
                                   INT_vdSetTMR1Callback@pf 000B  
                                                __pbssBANK0 00AF  
                                        __end_of_DIO_vdInit 0DF4  
                                          ?_ADC_u16getValue 000B  
                                                   ?___wmul 000B  
                                              ??_INT_vdinit 000B  
                                          ?_UART_vdSendByte 0001  
                                         DIO_vdWritePin@pin 000C  
                                          ?_DIO_vdtogglePin 0001  
                                                   i2u98_44 093C  
                                                   i2u98_45 0936  
                                                   i2u99_44 0960  
                                                   i2u99_45 095A  
                                          ??_DIO_vdWritePin 000D  
                                      __end_of_LED_vdtoggle 0E6A  
                                        __end_of_INT_vdinit 0E8A  
                                                   __Hparam 0000  
                                                   __Lparam 0000  
                              __size_of_UART_vdSendu8asASCI 0098  
                            __size_of_INT_vdSetINT0Callback 000E  
                                                   ___aldiv 0794  
                             __end_of_INT_vdSetINT0Callback 0FBC  
                                                   ___awdiv 0A5C  
                                                   ___awmod 0B80  
                                           __size_of___wmul 002A  
                            __size_of_INT_vdSetINT1Callback 000E  
                                                   ___lwdiv 0CDC  
                                    ??_UART_vdSendu16asASCI 001A  
                                               TMR1@initial 0036  
                                                   ___lwmod 0D3C  
                             __end_of_INT_vdSetINT1Callback 0FAE  
                            __size_of_INT_vdSetINT2Callback 000E  
                             __end_of_INT_vdSetINT2Callback 0FA0  
                                                   __pcinit 0C76  
                                                   __ramtop 0600  
                                      __size_of_UART_vdInit 0034  
                                                   __ptext0 00FC  
                                                   __ptext1 0DF4  
                                                   __ptext2 09C4  
                                                   __ptext3 0B80  
                                                   __ptext4 0A5C  
                                                   __ptext5 0684  
                                                   __ptext6 0D3C  
                                                   __ptext7 0CDC  
                                                   __ptext8 0F1C  
                                                   __ptext9 0D8C  
                                             _callback_CCP1 003A  
                                             _callback_INT0 0046  
                                             _callback_INT1 0044  
                                             _callback_INT2 0042  
                                                 _T0CONbits 000FD5  
                                             _callback_TMR0 003E  
                                             _callback_TMR1 003C  
                                              __size_of_ISR 00F0  
                                     __end_of_int0_callback 0F08  
                                                 _T1CONbits 000FCD  
                                                   _initial 0038  
                                      __size_of_TMR0_vdInit 00AE  
                                          ___awmod@dividend 000B  
                                      __size_of_TMR0_vdStop 0008  
                                      __size_of_TMR1_vdInit 008C  
                                          ___aldiv@dividend 000B  
                                      __size_of_TMR1_vdStop 0008  
                                     __end_of_int1_callback 0EF2  
                                             ?_TMR0_vdReset 0001  
                                                   _status1 004A  
                                                   _status2 0049  
                                                   _status3 0048  
                                     __end_of_int2_callback 0F64  
                                             ?_TMR1_vdReset 0001  
                                      end_of_initialization 0CCE  
                                  __size_of_LED_vdSetStatus 0028  
                                             __Lmediumconst 0000  
                                                 _BTNstatus 00AF  
                                                 _RCSTAbits 000FAB  
                                          ___aldiv@quotient 0015  
                                   ??_INT_vdSetTMR0Callback 000D  
                                                   postdec1 000FE5  
                                    __size_of_tmr0_callback 0012  
                                                   postinc0 000FEE  
                                   ??_INT_vdSetTMR1Callback 000D  
                                    __size_of_tmr1_callback 0012  
                                        DIO_vdtogglePin@pin 0001  
                                TMR1_vdInit@prescaler_value 000D  
                                            ??_TMR0_vdReset 0001  
                                       UART_vdSendByte@data 000B  
                                            ??_TMR1_vdReset 0001  
                                                 _TXSTAbits 000FAC  
                                                main@x_max8 009C  
                                           TMR0_vdInit@bits 000B  
                                           TMR0_vdInit@init 000E  
                                           TMR0_vdInit@mode 0012  
                                            __end_of___wmul 0E1E  
                                     DIO_vdWriteDirPin@data 000F  
                                             __pidataCOMRAM 0E8A  
                                     DIO_vdWriteDirPin@port 000B  
                                   INT_vdSetINT0Callback@pf 000B  
                                       start_initialization 0C76  
                                               __end_of_ISR 00F8  
                                             _tmr0_callback 0F40  
                                     __size_of_LED_vdtoggle 0024  
                                             _tmr1_callback 0F2E  
                                   INT_vdSetINT1Callback@pf 000B  
                                           TMR1_vdInit@bits 000B  
                                               _p_PORTAdata 0059  
                                               _p_PORTBdata 0055  
                                               _p_PORTCdata 0051  
                                           TMR1_vdInit@init 000E  
                                               _p_PORTDdata 004D  
                                           TMR1_vdInit@mode 0012  
                                         ??_LED_vdSetStatus 0014  
                                                  ??___wmul 000F  
                                               __pdataBANK0 0080  
                                   INT_vdSetINT2Callback@pf 000B  
                                              _LED_vdtoggle 0E46  
                                               __pbssCOMRAM 002A  
                                             __pcstackBANK0 009C  
                                            ?_tmr0_callback 0001  
                                       _UART_vdSendu8asASCI 09C4  
                                            ?_tmr1_callback 0001  
                                          ___lwdiv@dividend 0011  
                                      __end_of_TMR0_vdReset 0F1A  
                                                 __pintcode 0008  
                                      ?_UART_vdSendu8asASCI 0001  
                                                  ?___aldiv 000B  
                                                  ?___awdiv 000B  
                                                  ?___awmod 000B  
                                      __end_of_TMR1_vdReset 0F76  
                                                  ?___lwdiv 0011  
                                                  ?___lwmod 000B  
                                  __size_of_ADC_u16getValue 0072  
                                          ___lwdiv@quotient 0016  
                                  __size_of_UART_vdSendByte 0012  
                                        DIO_vdWritePin@data 0010  
                                        DIO_vdWritePin@port 000B  
                                           ___aldiv@divisor 000F  
                                           ___aldiv@counter 0013  
                                            ___wmul@product 000F  
                                  __size_of_DIO_vdtogglePin 00A2  
                                                  _IPR1bits 000F9F  
                                                  _PIE1bits 000F9D  
                                                  i2u100_44 0984  
                                                  i2u100_45 097E  
                                                  i2u170_48 009A  
                                                  i2u170_49 00B2  
                                                  i2u163_48 0024  
                                                  i2u163_49 003C  
                                                  i2u172_48 00C0  
                                                  i2u172_49 00D8  
                                                  i2u165_48 004A  
                                                  i2u165_49 0062  
                                                  i2u167_48 0070  
                                                  i2u167_49 0088  
                                     ??_UART_vdSendu8asASCI 0013  
                                             ??_UART_vdInit 001B  
                            __size_of_INT_vdSetTMR0Callback 000E  
                             __end_of_INT_vdSetTMR0Callback 0F92  
                            __size_of_INT_vdSetTMR1Callback 000E  
                                     _INT_vdSetINT0Callback 0FAE  
                                             ??_TMR0_vdInit 0010  
                             __end_of_INT_vdSetTMR1Callback 0F84  
                                             ??_TMR0_vdStop 000B  
                                             ??_TMR1_vdInit 0010  
                             __size_of_UART_vdSendu16asASCI 0110  
                                                _ADCON0bits 000FC2  
                                                _ADCON1bits 000FC1  
                                             ??_TMR1_vdStop 000B  
                                     _INT_vdSetINT1Callback 0FA0  
                                         ___wmul@multiplier 000B  
                                     _INT_vdSetINT2Callback 0F92  
                                           ??_tmr0_callback 0001  
                                           ??_tmr1_callback 0001  
                                               _INTCON1bits 000FF2  
                                               _INTCON2bits 000FF1  
                                               _INTCON3bits 000FF0  
                                      DIO_vdWriteDirPin@pin 000C  
                                                 copy_data0 0C8A  
                                                 copy_data1 0CAA  
                                 UART_vdSendu16asASCI@temp2 001A  
                                    __size_of_int0_callback 0016  
                                                  __Hrparam 0000  
                                                  __Lrparam 0000  
                                                _ADC_vdInit 0EC4  
                                    __size_of_int1_callback 0016  
                                   __size_of_DIO_vdWritePin 0186  
                                          __size_of___aldiv 00E0  
                                          __size_of___awdiv 0098  
                                          __size_of___awmod 0084  
                                    __size_of_int2_callback 0012  
                                          __size_of___lwdiv 0060  
                                          __size_of___lwmod 0050  
                                TMR0_vdInit@prescaler_value 000D  
                                       __end_of_UART_vdInit 0DC0  
                                           ___lwdiv@divisor 0013  
                                       __end_of_TMR0_vdInit 0922  
                                           ___lwdiv@counter 0015  
                                       __end_of_TMR0_vdStop 0FCC  
                                       __end_of_TMR1_vdInit 0B80  
                                                  __ptext10 0794  
                                                  __ptext11 0FBC  
                                                  __ptext20 0F92  
                                                  __ptext12 0AF4  
                                                  __ptext21 0FA0  
                                                  __ptext13 0FC4  
                                                  __ptext30 0F52  
                                                  __ptext22 0FAE  
                                                  __ptext14 0874  
                                                  __ptext31 0E46  
                                                  __ptext23 0DC0  
                                                  __ptext15 0E1E  
                                                  __ptext32 0922  
                                                  __ptext24 052E  
                                                  __ptext16 03A8  
                                                  __ptext33 0EDC  
                                                  __ptext25 0EC4  
                                                  __ptext17 0E6A  
                                                  __ptext34 0F64  
                                                  __ptext26 0C04  
                                                  __ptext18 0F76  
                                                  __ptext35 0EF2  
                                                  __ptext19 0F84  
                                                  __ptext36 0F08  
                                                  __ptext28 0F2E  
                                                  __ptext37 0000  
                                                  __ptext29 0F40  
                                       __end_of_TMR1_vdStop 0FC4  
                                         ??_ADC_u16getValue 000D  
                                           _LED_vdSetStatus 0E1E  
                                             __size_of_main 02AC  
                                     __size_of_TMR0_vdReset 0012  
                                         ??_UART_vdSendByte 000B  
                                     __size_of_TMR1_vdReset 0012  
                                         ??_DIO_vdtogglePin 0002  
                                                _DIO_vdInit 0DC0  
                                                  int$flags 0069  
                                    ?_INT_vdSetINT0Callback 000B  
                                    ?_INT_vdSetINT1Callback 000B  
                                    ?_INT_vdSetINT2Callback 000B  
                                             _int0_callback 0EF2  
                                             _int1_callback 0EDC  
                                              _TMR0_vdReset 0F08  
                                              _TMR1_vdReset 0F64  
                                             _int2_callback 0F52  
                                                  intlevel2 0FCC  
                                          ___lwmod@dividend 000B  
                                               ?_ADC_vdInit 0001  
                                     LED_vdSetStatus@status 0013  
                                               _UART_vdInit 0D8C  
                                                _INT_vdinit 0E6A  
                                               _TMR0_vdInit 0874  
                                               _TMR0_vdStop 0FC4  
                                               _TMR1_vdInit 0AF4  
                                               _TMR1_vdStop 0FBC  
                                            ?_int0_callback 0001  
                                   __end_of_LED_vdSetStatus 0E46  
                                           ___lwmod@divisor 000D  
                                           ___lwmod@counter 000F  
                                            ?_int1_callback 0001  
                                              ___aldiv@sign 0014  
                                  UART_vdSendu8asASCI@temp2 0014  
                                       DIO_vdtogglePin@port 0004  
                                            ?_int2_callback 0001  
                                   UART_vdSendu8asASCI@data 0013  
                                   UART_vdSendu8asASCI@temp 0015  
                                      TMR0_vdInit@prescaler 000C  
