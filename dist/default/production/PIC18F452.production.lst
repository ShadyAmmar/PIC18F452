

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 24 16:28:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F452 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000540                     __pidataCOMRAM:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for _freq_PWM
    67  000540  A120               	dw	41248
    68  000542  0007               	dw	7
    69                           
    70                           ;initializer for _p_PORTDdirection
    71  000544  95                 	db	149
    72  000545  0F                 	db	15
    73                           
    74                           ;initializer for _p_PORTDdata
    75  000546  83                 	db	131
    76  000547  0F                 	db	15
    77                           
    78                           ;initializer for _p_PORTCdirection
    79  000548  94                 	db	148
    80  000549  0F                 	db	15
    81                           
    82                           ;initializer for _p_PORTCdata
    83  00054A  82                 	db	130
    84  00054B  0F                 	db	15
    85                           
    86                           ;initializer for _p_PORTBdirection
    87  00054C  93                 	db	147
    88  00054D  0F                 	db	15
    89                           
    90                           ;initializer for _p_PORTBdata
    91  00054E  81                 	db	129
    92  00054F  0F                 	db	15
    93                           
    94                           ;initializer for _p_PORTAdirection
    95  000550  92                 	db	146
    96  000551  0F                 	db	15
    97                           
    98                           ;initializer for _p_PORTAdata
    99  000552  80                 	db	128
   100  000553  0F                 	db	15
   101                           
   102                           ;initializer for _prescaler_TMR2
   103  000554  01                 	db	1
   104                           
   105                           ;initializer for _BTN0
   106  000555  41                 	db	65
   107  000556  04                 	db	4
   108  000557  01                 	db	1
   109  000558  00                 	db	0
   110  000559  00                 	db	0
   111  00055A  00                 	db	0
   112  00055B  00                 	db	0
   113                           
   114                           ;initializer for _LED3
   115  00055C  43                 	db	67
   116  00055D  02                 	db	2
   117  00055E  00                 	db	0
   118  00055F  00                 	db	0
   119  000560  00                 	db	0
   120  000561  00                 	db	0
   121  000562  00                 	db	0
   122                           
   123                           ;initializer for _LED2
   124  000563  42                 	db	66
   125  000564  02                 	db	2
   126  000565  00                 	db	0
   127  000566  00                 	db	0
   128  000567  00                 	db	0
   129  000568  00                 	db	0
   130  000569  00                 	db	0
   131                           
   132                           ;initializer for _LED1
   133  00056A  42                 	db	66
   134  00056B  01                 	db	1
   135  00056C  00                 	db	0
   136  00056D  00                 	db	0
   137  00056E  00                 	db	0
   138  00056F  00                 	db	0
   139  000570  00                 	db	0
   140                           
   141                           ;initializer for _LED0
   142  000571  42                 	db	66
   143  000572  00                 	db	0
   144  000573  00                 	db	0
   145  000574  00                 	db	0
   146  000575  00                 	db	0
   147  000576  00                 	db	0
   148  000577  00                 	db	0
   149  0000                     _TXREG	set	4013
   150  0000                     _RCSTAbits	set	4011
   151  0000                     _TXSTAbits	set	4012
   152  0000                     _SPBRG	set	4015
   153  0000                     _ADRESL	set	4035
   154  0000                     _ADRESH	set	4036
   155  0000                     _TRISA	set	3986
   156  0000                     _ADCON0bits	set	4034
   157  0000                     _ADCON1bits	set	4033
   158  0000                     _T1CONbits	set	4045
   159  0000                     _CCPR1H	set	4031
   160  0000                     _CCPR1L	set	4030
   161  0000                     _T2CONbits	set	4042
   162  0000                     _PR2	set	4043
   163  0000                     _TRISCbits	set	3988
   164  0000                     _T3CONbits	set	4017
   165  0000                     _CCP1CONbits	set	4029
   166  0000                     _T0CONbits	set	4053
   167  0000                     _INTCON2bits	set	4081
   168  0000                     _INTCON3bits	set	4080
   169  0000                     _INTCON1bits	set	4082
   170  0000                     _TXIF	set	31988
   171  0000                     _TRISC6	set	31910
   172  0000                     _BRGH	set	32098
   173  0000                     _ADIF	set	31990
   174  0000                     _CCP1IF	set	31986
   175  0000                     _TMR0IF	set	32658
   176  0000                     _RBIF	set	32656
   177  0000                     _INT2IF	set	32641
   178  0000                     _INT1IF	set	32640
   179  0000                     _INT0IF	set	32657
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  000506                     __pcinit:
   185                           	opt callstack 0
   186  000506                     start_initialization:
   187                           	opt callstack 0
   188  000506                     __initialization:
   189                           	opt callstack 0
   190                           
   191                           ; Initialize objects allocated to COMRAM (56 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193  000506  0E40               	movlw	low __pidataCOMRAM
   194  000508  6EF6               	movwf	tblptrl,c
   195  00050A  0E05               	movlw	high __pidataCOMRAM
   196  00050C  6EF7               	movwf	tblptrh,c
   197  00050E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198  000510  6EF8               	movwf	tblptru,c
   199  000512  EE00  F001         	lfsr	0,__pdataCOMRAM
   200  000516  EE10 F038          	lfsr	1,56
   201  00051A                     copy_data0:
   202  00051A  0009               	tblrd		*+
   203  00051C  CFF5 FFEE          	movff	tablat,postinc0
   204  000520  50E5               	movf	postdec1,w,c
   205  000522  50E1               	movf	fsr1l,w,c
   206  000524  E1FA               	bnz	copy_data0
   207                           
   208                           ; Clear objects allocated to COMRAM (20 bytes)
   209  000526  EE00  F039         	lfsr	0,__pbssCOMRAM
   210  00052A  0E14               	movlw	20
   211  00052C                     clear_0:
   212  00052C  6AEE               	clrf	postinc0,c
   213  00052E  06E8               	decf	wreg,f,c
   214  000530  E1FD               	bnz	clear_0
   215  000532                     end_of_initialization:
   216                           	opt callstack 0
   217  000532                     __end_of__initialization:
   218                           	opt callstack 0
   219  000532  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  000534  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  000536  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222  000538  6EF8               	movwf	tblptru,c
   223  00053A  0100               	movlb	0
   224  00053C  EFF4  F001         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227  000039                     __pbssCOMRAM:
   228                           	opt callstack 0
   229  000039                     	ds	8
   230  000041                     _callback_CCP1:
   231                           	opt callstack 0
   232  000041                     	ds	2
   233  000043                     _callback_TMR0:
   234                           	opt callstack 0
   235  000043                     	ds	2
   236  000045                     _callback_INTonChange:
   237                           	opt callstack 0
   238  000045                     	ds	2
   239  000047                     _callback_INT2:
   240                           	opt callstack 0
   241  000047                     	ds	2
   242  000049                     _callback_INT1:
   243                           	opt callstack 0
   244  000049                     	ds	2
   245  00004B                     _callback_INT0:
   246                           	opt callstack 0
   247  00004B                     	ds	2
   248                           
   249                           	psect	dataCOMRAM
   250  000001                     __pdataCOMRAM:
   251                           	opt callstack 0
   252  000001                     _freq_PWM:
   253                           	opt callstack 0
   254  000001                     	ds	4
   255  000005                     _p_PORTDdirection:
   256                           	opt callstack 0
   257  000005                     	ds	2
   258  000007                     _p_PORTDdata:
   259                           	opt callstack 0
   260  000007                     	ds	2
   261  000009                     _p_PORTCdirection:
   262                           	opt callstack 0
   263  000009                     	ds	2
   264  00000B                     _p_PORTCdata:
   265                           	opt callstack 0
   266  00000B                     	ds	2
   267  00000D                     _p_PORTBdirection:
   268                           	opt callstack 0
   269  00000D                     	ds	2
   270  00000F                     _p_PORTBdata:
   271                           	opt callstack 0
   272  00000F                     	ds	2
   273  000011                     _p_PORTAdirection:
   274                           	opt callstack 0
   275  000011                     	ds	2
   276  000013                     _p_PORTAdata:
   277                           	opt callstack 0
   278  000013                     	ds	2
   279  000015                     _prescaler_TMR2:
   280                           	opt callstack 0
   281  000015                     	ds	1
   282  000016                     _BTN0:
   283                           	opt callstack 0
   284  000016                     	ds	7
   285  00001D                     _LED3:
   286                           	opt callstack 0
   287  00001D                     	ds	7
   288  000024                     _LED2:
   289                           	opt callstack 0
   290  000024                     	ds	7
   291  00002B                     _LED1:
   292                           	opt callstack 0
   293  00002B                     	ds	7
   294  000032                     _LED0:
   295                           	opt callstack 0
   296  000032                     	ds	7
   297                           
   298                           	psect	cstackCOMRAM
   299  00004D                     __pcstackCOMRAM:
   300                           	opt callstack 0
   301  00004D                     ?_ADC_u16getValue:
   302                           	opt callstack 0
   303  00004D                     ?___lwdiv:
   304                           	opt callstack 0
   305  00004D                     ?___lwmod:
   306                           	opt callstack 0
   307  00004D                     ?___aldiv:
   308                           	opt callstack 0
   309  00004D                     DIO_vdWriteDirPin@port:
   310                           	opt callstack 0
   311  00004D                     UART_vdSendByte@data:
   312                           	opt callstack 0
   313  00004D                     ___lwdiv@dividend:
   314                           	opt callstack 0
   315  00004D                     ___lwmod@dividend:
   316                           	opt callstack 0
   317  00004D                     ___aldiv@dividend:
   318                           	opt callstack 0
   319                           
   320                           ; 4 bytes @ 0x0
   321  00004D                     	ds	1
   322  00004E                     DIO_vdWriteDirPin@pin:
   323                           	opt callstack 0
   324                           
   325                           ; 1 bytes @ 0x1
   326  00004E                     	ds	1
   327  00004F                     ??_ADC_u16getValue:
   328  00004F                     ??_DIO_vdWriteDirPin:
   329  00004F                     ___lwdiv@divisor:
   330                           	opt callstack 0
   331  00004F                     ___lwmod@divisor:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  00004F                     	ds	2
   336  000051                     DIO_vdWriteDirPin@data:
   337                           	opt callstack 0
   338  000051                     ___lwmod@counter:
   339                           	opt callstack 0
   340  000051                     ADC_u16getValue@data:
   341                           	opt callstack 0
   342  000051                     ___lwdiv@quotient:
   343                           	opt callstack 0
   344  000051                     ___aldiv@divisor:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x4
   348  000051                     	ds	1
   349  000052                     DIO_vdInit@dev:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x5
   353  000052                     	ds	1
   354  000053                     ADC_u16getValue@pin:
   355                           	opt callstack 0
   356  000053                     ___lwdiv@counter:
   357                           	opt callstack 0
   358                           
   359                           ; 1 bytes @ 0x6
   360  000053                     	ds	1
   361  000054                     UART_vdSendu16asASCI@data:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x7
   365  000054                     	ds	1
   366  000055                     ___aldiv@counter:
   367                           	opt callstack 0
   368                           
   369                           ; 1 bytes @ 0x8
   370  000055                     	ds	1
   371  000056                     ___aldiv@sign:
   372                           	opt callstack 0
   373  000056                     UART_vdSendu16asASCI@temp2:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x9
   377  000056                     	ds	1
   378  000057                     ___aldiv@quotient:
   379                           	opt callstack 0
   380                           
   381                           ; 4 bytes @ 0xA
   382  000057                     	ds	1
   383  000058                     UART_vdSendu16asASCI@i:
   384                           	opt callstack 0
   385                           
   386                           ; 1 bytes @ 0xB
   387  000058                     	ds	1
   388  000059                     UART_vdSendu16asASCI@temp:
   389                           	opt callstack 0
   390                           
   391                           ; 5 bytes @ 0xC
   392  000059                     	ds	2
   393  00005B                     UART_vdInit@baud:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0xE
   397  00005B                     	ds	2
   398  00005D                     
   399                           ; 1 bytes @ 0x10
   400  00005D                     	ds	1
   401  00005E                     
   402                           ; 1 bytes @ 0x11
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 30 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels required when called:    3
   428 ;; This function calls:
   429 ;;		_ADC_u16getValue
   430 ;;		_ADC_vdInit
   431 ;;		_DIO_vdInit
   432 ;;		_INT_vdinit
   433 ;;		_UART_vdInit
   434 ;;		_UART_vdSendByte
   435 ;;		_UART_vdSendu16asASCI
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text0
   442  0003E8                     __ptext0:
   443                           	opt callstack 0
   444  0003E8                     _main:
   445                           	opt callstack 0
   446  0003E8  FFFF               	dw	65535	; assembler added errata NOP
   447                           
   448                           ;main.c: 32:     DIO_vdInit(&LED0);
   449                           
   450                           ;incstack = 0
   451  0003EA  0E32               	movlw	low _LED0
   452  0003EC  6E52               	movwf	DIO_vdInit@dev,c
   453  0003EE  0E00               	movlw	high _LED0
   454  0003F0  6E53               	movwf	DIO_vdInit@dev+1,c
   455  0003F2  ECD6  F002         	call	_DIO_vdInit	;wreg free
   456                           
   457                           ;main.c: 33:     DIO_vdInit(&LED1);
   458  0003F6  0E2B               	movlw	low _LED1
   459  0003F8  6E52               	movwf	DIO_vdInit@dev,c
   460  0003FA  0E00               	movlw	high _LED1
   461  0003FC  6E53               	movwf	DIO_vdInit@dev+1,c
   462  0003FE  ECD6  F002         	call	_DIO_vdInit	;wreg free
   463                           
   464                           ;main.c: 34:     DIO_vdInit(&LED2);
   465  000402  0E24               	movlw	low _LED2
   466  000404  6E52               	movwf	DIO_vdInit@dev,c
   467  000406  0E00               	movlw	high _LED2
   468  000408  6E53               	movwf	DIO_vdInit@dev+1,c
   469  00040A  ECD6  F002         	call	_DIO_vdInit	;wreg free
   470                           
   471                           ;main.c: 35:     DIO_vdInit(&LED3);
   472  00040E  0E1D               	movlw	low _LED3
   473  000410  6E52               	movwf	DIO_vdInit@dev,c
   474  000412  0E00               	movlw	high _LED3
   475  000414  6E53               	movwf	DIO_vdInit@dev+1,c
   476  000416  ECD6  F002         	call	_DIO_vdInit	;wreg free
   477                           
   478                           ;main.c: 36:     DIO_vdInit(&BTN0);
   479  00041A  0E16               	movlw	low _BTN0
   480  00041C  6E52               	movwf	DIO_vdInit@dev,c
   481  00041E  0E00               	movlw	high _BTN0
   482  000420  6E53               	movwf	DIO_vdInit@dev+1,c
   483  000422  ECD6  F002         	call	_DIO_vdInit	;wreg free
   484                           
   485                           ;main.c: 38:     INT_vdinit();
   486  000426  ECF0  F002         	call	_INT_vdinit	;wreg free
   487                           
   488                           ;main.c: 39:     ADC_vdInit();
   489  00042A  ECFC  F002         	call	_ADC_vdInit	;wreg free
   490                           
   491                           ;main.c: 40:     UART_vdInit(9600);
   492  00042E  0E25               	movlw	37
   493  000430  6E5C               	movwf	UART_vdInit@baud+1,c
   494  000432  0E80               	movlw	128
   495  000434  6E5B               	movwf	UART_vdInit@baud,c
   496  000436  ECBC  F002         	call	_UART_vdInit	;wreg free
   497  00043A                     l1879:
   498  00043A  FFFF               	dw	65535	; assembler added errata NOP
   499                           
   500                           ;main.c: 43:         UART_vdSendu16asASCI(ADC_u16getValue(0));
   501  00043C  0E00               	movlw	0
   502  00043E  ECBB  F001         	call	_ADC_u16getValue
   503  000442  C04D  F054         	movff	?_ADC_u16getValue,UART_vdSendu16asASCI@data
   504  000446  C04E  F055         	movff	?_ADC_u16getValue+1,UART_vdSendu16asASCI@data+1
   505  00044A  ECC3  F000         	call	_UART_vdSendu16asASCI	;wreg free
   506                           
   507                           ;main.c: 44:         UART_vdSendByte('  ');
   508  00044E  0E20               	movlw	32
   509  000450  EC08  F003         	call	_UART_vdSendByte
   510  000454  D7F2               	goto	l1879
   511  000456                     __end_of_main:
   512                           	opt callstack 0
   513                           
   514 ;; *************** function _UART_vdSendu16asASCI *****************
   515 ;; Defined at:
   516 ;;		line 52 in file "UART.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  data            2    7[COMRAM] unsigned short 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  temp            5   12[COMRAM] unsigned char [5]
   521 ;;  temp2           2    9[COMRAM] unsigned short 
   522 ;;  i               1   11[COMRAM] unsigned char 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   532 ;;      Params:         2       0       0       0       0       0       0
   533 ;;      Locals:         8       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0
   535 ;;      Totals:        10       0       0       0       0       0       0
   536 ;;Total ram usage:       10 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    2
   539 ;; This function calls:
   540 ;;		_UART_vdSendByte
   541 ;;		___lwdiv
   542 ;;		___lwmod
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text1
   549  000186                     __ptext1:
   550                           	opt callstack 0
   551  000186                     _UART_vdSendu16asASCI:
   552                           	opt callstack 0
   553  000186  FFFF               	dw	65535	; assembler added errata NOP
   554                           
   555                           ;UART.c: 53:  unsigned char temp[5]; unsigned char i; unsigned short int temp2 = data;
   556                           
   557                           ;incstack = 0
   558  000188  C054  F056         	movff	UART_vdSendu16asASCI@data,UART_vdSendu16asASCI@temp2
   559  00018C  C055  F057         	movff	UART_vdSendu16asASCI@data+1,UART_vdSendu16asASCI@temp2+1
   560                           
   561                           ;UART.c: 54:  for(i=0;i<5;i++){
   562  000190  0E00               	movlw	0
   563  000192  6E58               	movwf	UART_vdSendu16asASCI@i,c
   564  000194                     l1841:
   565  000194  FFFF               	dw	65535	; assembler added errata NOP
   566                           
   567                           ;UART.c: 55:   temp[i] = temp2%10;
   568  000196  0E59               	movlw	low UART_vdSendu16asASCI@temp
   569  000198  2458               	addwf	UART_vdSendu16asASCI@i,w,c
   570  00019A  6ED9               	movwf	fsr2l,c
   571  00019C  6ADA               	clrf	fsr2h,c
   572  00019E  0E00               	movlw	high UART_vdSendu16asASCI@temp
   573  0001A0  22DA               	addwfc	fsr2h,f,c
   574  0001A2  C056  F04D         	movff	UART_vdSendu16asASCI@temp2,___lwmod@dividend
   575  0001A6  C057  F04E         	movff	UART_vdSendu16asASCI@temp2+1,___lwmod@dividend+1
   576  0001AA  0E00               	movlw	0
   577  0001AC  6E50               	movwf	___lwmod@divisor+1,c
   578  0001AE  0E0A               	movlw	10
   579  0001B0  6E4F               	movwf	___lwmod@divisor,c
   580  0001B2  EC5B  F002         	call	___lwmod	;wreg free
   581  0001B6  504D               	movf	?___lwmod,w,c
   582  0001B8  6EDF               	movwf	indf2,c
   583                           
   584                           ;UART.c: 56:   temp2 /= 10;
   585  0001BA  C056  F04D         	movff	UART_vdSendu16asASCI@temp2,___lwdiv@dividend
   586  0001BE  C057  F04E         	movff	UART_vdSendu16asASCI@temp2+1,___lwdiv@dividend+1
   587  0001C2  0E00               	movlw	0
   588  0001C4  6E50               	movwf	___lwdiv@divisor+1,c
   589  0001C6  0E0A               	movlw	10
   590  0001C8  6E4F               	movwf	___lwdiv@divisor,c
   591  0001CA  EC2B  F002         	call	___lwdiv	;wreg free
   592  0001CE  C04D  F056         	movff	?___lwdiv,UART_vdSendu16asASCI@temp2
   593  0001D2  C04E  F057         	movff	?___lwdiv+1,UART_vdSendu16asASCI@temp2+1
   594                           
   595                           ;UART.c: 57:  }
   596  0001D6  2A58               	incf	UART_vdSendu16asASCI@i,f,c
   597  0001D8  0E04               	movlw	4
   598  0001DA  6458               	cpfsgt	UART_vdSendu16asASCI@i,c
   599  0001DC  D7DB               	goto	l1841
   600                           
   601                           ;UART.c: 58:  if(temp[4]==0){
   602  0001DE  505D               	movf	UART_vdSendu16asASCI@temp+4,w,c
   603  0001E0  A4D8               	btfss	status,2,c
   604  0001E2  D041               	goto	l1869
   605                           
   606                           ;UART.c: 59:   if(temp[3]==0){
   607  0001E4  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   608  0001E6  A4D8               	btfss	status,2,c
   609  0001E8  D02C               	goto	l1867
   610                           
   611                           ;UART.c: 60:    if(temp[2]==0){
   612  0001EA  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   613  0001EC  A4D8               	btfss	status,2,c
   614  0001EE  D01B               	goto	l1865
   615                           
   616                           ;UART.c: 61:                 if(temp[1]==0){
   617  0001F0  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   618  0001F2  A4D8               	btfss	status,2,c
   619  0001F4  D00E               	goto	l1863
   620                           
   621                           ;UART.c: 62:                     if(temp[0]==0){
   622  0001F6  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   623  0001F8  A4D8               	btfss	status,2,c
   624  0001FA  D005               	goto	l1861
   625                           
   626                           ;UART.c: 63:                         UART_vdSendByte(temp[0]+48);
   627  0001FC  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   628  0001FE  0F30               	addlw	48
   629  000200  EC08  F003         	call	_UART_vdSendByte
   630                           
   631                           ;UART.c: 64:                     }else{
   632  000204  D045               	goto	l469
   633  000206                     l1861:
   634  000206  FFFF               	dw	65535	; assembler added errata NOP
   635                           
   636                           ;UART.c: 65:                         UART_vdSendByte(temp[0]+48);
   637  000208  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   638  00020A  0F30               	addlw	48
   639  00020C  EC08  F003         	call	_UART_vdSendByte
   640  000210  D03F               	goto	l469
   641  000212                     l1863:
   642  000212  FFFF               	dw	65535	; assembler added errata NOP
   643                           
   644                           ;UART.c: 68:                     UART_vdSendByte(temp[1]+48);
   645  000214  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   646  000216  0F30               	addlw	48
   647  000218  EC08  F003         	call	_UART_vdSendByte
   648                           
   649                           ;UART.c: 69:                     UART_vdSendByte(temp[0]+48);
   650  00021C  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   651  00021E  0F30               	addlw	48
   652  000220  EC08  F003         	call	_UART_vdSendByte
   653  000224  D035               	goto	l469
   654  000226                     l1865:
   655  000226  FFFF               	dw	65535	; assembler added errata NOP
   656                           
   657                           ;UART.c: 72:                 UART_vdSendByte(temp[2]+48);
   658  000228  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   659  00022A  0F30               	addlw	48
   660  00022C  EC08  F003         	call	_UART_vdSendByte
   661                           
   662                           ;UART.c: 73:                 UART_vdSendByte(temp[1]+48);
   663  000230  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   664  000232  0F30               	addlw	48
   665  000234  EC08  F003         	call	_UART_vdSendByte
   666                           
   667                           ;UART.c: 74:                 UART_vdSendByte(temp[0]+48);
   668  000238  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   669  00023A  0F30               	addlw	48
   670  00023C  EC08  F003         	call	_UART_vdSendByte
   671  000240  D027               	goto	l469
   672  000242                     l1867:
   673  000242  FFFF               	dw	65535	; assembler added errata NOP
   674                           
   675                           ;UART.c: 77:             UART_vdSendByte(temp[3]+48);
   676  000244  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   677  000246  0F30               	addlw	48
   678  000248  EC08  F003         	call	_UART_vdSendByte
   679                           
   680                           ;UART.c: 78:             UART_vdSendByte(temp[2]+48);
   681  00024C  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   682  00024E  0F30               	addlw	48
   683  000250  EC08  F003         	call	_UART_vdSendByte
   684                           
   685                           ;UART.c: 79:    UART_vdSendByte(temp[1]+48);
   686  000254  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   687  000256  0F30               	addlw	48
   688  000258  EC08  F003         	call	_UART_vdSendByte
   689                           
   690                           ;UART.c: 80:    UART_vdSendByte(temp[0]+48);
   691  00025C  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   692  00025E  0F30               	addlw	48
   693  000260  EC08  F003         	call	_UART_vdSendByte
   694  000264  D015               	goto	l469
   695  000266                     l1869:
   696  000266  FFFF               	dw	65535	; assembler added errata NOP
   697                           
   698                           ;UART.c: 83:         UART_vdSendByte(temp[4]+48);
   699  000268  505D               	movf	UART_vdSendu16asASCI@temp+4,w,c
   700  00026A  0F30               	addlw	48
   701  00026C  EC08  F003         	call	_UART_vdSendByte
   702                           
   703                           ;UART.c: 84:         UART_vdSendByte(temp[3]+48);
   704  000270  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   705  000272  0F30               	addlw	48
   706  000274  EC08  F003         	call	_UART_vdSendByte
   707                           
   708                           ;UART.c: 85:   UART_vdSendByte(temp[2]+48);
   709  000278  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   710  00027A  0F30               	addlw	48
   711  00027C  EC08  F003         	call	_UART_vdSendByte
   712                           
   713                           ;UART.c: 86:   UART_vdSendByte(temp[1]+48);
   714  000280  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   715  000282  0F30               	addlw	48
   716  000284  EC08  F003         	call	_UART_vdSendByte
   717                           
   718                           ;UART.c: 87:   UART_vdSendByte(temp[0]+48);
   719  000288  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   720  00028A  0F30               	addlw	48
   721  00028C  EC08  F003         	call	_UART_vdSendByte
   722  000290                     l469:
   723  000290  FFFF               	dw	65535	; assembler added errata NOP
   724  000292  0012               	return		;funcret
   725  000294  FFFF               	dw	65535	; errata NOP
   726  000296                     __end_of_UART_vdSendu16asASCI:
   727                           	opt callstack 0
   728                           
   729 ;; *************** function ___lwmod *****************
   730 ;; Defined at:
   731 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  dividend        2    0[COMRAM] unsigned int 
   734 ;;  divisor         2    2[COMRAM] unsigned int 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  counter         1    4[COMRAM] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  2    0[COMRAM] unsigned int 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   746 ;;      Params:         4       0       0       0       0       0       0
   747 ;;      Locals:         1       0       0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0
   749 ;;      Totals:         5       0       0       0       0       0       0
   750 ;;Total ram usage:        5 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_UART_vdSendu16asASCI
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761  0004B6                     __ptext2:
   762                           	opt callstack 0
   763  0004B6                     ___lwmod:
   764                           	opt callstack 0
   765  0004B6  FFFF               	dw	65535	; assembler added errata NOP
   766                           
   767                           ;incstack = 0
   768  0004B8  504F               	movf	___lwmod@divisor,w,c
   769  0004BA  1050               	iorwf	___lwmod@divisor+1,w,c
   770  0004BC  B4D8               	btfsc	status,2,c
   771  0004BE  D01C               	goto	l973
   772  0004C0  0E01               	movlw	1
   773  0004C2  6E51               	movwf	___lwmod@counter,c
   774  0004C4  D005               	goto	l1795
   775  0004C6                     l1793:
   776  0004C6  FFFF               	dw	65535	; assembler added errata NOP
   777  0004C8  90D8               	bcf	status,0,c
   778  0004CA  364F               	rlcf	___lwmod@divisor,f,c
   779  0004CC  3650               	rlcf	___lwmod@divisor+1,f,c
   780  0004CE  2A51               	incf	___lwmod@counter,f,c
   781  0004D0                     l1795:
   782  0004D0  FFFF               	dw	65535	; assembler added errata NOP
   783  0004D2  AE50               	btfss	___lwmod@divisor+1,7,c
   784  0004D4  D7F8               	goto	l1793
   785  0004D6                     u960:
   786  0004D6  FFFF               	dw	65535	; assembler added errata NOP
   787  0004D8  504F               	movf	___lwmod@divisor,w,c
   788  0004DA  5C4D               	subwf	___lwmod@dividend,w,c
   789  0004DC  5050               	movf	___lwmod@divisor+1,w,c
   790  0004DE  584E               	subwfb	___lwmod@dividend+1,w,c
   791  0004E0  A0D8               	btfss	status,0,c
   792  0004E2  D004               	goto	l1801
   793  0004E4  504F               	movf	___lwmod@divisor,w,c
   794  0004E6  5E4D               	subwf	___lwmod@dividend,f,c
   795  0004E8  5050               	movf	___lwmod@divisor+1,w,c
   796  0004EA  5A4E               	subwfb	___lwmod@dividend+1,f,c
   797  0004EC                     l1801:
   798  0004EC  FFFF               	dw	65535	; assembler added errata NOP
   799  0004EE  90D8               	bcf	status,0,c
   800  0004F0  3250               	rrcf	___lwmod@divisor+1,f,c
   801  0004F2  324F               	rrcf	___lwmod@divisor,f,c
   802  0004F4  2E51               	decfsz	___lwmod@counter,f,c
   803  0004F6  D7EF               	goto	u960
   804  0004F8                     l973:
   805  0004F8  FFFF               	dw	65535	; assembler added errata NOP
   806  0004FA  C04D  F04D         	movff	___lwmod@dividend,?___lwmod
   807  0004FE  C04E  F04E         	movff	___lwmod@dividend+1,?___lwmod+1
   808  000502  0012               	return		;funcret
   809  000504  FFFF               	dw	65535	; errata NOP
   810  000506                     __end_of___lwmod:
   811                           	opt callstack 0
   812                           
   813 ;; *************** function ___lwdiv *****************
   814 ;; Defined at:
   815 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  dividend        2    0[COMRAM] unsigned int 
   818 ;;  divisor         2    2[COMRAM] unsigned int 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  quotient        2    4[COMRAM] unsigned int 
   821 ;;  counter         1    6[COMRAM] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2    0[COMRAM] unsigned int 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   831 ;;      Params:         4       0       0       0       0       0       0
   832 ;;      Locals:         3       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0
   834 ;;      Totals:         7       0       0       0       0       0       0
   835 ;;Total ram usage:        7 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_UART_vdSendu16asASCI
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text3
   846  000456                     __ptext3:
   847                           	opt callstack 0
   848  000456                     ___lwdiv:
   849                           	opt callstack 0
   850  000456  FFFF               	dw	65535	; assembler added errata NOP
   851                           
   852                           ;incstack = 0
   853  000458  0E00               	movlw	0
   854  00045A  6E52               	movwf	___lwdiv@quotient+1,c
   855  00045C  0E00               	movlw	0
   856  00045E  6E51               	movwf	___lwdiv@quotient,c
   857  000460  504F               	movf	___lwdiv@divisor,w,c
   858  000462  1050               	iorwf	___lwdiv@divisor+1,w,c
   859  000464  B4D8               	btfsc	status,2,c
   860  000466  D020               	goto	l963
   861  000468  0E01               	movlw	1
   862  00046A  6E53               	movwf	___lwdiv@counter,c
   863  00046C  D005               	goto	l1775
   864  00046E                     l1773:
   865  00046E  FFFF               	dw	65535	; assembler added errata NOP
   866  000470  90D8               	bcf	status,0,c
   867  000472  364F               	rlcf	___lwdiv@divisor,f,c
   868  000474  3650               	rlcf	___lwdiv@divisor+1,f,c
   869  000476  2A53               	incf	___lwdiv@counter,f,c
   870  000478                     l1775:
   871  000478  FFFF               	dw	65535	; assembler added errata NOP
   872  00047A  AE50               	btfss	___lwdiv@divisor+1,7,c
   873  00047C  D7F8               	goto	l1773
   874  00047E                     u930:
   875  00047E  FFFF               	dw	65535	; assembler added errata NOP
   876  000480  90D8               	bcf	status,0,c
   877  000482  3651               	rlcf	___lwdiv@quotient,f,c
   878  000484  3652               	rlcf	___lwdiv@quotient+1,f,c
   879  000486  504F               	movf	___lwdiv@divisor,w,c
   880  000488  5C4D               	subwf	___lwdiv@dividend,w,c
   881  00048A  5050               	movf	___lwdiv@divisor+1,w,c
   882  00048C  584E               	subwfb	___lwdiv@dividend+1,w,c
   883  00048E  A0D8               	btfss	status,0,c
   884  000490  D005               	goto	l1785
   885  000492  504F               	movf	___lwdiv@divisor,w,c
   886  000494  5E4D               	subwf	___lwdiv@dividend,f,c
   887  000496  5050               	movf	___lwdiv@divisor+1,w,c
   888  000498  5A4E               	subwfb	___lwdiv@dividend+1,f,c
   889  00049A  8051               	bsf	___lwdiv@quotient,0,c
   890  00049C                     l1785:
   891  00049C  FFFF               	dw	65535	; assembler added errata NOP
   892  00049E  90D8               	bcf	status,0,c
   893  0004A0  3250               	rrcf	___lwdiv@divisor+1,f,c
   894  0004A2  324F               	rrcf	___lwdiv@divisor,f,c
   895  0004A4  2E53               	decfsz	___lwdiv@counter,f,c
   896  0004A6  D7EB               	goto	u930
   897  0004A8                     l963:
   898  0004A8  FFFF               	dw	65535	; assembler added errata NOP
   899  0004AA  C051  F04D         	movff	___lwdiv@quotient,?___lwdiv
   900  0004AE  C052  F04E         	movff	___lwdiv@quotient+1,?___lwdiv+1
   901  0004B2  0012               	return		;funcret
   902  0004B4  FFFF               	dw	65535	; errata NOP
   903  0004B6                     __end_of___lwdiv:
   904                           	opt callstack 0
   905                           
   906 ;; *************** function _UART_vdSendByte *****************
   907 ;; Defined at:
   908 ;;		line 22 in file "UART.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  data            1    wreg     unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  data            1    0[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   922 ;;      Params:         0       0       0       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0
   925 ;;      Totals:         1       0       0       0       0       0       0
   926 ;;Total ram usage:        1 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;;		_UART_vdSendu16asASCI
   934 ;;		_UART_vdSendu8asASCI
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text4
   939  000610                     __ptext4:
   940                           	opt callstack 0
   941  000610                     _UART_vdSendByte:
   942                           	opt callstack 0
   943  000610  FFFF               	dw	65535	; assembler added errata NOP
   944                           
   945                           ;incstack = 0
   946                           ;UART_vdSendByte@data stored from wreg
   947  000612  6E4D               	movwf	UART_vdSendByte@data,c
   948  000614  FFFF               	dw	65535	; assembler added errata NOP
   949                           
   950                           ;UART.c: 23:  while (!TXIF);
   951  000616  A89E               	btfss	3998,4,c	;volatile
   952  000618  D7FD               	goto	l1145
   953                           
   954                           ;UART.c: 28:  TXREG = data;
   955  00061A  C04D  FFAD         	movff	UART_vdSendByte@data,4013	;volatile
   956  00061E  0012               	return		;funcret
   957  000620  FFFF               	dw	65535	; errata NOP
   958  000622                     __end_of_UART_vdSendByte:
   959                           	opt callstack 0
   960                           
   961 ;; *************** function _UART_vdInit *****************
   962 ;; Defined at:
   963 ;;		line 13 in file "UART.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  baud            2   14[COMRAM] unsigned short 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   977 ;;      Params:         2       0       0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0
   980 ;;      Totals:         2       0       0       0       0       0       0
   981 ;;Total ram usage:        2 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		___aldiv
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text5
   992  000578                     __ptext5:
   993                           	opt callstack 0
   994  000578                     _UART_vdInit:
   995                           	opt callstack 0
   996  000578  FFFF               	dw	65535	; assembler added errata NOP
   997                           
   998                           ;UART.c: 14:  BRGH = 1;
   999                           
  1000                           ;incstack = 0
  1001  00057A  84AC               	bsf	4012,2,c	;volatile
  1002                           
  1003                           ;UART.c: 15:     SPBRG = ((4000000/16)/baud) - 1;
  1004  00057C  0E90               	movlw	144
  1005  00057E  6E4D               	movwf	___aldiv@dividend,c
  1006  000580  0ED0               	movlw	208
  1007  000582  6E4E               	movwf	___aldiv@dividend+1,c
  1008  000584  0E03               	movlw	3
  1009  000586  6E4F               	movwf	___aldiv@dividend+2,c
  1010  000588  0E00               	movlw	0
  1011  00058A  6E50               	movwf	___aldiv@dividend+3,c
  1012  00058C  C05B  F051         	movff	UART_vdInit@baud,___aldiv@divisor
  1013  000590  C05C  F052         	movff	UART_vdInit@baud+1,___aldiv@divisor+1
  1014  000594  6A53               	clrf	___aldiv@divisor+2,c
  1015  000596  6A54               	clrf	___aldiv@divisor+3,c
  1016  000598  EC4B  F001         	call	___aldiv	;wreg free
  1017  00059C  044D               	decf	?___aldiv,w,c
  1018  00059E  6EAF               	movwf	4015,c	;volatile
  1019                           
  1020                           ;UART.c: 16:     TXSTAbits.SYNC = 0;
  1021  0005A0  98AC               	bcf	4012,4,c	;volatile
  1022                           
  1023                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  1024  0005A2  8EAB               	bsf	4011,7,c	;volatile
  1025                           
  1026                           ;UART.c: 18:     TRISC6 = 0;
  1027  0005A4  9C94               	bcf	3988,6,c	;volatile
  1028                           
  1029                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1030  0005A6  8AAC               	bsf	4012,5,c	;volatile
  1031  0005A8  0012               	return		;funcret
  1032  0005AA  FFFF               	dw	65535	; errata NOP
  1033  0005AC                     __end_of_UART_vdInit:
  1034                           	opt callstack 0
  1035                           
  1036 ;; *************** function ___aldiv *****************
  1037 ;; Defined at:
  1038 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dividend        4    0[COMRAM] long 
  1041 ;;  divisor         4    4[COMRAM] long 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  quotient        4   10[COMRAM] long 
  1044 ;;  sign            1    9[COMRAM] unsigned char 
  1045 ;;  counter         1    8[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  4    0[COMRAM] long 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         8       0       0       0       0       0       0
  1056 ;;      Locals:         6       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:        14       0       0       0       0       0       0
  1059 ;;Total ram usage:       14 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_UART_vdInit
  1066 ;;		_CCP1_vdSetDutyCycle
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text6
  1071  000296                     __ptext6:
  1072                           	opt callstack 0
  1073  000296                     ___aldiv:
  1074                           	opt callstack 0
  1075  000296  FFFF               	dw	65535	; assembler added errata NOP
  1076                           
  1077                           ;incstack = 0
  1078  000298  0E00               	movlw	0
  1079  00029A  6E56               	movwf	___aldiv@sign,c
  1080  00029C  AE54               	btfss	___aldiv@divisor+3,7,c
  1081  00029E  D00A               	goto	l1731
  1082  0002A0  1E54               	comf	___aldiv@divisor+3,f,c
  1083  0002A2  1E53               	comf	___aldiv@divisor+2,f,c
  1084  0002A4  1E52               	comf	___aldiv@divisor+1,f,c
  1085  0002A6  6C51               	negf	___aldiv@divisor,c
  1086  0002A8  0E00               	movlw	0
  1087  0002AA  2252               	addwfc	___aldiv@divisor+1,f,c
  1088  0002AC  2253               	addwfc	___aldiv@divisor+2,f,c
  1089  0002AE  2254               	addwfc	___aldiv@divisor+3,f,c
  1090  0002B0  0E01               	movlw	1
  1091  0002B2  6E56               	movwf	___aldiv@sign,c
  1092  0002B4                     l1731:
  1093  0002B4  FFFF               	dw	65535	; assembler added errata NOP
  1094  0002B6  AE50               	btfss	___aldiv@dividend+3,7,c
  1095  0002B8  D00A               	goto	l1737
  1096  0002BA  1E50               	comf	___aldiv@dividend+3,f,c
  1097  0002BC  1E4F               	comf	___aldiv@dividend+2,f,c
  1098  0002BE  1E4E               	comf	___aldiv@dividend+1,f,c
  1099  0002C0  6C4D               	negf	___aldiv@dividend,c
  1100  0002C2  0E00               	movlw	0
  1101  0002C4  224E               	addwfc	___aldiv@dividend+1,f,c
  1102  0002C6  224F               	addwfc	___aldiv@dividend+2,f,c
  1103  0002C8  2250               	addwfc	___aldiv@dividend+3,f,c
  1104  0002CA  0E01               	movlw	1
  1105  0002CC  1A56               	xorwf	___aldiv@sign,f,c
  1106  0002CE                     l1737:
  1107  0002CE  FFFF               	dw	65535	; assembler added errata NOP
  1108  0002D0  0E00               	movlw	0
  1109  0002D2  6E57               	movwf	___aldiv@quotient,c
  1110  0002D4  0E00               	movlw	0
  1111  0002D6  6E58               	movwf	___aldiv@quotient+1,c
  1112  0002D8  0E00               	movlw	0
  1113  0002DA  6E59               	movwf	___aldiv@quotient+2,c
  1114  0002DC  0E00               	movlw	0
  1115  0002DE  6E5A               	movwf	___aldiv@quotient+3,c
  1116  0002E0  5051               	movf	___aldiv@divisor,w,c
  1117  0002E2  1052               	iorwf	___aldiv@divisor+1,w,c
  1118  0002E4  1053               	iorwf	___aldiv@divisor+2,w,c
  1119  0002E6  1054               	iorwf	___aldiv@divisor+3,w,c
  1120  0002E8  B4D8               	btfsc	status,2,c
  1121  0002EA  D02E               	goto	l1759
  1122  0002EC  0E01               	movlw	1
  1123  0002EE  6E55               	movwf	___aldiv@counter,c
  1124  0002F0  D007               	goto	l1745
  1125  0002F2                     l1743:
  1126  0002F2  FFFF               	dw	65535	; assembler added errata NOP
  1127  0002F4  90D8               	bcf	status,0,c
  1128  0002F6  3651               	rlcf	___aldiv@divisor,f,c
  1129  0002F8  3652               	rlcf	___aldiv@divisor+1,f,c
  1130  0002FA  3653               	rlcf	___aldiv@divisor+2,f,c
  1131  0002FC  3654               	rlcf	___aldiv@divisor+3,f,c
  1132  0002FE  2A55               	incf	___aldiv@counter,f,c
  1133  000300                     l1745:
  1134  000300  FFFF               	dw	65535	; assembler added errata NOP
  1135  000302  AE54               	btfss	___aldiv@divisor+3,7,c
  1136  000304  D7F6               	goto	l1743
  1137  000306                     u890:
  1138  000306  FFFF               	dw	65535	; assembler added errata NOP
  1139  000308  90D8               	bcf	status,0,c
  1140  00030A  3657               	rlcf	___aldiv@quotient,f,c
  1141  00030C  3658               	rlcf	___aldiv@quotient+1,f,c
  1142  00030E  3659               	rlcf	___aldiv@quotient+2,f,c
  1143  000310  365A               	rlcf	___aldiv@quotient+3,f,c
  1144  000312  5051               	movf	___aldiv@divisor,w,c
  1145  000314  5C4D               	subwf	___aldiv@dividend,w,c
  1146  000316  5052               	movf	___aldiv@divisor+1,w,c
  1147  000318  584E               	subwfb	___aldiv@dividend+1,w,c
  1148  00031A  5053               	movf	___aldiv@divisor+2,w,c
  1149  00031C  584F               	subwfb	___aldiv@dividend+2,w,c
  1150  00031E  5054               	movf	___aldiv@divisor+3,w,c
  1151  000320  5850               	subwfb	___aldiv@dividend+3,w,c
  1152  000322  A0D8               	btfss	status,0,c
  1153  000324  D009               	goto	l1755
  1154  000326  5051               	movf	___aldiv@divisor,w,c
  1155  000328  5E4D               	subwf	___aldiv@dividend,f,c
  1156  00032A  5052               	movf	___aldiv@divisor+1,w,c
  1157  00032C  5A4E               	subwfb	___aldiv@dividend+1,f,c
  1158  00032E  5053               	movf	___aldiv@divisor+2,w,c
  1159  000330  5A4F               	subwfb	___aldiv@dividend+2,f,c
  1160  000332  5054               	movf	___aldiv@divisor+3,w,c
  1161  000334  5A50               	subwfb	___aldiv@dividend+3,f,c
  1162  000336  8057               	bsf	___aldiv@quotient,0,c
  1163  000338                     l1755:
  1164  000338  FFFF               	dw	65535	; assembler added errata NOP
  1165  00033A  90D8               	bcf	status,0,c
  1166  00033C  3254               	rrcf	___aldiv@divisor+3,f,c
  1167  00033E  3253               	rrcf	___aldiv@divisor+2,f,c
  1168  000340  3252               	rrcf	___aldiv@divisor+1,f,c
  1169  000342  3251               	rrcf	___aldiv@divisor,f,c
  1170  000344  2E55               	decfsz	___aldiv@counter,f,c
  1171  000346  D7DF               	goto	u890
  1172  000348                     l1759:
  1173  000348  FFFF               	dw	65535	; assembler added errata NOP
  1174  00034A  5056               	movf	___aldiv@sign,w,c
  1175  00034C  B4D8               	btfsc	status,2,c
  1176  00034E  D008               	goto	l1763
  1177  000350  1E5A               	comf	___aldiv@quotient+3,f,c
  1178  000352  1E59               	comf	___aldiv@quotient+2,f,c
  1179  000354  1E58               	comf	___aldiv@quotient+1,f,c
  1180  000356  6C57               	negf	___aldiv@quotient,c
  1181  000358  0E00               	movlw	0
  1182  00035A  2258               	addwfc	___aldiv@quotient+1,f,c
  1183  00035C  2259               	addwfc	___aldiv@quotient+2,f,c
  1184  00035E  225A               	addwfc	___aldiv@quotient+3,f,c
  1185  000360                     l1763:
  1186  000360  FFFF               	dw	65535	; assembler added errata NOP
  1187  000362  C057  F04D         	movff	___aldiv@quotient,?___aldiv
  1188  000366  C058  F04E         	movff	___aldiv@quotient+1,?___aldiv+1
  1189  00036A  C059  F04F         	movff	___aldiv@quotient+2,?___aldiv+2
  1190  00036E  C05A  F050         	movff	___aldiv@quotient+3,?___aldiv+3
  1191  000372  0012               	return		;funcret
  1192  000374  FFFF               	dw	65535	; errata NOP
  1193  000376                     __end_of___aldiv:
  1194                           	opt callstack 0
  1195                           
  1196 ;; *************** function _INT_vdinit *****************
  1197 ;; Defined at:
  1198 ;;		line 18 in file "INT.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		None
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         0       0       0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text7
  1227  0005E0                     __ptext7:
  1228                           	opt callstack 0
  1229  0005E0                     _INT_vdinit:
  1230                           	opt callstack 0
  1231  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  1232                           
  1233                           ;INT.c: 19:     INTCON1bits.GIE = 1;
  1234                           
  1235                           ;incstack = 0
  1236  0005E2  8EF2               	bsf	4082,7,c	;volatile
  1237                           
  1238                           ;INT.c: 22:     INTCON1bits.INT0IE = 0;
  1239  0005E4  98F2               	bcf	4082,4,c	;volatile
  1240                           
  1241                           ;INT.c: 23:     INTCON3bits.INT1IE = 0;
  1242  0005E6  96F0               	bcf	4080,3,c	;volatile
  1243                           
  1244                           ;INT.c: 24:     INTCON3bits.INT2IE = 0;
  1245  0005E8  98F0               	bcf	4080,4,c	;volatile
  1246                           
  1247                           ;INT.c: 26:     INTCON2bits.INTEDG0 = 1;
  1248  0005EA  8CF1               	bsf	4081,6,c	;volatile
  1249                           
  1250                           ;INT.c: 27:     INTCON2bits.INTEDG1 = 1;
  1251  0005EC  8AF1               	bsf	4081,5,c	;volatile
  1252                           
  1253                           ;INT.c: 28:     INTCON2bits.INTEDG2 = 1;
  1254  0005EE  88F1               	bsf	4081,4,c	;volatile
  1255                           
  1256                           ;INT.c: 31:     INTCON1bits.RBIE = 1;
  1257  0005F0  86F2               	bsf	4082,3,c	;volatile
  1258                           
  1259                           ;INT.c: 34:     INTCON1bits.TMR0IE = 1;
  1260  0005F2  8AF2               	bsf	4082,5,c	;volatile
  1261  0005F4  0012               	return		;funcret
  1262  0005F6  FFFF               	dw	65535	; errata NOP
  1263  0005F8                     __end_of_INT_vdinit:
  1264                           	opt callstack 0
  1265                           
  1266 ;; *************** function _DIO_vdInit *****************
  1267 ;; Defined at:
  1268 ;;		line 15 in file "DIO.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  dev             2    5[COMRAM] PTR struct .
  1271 ;;		 -> BTN0(7), LED3(7), LED2(7), LED1(7), 
  1272 ;;		 -> LED0(7), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1284 ;;      Params:         2       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		_DIO_vdWriteDirPin
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text8
  1299  0005AC                     __ptext8:
  1300                           	opt callstack 0
  1301  0005AC                     _DIO_vdInit:
  1302                           	opt callstack 0
  1303  0005AC  FFFF               	dw	65535	; assembler added errata NOP
  1304                           
  1305                           ;DIO.c: 16:     DIO_vdWriteDirPin(dev->mode,dev->PORT,dev->pin);
  1306                           
  1307                           ;incstack = 0
  1308  0005AE  C052  FFD9         	movff	DIO_vdInit@dev,fsr2l
  1309  0005B2  C053  FFDA         	movff	DIO_vdInit@dev+1,fsr2h
  1310  0005B6  50DF               	movf	indf2,w,c
  1311  0005B8  6E4D               	movwf	DIO_vdWriteDirPin@port,c
  1312  0005BA  EE20 F001          	lfsr	2,1
  1313  0005BE  5052               	movf	DIO_vdInit@dev,w,c
  1314  0005C0  26D9               	addwf	fsr2l,f,c
  1315  0005C2  5053               	movf	DIO_vdInit@dev+1,w,c
  1316  0005C4  22DA               	addwfc	fsr2h,f,c
  1317  0005C6  50DF               	movf	indf2,w,c
  1318  0005C8  6E4E               	movwf	DIO_vdWriteDirPin@pin,c
  1319  0005CA  EE20 F002          	lfsr	2,2
  1320  0005CE  5052               	movf	DIO_vdInit@dev,w,c
  1321  0005D0  26D9               	addwf	fsr2l,f,c
  1322  0005D2  5053               	movf	DIO_vdInit@dev+1,w,c
  1323  0005D4  22DA               	addwfc	fsr2h,f,c
  1324  0005D6  50DF               	movf	indf2,w,c
  1325  0005D8  EC18  F000         	call	_DIO_vdWriteDirPin
  1326  0005DC  0012               	return		;funcret
  1327  0005DE  FFFF               	dw	65535	; errata NOP
  1328  0005E0                     __end_of_DIO_vdInit:
  1329                           	opt callstack 0
  1330                           
  1331 ;; *************** function _DIO_vdWriteDirPin *****************
  1332 ;; Defined at:
  1333 ;;		line 52 in file "DIO.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  data            1    wreg     unsigned char 
  1336 ;;  port            1    0[COMRAM] unsigned char 
  1337 ;;  pin             1    1[COMRAM] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  data            1    4[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         2       0       0       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0       0       0
  1351 ;;      Temps:          2       0       0       0       0       0       0
  1352 ;;      Totals:         5       0       0       0       0       0       0
  1353 ;;Total ram usage:        5 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_DIO_vdInit
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text9
  1364  000030                     __ptext9:
  1365                           	opt callstack 0
  1366  000030                     _DIO_vdWriteDirPin:
  1367                           	opt callstack 0
  1368  000030  FFFF               	dw	65535	; assembler added errata NOP
  1369                           
  1370                           ;incstack = 0
  1371                           ;DIO_vdWriteDirPin@data stored from wreg
  1372  000032  6E51               	movwf	DIO_vdWriteDirPin@data,c
  1373                           
  1374                           ;DIO.c: 53:  switch(port){
  1375  000034  D090               	goto	l1717
  1376  000036                     l1691:
  1377  000036  FFFF               	dw	65535	; assembler added errata NOP
  1378                           
  1379                           ;DIO.c: 55:    if(data){
  1380  000038  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1381  00003A  B4D8               	btfsc	status,2,c
  1382  00003C  D00F               	goto	l1695
  1383                           
  1384                           ;DIO.c: 56:     (*p_PORTAdirection).PORT |= (1<<pin);
  1385  00003E  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1386  000042  0E01               	movlw	1
  1387  000044  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1388  000046  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1389  000048  D003               	goto	u754
  1390  00004A                     u755:
  1391  00004A  FFFF               	dw	65535	; assembler added errata NOP
  1392  00004C  90D8               	bcf	status,0,c
  1393  00004E  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1394  000050                     u754:
  1395  000050  FFFF               	dw	65535	; assembler added errata NOP
  1396  000052  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1397  000054  D7FA               	goto	u755
  1398  000056  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1399  000058  1292               	iorwf	3986,f,c	;volatile
  1400                           
  1401                           ;DIO.c: 57:    }else{
  1402  00005A  D092               	goto	l170
  1403  00005C                     l1695:
  1404  00005C  FFFF               	dw	65535	; assembler added errata NOP
  1405                           
  1406                           ;DIO.c: 58:     (*p_PORTAdirection).PORT &= ~(1<<pin);
  1407  00005E  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1408  000062  0E01               	movlw	1
  1409  000064  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1410  000066  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1411  000068  D003               	goto	u764
  1412  00006A                     u765:
  1413  00006A  FFFF               	dw	65535	; assembler added errata NOP
  1414  00006C  90D8               	bcf	status,0,c
  1415  00006E  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1416  000070                     u764:
  1417  000070  FFFF               	dw	65535	; assembler added errata NOP
  1418  000072  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1419  000074  D7FA               	goto	u765
  1420  000076  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1421  000078  0AFF               	xorlw	255
  1422  00007A  1692               	andwf	3986,f,c	;volatile
  1423  00007C  D081               	goto	l170
  1424  00007E                     l1697:
  1425  00007E  FFFF               	dw	65535	; assembler added errata NOP
  1426                           
  1427                           ;DIO.c: 62:    if(data){
  1428  000080  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1429  000082  B4D8               	btfsc	status,2,c
  1430  000084  D00F               	goto	l1701
  1431                           
  1432                           ;DIO.c: 63:     (*p_PORTBdirection).PORT |= (1<<pin);
  1433  000086  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1434  00008A  0E01               	movlw	1
  1435  00008C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1436  00008E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1437  000090  D003               	goto	u784
  1438  000092                     u785:
  1439  000092  FFFF               	dw	65535	; assembler added errata NOP
  1440  000094  90D8               	bcf	status,0,c
  1441  000096  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1442  000098                     u784:
  1443  000098  FFFF               	dw	65535	; assembler added errata NOP
  1444  00009A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1445  00009C  D7FA               	goto	u785
  1446  00009E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1447  0000A0  1293               	iorwf	3987,f,c	;volatile
  1448                           
  1449                           ;DIO.c: 64:     }else{
  1450  0000A2  D06E               	goto	l170
  1451  0000A4                     l1701:
  1452  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  1453                           
  1454                           ;DIO.c: 65:     (*p_PORTBdirection).PORT &= ~(1<<pin);
  1455  0000A6  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1456  0000AA  0E01               	movlw	1
  1457  0000AC  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1458  0000AE  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1459  0000B0  D003               	goto	u794
  1460  0000B2                     u795:
  1461  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  1462  0000B4  90D8               	bcf	status,0,c
  1463  0000B6  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1464  0000B8                     u794:
  1465  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  1466  0000BA  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1467  0000BC  D7FA               	goto	u795
  1468  0000BE  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1469  0000C0  0AFF               	xorlw	255
  1470  0000C2  1693               	andwf	3987,f,c	;volatile
  1471  0000C4  D05D               	goto	l170
  1472  0000C6                     l1703:
  1473  0000C6  FFFF               	dw	65535	; assembler added errata NOP
  1474                           
  1475                           ;DIO.c: 69:    if(data){
  1476  0000C8  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1477  0000CA  B4D8               	btfsc	status,2,c
  1478  0000CC  D00F               	goto	l1707
  1479                           
  1480                           ;DIO.c: 70:     (*p_PORTCdirection).PORT |= (1<<pin);
  1481  0000CE  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1482  0000D2  0E01               	movlw	1
  1483  0000D4  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1484  0000D6  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1485  0000D8  D003               	goto	u814
  1486  0000DA                     u815:
  1487  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  1488  0000DC  90D8               	bcf	status,0,c
  1489  0000DE  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1490  0000E0                     u814:
  1491  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  1492  0000E2  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1493  0000E4  D7FA               	goto	u815
  1494  0000E6  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1495  0000E8  1294               	iorwf	3988,f,c	;volatile
  1496                           
  1497                           ;DIO.c: 71:     }else{
  1498  0000EA  D04A               	goto	l170
  1499  0000EC                     l1707:
  1500  0000EC  FFFF               	dw	65535	; assembler added errata NOP
  1501                           
  1502                           ;DIO.c: 72:     (*p_PORTCdirection).PORT &= ~(1<<pin);
  1503  0000EE  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1504  0000F2  0E01               	movlw	1
  1505  0000F4  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1506  0000F6  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1507  0000F8  D003               	goto	u824
  1508  0000FA                     u825:
  1509  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  1510  0000FC  90D8               	bcf	status,0,c
  1511  0000FE  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1512  000100                     u824:
  1513  000100  FFFF               	dw	65535	; assembler added errata NOP
  1514  000102  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1515  000104  D7FA               	goto	u825
  1516  000106  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1517  000108  0AFF               	xorlw	255
  1518  00010A  1694               	andwf	3988,f,c	;volatile
  1519  00010C  D039               	goto	l170
  1520  00010E                     l1709:
  1521  00010E  FFFF               	dw	65535	; assembler added errata NOP
  1522                           
  1523                           ;DIO.c: 76:    if(data){
  1524  000110  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1525  000112  B4D8               	btfsc	status,2,c
  1526  000114  D00F               	goto	l1713
  1527                           
  1528                           ;DIO.c: 77:     (*p_PORTDdirection).PORT |= (1<<pin);
  1529  000116  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1530  00011A  0E01               	movlw	1
  1531  00011C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1532  00011E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1533  000120  D003               	goto	u844
  1534  000122                     u845:
  1535  000122  FFFF               	dw	65535	; assembler added errata NOP
  1536  000124  90D8               	bcf	status,0,c
  1537  000126  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1538  000128                     u844:
  1539  000128  FFFF               	dw	65535	; assembler added errata NOP
  1540  00012A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1541  00012C  D7FA               	goto	u845
  1542  00012E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1543  000130  1295               	iorwf	3989,f,c	;volatile
  1544                           
  1545                           ;DIO.c: 78:     }else{
  1546  000132  D026               	goto	l170
  1547  000134                     l1713:
  1548  000134  FFFF               	dw	65535	; assembler added errata NOP
  1549                           
  1550                           ;DIO.c: 79:     (*p_PORTDdirection).PORT &= ~(1<<pin);
  1551  000136  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1552  00013A  0E01               	movlw	1
  1553  00013C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1554  00013E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1555  000140  D003               	goto	u854
  1556  000142                     u855:
  1557  000142  FFFF               	dw	65535	; assembler added errata NOP
  1558  000144  90D8               	bcf	status,0,c
  1559  000146  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1560  000148                     u854:
  1561  000148  FFFF               	dw	65535	; assembler added errata NOP
  1562  00014A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1563  00014C  D7FA               	goto	u855
  1564  00014E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1565  000150  0AFF               	xorlw	255
  1566  000152  1695               	andwf	3989,f,c	;volatile
  1567  000154  D015               	goto	l170
  1568  000156                     l1717:
  1569  000156  FFFF               	dw	65535	; assembler added errata NOP
  1570  000158  504D               	movf	DIO_vdWriteDirPin@port,w,c
  1571  00015A  6E4F               	movwf	??_DIO_vdWriteDirPin& (0+255),c
  1572  00015C  6A50               	clrf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ;	Chosen strategy is simple_byte
  1581  00015E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1582  000160  0A00               	xorlw	0	; case 0
  1583  000162  A4D8               	btfss	status,2,c
  1584  000164  D00D               	goto	l170
  1585                           
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 4, Range of values is 65 to 68
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte           13     7 (average)
  1591                           ;	Chosen strategy is simple_byte
  1592  000166  504F               	movf	??_DIO_vdWriteDirPin,w,c
  1593  000168  0A41               	xorlw	65	; case 65
  1594  00016A  B4D8               	btfsc	status,2,c
  1595  00016C  D764               	goto	l1691
  1596  00016E  0A03               	xorlw	3	; case 66
  1597  000170  B4D8               	btfsc	status,2,c
  1598  000172  D785               	goto	l1697
  1599  000174  0A01               	xorlw	1	; case 67
  1600  000176  B4D8               	btfsc	status,2,c
  1601  000178  D7A6               	goto	l1703
  1602  00017A  0A07               	xorlw	7	; case 68
  1603  00017C  B4D8               	btfsc	status,2,c
  1604  00017E  D7C7               	goto	l1709
  1605  000180                     l170:
  1606  000180  FFFF               	dw	65535	; assembler added errata NOP
  1607  000182  0012               	return		;funcret
  1608  000184  FFFF               	dw	65535	; errata NOP
  1609  000186                     __end_of_DIO_vdWriteDirPin:
  1610                           	opt callstack 0
  1611                           
  1612 ;; *************** function _ADC_vdInit *****************
  1613 ;; Defined at:
  1614 ;;		line 13 in file "ADC.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text10
  1643  0005F8                     __ptext10:
  1644                           	opt callstack 0
  1645  0005F8                     _ADC_vdInit:
  1646                           	opt callstack 0
  1647  0005F8  FFFF               	dw	65535	; assembler added errata NOP
  1648                           
  1649                           ;ADC.c: 14:     ADCON1bits.PCFG = 0b0000;
  1650                           
  1651                           ;incstack = 0
  1652  0005FA  0EF0               	movlw	-16
  1653  0005FC  16C1               	andwf	4033,f,c	;volatile
  1654                           
  1655                           ;ADC.c: 15:     ADCON1bits.ADFM = 1;
  1656  0005FE  8EC1               	bsf	4033,7,c	;volatile
  1657                           
  1658                           ;ADC.c: 16:     ADCON0bits.ADCS = 0b001;
  1659  000600  50C2               	movf	4034,w,c	;volatile
  1660  000602  0B3F               	andlw	-193
  1661  000604  0940               	iorlw	64
  1662  000606  6EC2               	movwf	4034,c	;volatile
  1663                           
  1664                           ;ADC.c: 17:     ADCON1bits.ADCS2 = (0b001>>2);
  1665  000608  9CC1               	bcf	4033,6,c	;volatile
  1666                           
  1667                           ;ADC.c: 18:     ADCON0bits.ADON = 1;
  1668  00060A  80C2               	bsf	4034,0,c	;volatile
  1669  00060C  0012               	return		;funcret
  1670  00060E  FFFF               	dw	65535	; errata NOP
  1671  000610                     __end_of_ADC_vdInit:
  1672                           	opt callstack 0
  1673                           
  1674 ;; *************** function _ADC_u16getValue *****************
  1675 ;; Defined at:
  1676 ;;		line 21 in file "ADC.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  pin             1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  pin             1    6[COMRAM] unsigned char 
  1681 ;;  data            2    4[COMRAM] unsigned short 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2    0[COMRAM] unsigned short 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         2       0       0       0       0       0       0
  1692 ;;      Locals:         3       0       0       0       0       0       0
  1693 ;;      Temps:          2       0       0       0       0       0       0
  1694 ;;      Totals:         7       0       0       0       0       0       0
  1695 ;;Total ram usage:        7 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text11
  1706  000376                     __ptext11:
  1707                           	opt callstack 0
  1708  000376                     _ADC_u16getValue:
  1709                           	opt callstack 0
  1710  000376  FFFF               	dw	65535	; assembler added errata NOP
  1711                           
  1712                           ;incstack = 0
  1713                           ;ADC_u16getValue@pin stored from wreg
  1714  000378  6E53               	movwf	ADC_u16getValue@pin,c
  1715                           
  1716                           ;ADC.c: 22:     ADCON0bits.CHS = pin;
  1717  00037A  C053  F04F         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  1718  00037E  464F               	rlncf	??_ADC_u16getValue,f,c
  1719  000380  464F               	rlncf	??_ADC_u16getValue,f,c
  1720  000382  464F               	rlncf	??_ADC_u16getValue,f,c
  1721  000384  50C2               	movf	4034,w,c	;volatile
  1722  000386  184F               	xorwf	??_ADC_u16getValue,w,c
  1723  000388  0BC7               	andlw	-57
  1724  00038A  184F               	xorwf	??_ADC_u16getValue,w,c
  1725  00038C  6EC2               	movwf	4034,c	;volatile
  1726                           
  1727                           ;ADC.c: 23:     TRISA |= (1<<pin);
  1728  00038E  C053  F04F         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  1729  000392  0E01               	movlw	1
  1730  000394  6E50               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  1731  000396  2A4F               	incf	??_ADC_u16getValue,f,c
  1732  000398  D003               	goto	u984
  1733  00039A                     u985:
  1734  00039A  FFFF               	dw	65535	; assembler added errata NOP
  1735  00039C  90D8               	bcf	status,0,c
  1736  00039E  3650               	rlcf	??_ADC_u16getValue+1,f,c
  1737  0003A0                     u984:
  1738  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  1739  0003A2  2E4F               	decfsz	??_ADC_u16getValue,f,c
  1740  0003A4  D7FA               	goto	u985
  1741  0003A6  5050               	movf	??_ADC_u16getValue+1,w,c
  1742  0003A8  1292               	iorwf	3986,f,c	;volatile
  1743                           
  1744                           ;ADC.c: 24:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1745  0003AA  0E02               	movlw	2
  1746  0003AC  6E4F               	movwf	??_ADC_u16getValue& (0+255),c
  1747  0003AE  0EF2               	movlw	242
  1748  0003B0                     u1077:
  1749  0003B0  FFFF               	dw	65535	; errata NOP
  1750  0003B2  2EE8               	decfsz	wreg,f,c
  1751  0003B4  D7FD               	bra	u1077
  1752  0003B6  2E4F               	decfsz	??_ADC_u16getValue& (0+255),f,c
  1753  0003B8  D7FB               	bra	u1077
  1754  0003BA  D000               	nop2	
  1755                           
  1756                           ;ADC.c: 25:     ADCON0bits.GO = 1;
  1757  0003BC  84C2               	bsf	4034,2,c	;volatile
  1758  0003BE                     l403:
  1759  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  1760  0003C0  AC9E               	btfss	3998,6,c	;volatile
  1761  0003C2  D7FD               	goto	l403
  1762                           
  1763                           ;ADC.c: 27:     unsigned short int data = ( (ADRESH<<8)|(ADRESL) );
  1764  0003C4  50C3               	movf	4035,w,c	;volatile
  1765  0003C6  CFC4 F04F          	movff	4036,??_ADC_u16getValue	;volatile
  1766  0003CA  6A50               	clrf	(??_ADC_u16getValue+1)& (0+255),c
  1767  0003CC  C04F  F050         	movff	??_ADC_u16getValue,??_ADC_u16getValue+1
  1768  0003D0  6A4F               	clrf	??_ADC_u16getValue,c
  1769  0003D2  104F               	iorwf	??_ADC_u16getValue,w,c
  1770  0003D4  6E51               	movwf	ADC_u16getValue@data,c
  1771  0003D6  5050               	movf	??_ADC_u16getValue+1,w,c
  1772  0003D8  6E52               	movwf	ADC_u16getValue@data+1,c
  1773                           
  1774                           ;ADC.c: 28:     ADIF = 0;
  1775  0003DA  9C9E               	bcf	3998,6,c	;volatile
  1776                           
  1777                           ;ADC.c: 29:     return data;
  1778  0003DC  C051  F04D         	movff	ADC_u16getValue@data,?_ADC_u16getValue
  1779  0003E0  C052  F04E         	movff	ADC_u16getValue@data+1,?_ADC_u16getValue+1
  1780  0003E4  0012               	return		;funcret
  1781  0003E6  FFFF               	dw	65535	; errata NOP
  1782  0003E8                     __end_of_ADC_u16getValue:
  1783                           	opt callstack 0
  1784                           
  1785 ;; *************** function _ISR *****************
  1786 ;; Defined at:
  1787 ;;		line 56 in file "INT.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		None
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1801 ;;      Params:         0       0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		Interrupt level 2
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	intcode
  1815  000008                     __pintcode:
  1816                           	opt callstack 0
  1817  000008                     _ISR:
  1818                           	opt callstack 0
  1819  000008  FFFF               	dw	65535	; assembler added errata NOP
  1820                           
  1821                           ;incstack = 0
  1822  00000A  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1823                           
  1824                           ;INT.c: 59:         callback_INT0();
  1825  00000C  B2F2               	btfsc	4082,1,c	;volatile
  1826                           
  1827                           ;INT.c: 60:         INT0IF = 0;
  1828  00000E  92F2               	bcf	4082,1,c	;volatile
  1829                           
  1830                           ;INT.c: 63:         callback_INT1();
  1831                           
  1832                           ;INT.c: 61:     }
  1833  000010  B0F0               	btfsc	4080,0,c	;volatile
  1834                           
  1835                           ;INT.c: 64:         INT1IF = 0;
  1836  000012  90F0               	bcf	4080,0,c	;volatile
  1837                           
  1838                           ;INT.c: 67:         callback_INT2();
  1839                           
  1840                           ;INT.c: 65:     }
  1841  000014  B2F0               	btfsc	4080,1,c	;volatile
  1842                           
  1843                           ;INT.c: 68:         INT2IF = 0;
  1844  000016  92F0               	bcf	4080,1,c	;volatile
  1845                           
  1846                           ;INT.c: 71:         callback_INTonChange();
  1847                           
  1848                           ;INT.c: 69:     }
  1849  000018  B0F2               	btfsc	4082,0,c	;volatile
  1850                           
  1851                           ;INT.c: 72:         RBIF = 0;
  1852  00001A  90F2               	bcf	4082,0,c	;volatile
  1853                           
  1854                           ;INT.c: 77:         callback_TMR0();
  1855                           
  1856                           ;INT.c: 73:     }
  1857  00001C  B4F2               	btfsc	4082,2,c	;volatile
  1858                           
  1859                           ;INT.c: 78:         TMR0IF = 0;
  1860  00001E  94F2               	bcf	4082,2,c	;volatile
  1861                           
  1862                           ;INT.c: 83:         callback_CCP1();
  1863                           
  1864                           ;INT.c: 79:     }
  1865  000020  B49E               	btfsc	3998,2,c	;volatile
  1866                           
  1867                           ;INT.c: 84:         CCP1IF = 0;
  1868  000022  949E               	bcf	3998,2,c	;volatile
  1869  000024  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1870  000026  0011               	retfie		f
  1871  000028  FFFF               	dw	65535	; errata NOP
  1872  00002A                     __end_of_ISR:
  1873                           	opt callstack 0
  1874  00002A  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           	psect	rparam
  1877  0000                     
  1878                           	psect	temp
  1879  00005E                     btemp:
  1880                           	opt callstack 0
  1881  00005E                     	ds	1
  1882  0000                     int$flags	set	btemp
  1883  0000                     wtemp8	set	btemp+1
  1884  0000                     ttemp5	set	btemp+1
  1885  0000                     ttemp6	set	btemp+4
  1886  0000                     ttemp7	set	btemp+8
  1887                           tosu	equ	0xFFF
  1888                           tosh	equ	0xFFE
  1889                           tosl	equ	0xFFD
  1890                           stkptr	equ	0xFFC
  1891                           pclatu	equ	0xFFB
  1892                           pclath	equ	0xFFA
  1893                           pcl	equ	0xFF9
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           prodh	equ	0xFF4
  1899                           prodl	equ	0xFF3
  1900                           indf0	equ	0xFEF
  1901                           postinc0	equ	0xFEE
  1902                           postdec0	equ	0xFED
  1903                           preinc0	equ	0xFEC
  1904                           plusw0	equ	0xFEB
  1905                           fsr0h	equ	0xFEA
  1906                           fsr0l	equ	0xFE9
  1907                           wreg	equ	0xFE8
  1908                           indf1	equ	0xFE7
  1909                           postinc1	equ	0xFE6
  1910                           postdec1	equ	0xFE5
  1911                           preinc1	equ	0xFE4
  1912                           plusw1	equ	0xFE3
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           bsr	equ	0xFE0
  1916                           indf2	equ	0xFDF
  1917                           postinc2	equ	0xFDE
  1918                           postdec2	equ	0xFDD
  1919                           preinc2	equ	0xFDC
  1920                           plusw2	equ	0xFDB
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        56
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      93
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    callback_CCP1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_TMR0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INTonChange	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    DIO_vdInit@dev	PTR struct . size(2) Largest target is 7
		 -> BTN0(COMRAM[7]), LED3(COMRAM[7]), LED2(COMRAM[7]), LED1(COMRAM[7]), 
		 -> LED0(COMRAM[7]), 

    p_PORTDdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTDdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    _main->_UART_vdSendu16asASCI
    _UART_vdSendu16asASCI->_ADC_u16getValue
    _UART_vdSendu16asASCI->___lwdiv
    _UART_vdInit->___aldiv
    _DIO_vdInit->_DIO_vdWriteDirPin

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3020
                    _ADC_u16getValue
                         _ADC_vdInit
                         _DIO_vdInit
                         _INT_vdinit
                        _UART_vdInit
                    _UART_vdSendByte
               _UART_vdSendu16asASCI
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu16asASCI                                10     8      2    1352
                                              7 COMRAM    10     8      2
                    _ADC_u16getValue (ARG)
                    _UART_vdSendByte
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _UART_vdSendByte                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_vdInit                                          2     0      2     702
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _INT_vdinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DIO_vdInit                                           2     0      2     884
                                              5 COMRAM     2     0      2
                  _DIO_vdWriteDirPin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWriteDirPin                                    5     3      2     438
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_vdInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_u16getValue                                      7     5      2      67
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_u16getValue
   _ADC_vdInit
   _DIO_vdInit
     _DIO_vdWriteDirPin
   _INT_vdinit
   _UART_vdInit
     ___aldiv
   _UART_vdSendByte
   _UART_vdSendu16asASCI
     _ADC_u16getValue (ARG)
     _UART_vdSendByte (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      5D       1       73.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      15        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 24 16:28:19 2019

                                                 ?_DIO_vdInit 0052  
                                          ADC_u16getValue@pin 0053  
                                       UART_vdSendu16asASCI@i 0058  
                                        _callback_INTonChange 0045  
                                                 __CFG_BOR$ON 000000  
                                           _DIO_vdWriteDirPin 0030  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                                 __CFG_OSC$XT 000000  
                                          ?_DIO_vdWriteDirPin 004D  
                                         ADC_u16getValue@data 0051  
                                                         l170 0180  
                                                         l403 03BE  
                                                         l469 0290  
                                                         l963 04A8  
                                                         l973 04F8  
                                                __CFG_CPB$OFF 000000  
                                                         _PR2 000FCB  
                                                __CFG_CPD$OFF 000000  
                                                         _ISR 0008  
                                                         u814 00E0  
                                                         u815 00DA  
                                                         u824 0100  
                                                         u825 00FA  
                                                         u754 0050  
                                                         u930 047E  
                                                         u755 004A  
                                                         u844 0128  
                                                         u764 0070  
                                                         u845 0122  
                                                         u765 006A  
                                                         u854 0148  
                                                         u855 0142  
                                                         u784 0098  
                                                         u960 04D6  
                                                         u785 0092  
                                                         u794 00B8  
                                                         u890 0306  
                                                         u795 00B2  
                                                         u984 03A0  
                                                         u985 039A  
                                                __CFG_BORV$20 000000  
                                                         wreg 000FE8  
                                         ??_DIO_vdWriteDirPin 004F  
                                         __size_of_ADC_vdInit 0018  
                                                __CFG_LVP$OFF 000000  
                                                        ?_ISR 004D  
                                                __CFG_WDT$OFF 000000  
                                                        l1145 0614  
                                                        l1701 00A4  
                                                        l1703 00C6  
                                                        l1713 0134  
                                                        l1801 04EC  
                                                        l1707 00EC  
                                                        l1731 02B4  
                                                        l1709 010E  
                                                        l1717 0156  
                                                        l1743 02F2  
                                                        l1745 0300  
                                                        l1737 02CE  
                                                        l1841 0194  
                                                        l1691 0036  
                                                        l1763 0360  
                                                        l1755 0338  
                                                        l1773 046E  
                                                        l1861 0206  
                                                        l1695 005C  
                                                        l1759 0348  
                                                        l1775 0478  
                                                        l1863 0212  
                                                        l1697 007E  
                                                        l1785 049C  
                                                        l1793 04C6  
                                                        l1865 0226  
                                                        l1795 04D0  
                                                        l1867 0242  
                                                        l1869 0266  
                                                        l1879 043A  
                                                        _ADIF 007CF6  
                                                        _LED0 0032  
                                                        _BTN0 0016  
                                                        _LED1 002B  
                                                        _BRGH 007D62  
                                                        _LED2 0024  
                                                        _LED3 001D  
                                                        u1077 03B0  
                                                        _RBIF 007F90  
                                __end_of_UART_vdSendu16asASCI 0296  
                                                        _TXIF 007CF4  
                                                __CFG_STVR$ON 000000  
                                                        _main 03E8  
                                                        fsr2h 000FDA  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 005E  
                                                        start 002C  
                                                ___param_bank 000000  
                                   __end_of_DIO_vdWriteDirPin 0186  
                                                       ??_ISR 004D  
                                               __CFG_OSCS$OFF 000000  
                                                 ?_INT_vdinit 004D  
                                             __end_of___aldiv 0376  
                                             _ADC_u16getValue 0376  
                                                       ?_main 004D  
                                             __end_of___lwdiv 04B6  
                                             __end_of___lwmod 0506  
                                                       _SPBRG 000FAF  
                                                       _TRISA 000F92  
                                                       _TXREG 000FAD  
                                               __CFG_PWRT$OFF 000000  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                    UART_vdSendu16asASCI@data 0054  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                             _UART_vdSendByte 0610  
                                    UART_vdSendu16asASCI@temp 0059  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                         __size_of_DIO_vdInit 0034  
                                                       tablat 000FF5  
                                                       ttemp5 005F  
                                                       ttemp6 0062  
                                                       ttemp7 0066  
                                                       status 000FD8  
                                                       wtemp8 005F  
                                            _p_PORTAdirection 0011  
                                            _p_PORTBdirection 000D  
                                             __initialization 0506  
                                                __end_of_main 0456  
                                            _p_PORTCdirection 0009  
                                            _p_PORTDdirection 0005  
                                                      ??_main 005E  
                                               __activetblptr 000002  
                                             __CFG_CCP2MUX$ON 000000  
                                                      _CCP1IF 007CF2  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _CCPR1H 000FBF  
                                                      _CCPR1L 000FBE  
                                                      _INT0IF 007F91  
                                                      _INT1IF 007F80  
                                                      _INT2IF 007F81  
                                                      _TMR0IF 007F92  
                                              __CFG_WDTPS$128 000000  
                                                      _TRISC6 007CA6  
                                         __size_of_INT_vdinit 0018  
                                                ??_ADC_vdInit 004D  
                                     __end_of_ADC_u16getValue 03E8  
                                  __size_of_DIO_vdWriteDirPin 0156  
                                                   ??___aldiv 0055  
                                                ?_UART_vdInit 005B  
                                                   ??___lwdiv 0051  
                                                   ??___lwmod 0051  
                                                      clear_0 052C  
                                     __end_of_UART_vdSendByte 0622  
                                        _UART_vdSendu16asASCI 0186  
                                                __pdataCOMRAM 0001  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                               DIO_vdInit@dev 0052  
                                          __end_of_ADC_vdInit 0610  
                                                  __accesstop 0080  
                                     __end_of__initialization 0532  
                                             UART_vdInit@baud 005B  
                                               ___rparam_used 000001  
                                              __pcstackCOMRAM 004D  
                                                ??_DIO_vdInit 0054  
                                       ?_UART_vdSendu16asASCI 0054  
                                          __end_of_DIO_vdInit 05E0  
                                            ?_ADC_u16getValue 004D  
                                                ??_INT_vdinit 004D  
                                            ?_UART_vdSendByte 004D  
                                          __end_of_INT_vdinit 05F8  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     ___aldiv 0296  
                                                     ___lwdiv 0456  
                                      ??_UART_vdSendu16asASCI 0056  
                                                     ___lwmod 04B6  
                                                     __pcinit 0506  
                                                     __ramtop 0600  
                                        __size_of_UART_vdInit 0034  
                                                     __ptext0 03E8  
                                                     __ptext1 0186  
                                                     __ptext2 04B6  
                                                     __ptext3 0456  
                                                     __ptext4 0610  
                                                     __ptext5 0578  
                                                     __ptext6 0296  
                                                     __ptext7 05E0  
                                                     __ptext8 05AC  
                                                     __ptext9 0030  
                                               _callback_CCP1 0041  
                                               _callback_INT0 004B  
                                               _callback_INT1 0049  
                                               _callback_INT2 0047  
                                                   _T0CONbits 000FD5  
                                               _callback_TMR0 0043  
                                                __size_of_ISR 0022  
                                                   _T1CONbits 000FCD  
                                                   _T2CONbits 000FCA  
                                                   _T3CONbits 000FB1  
                                            ___aldiv@dividend 004D  
                                        end_of_initialization 0532  
                                               __Lmediumconst 0000  
                                                   _BTNstatus 0039  
                                                   _RCSTAbits 000FAB  
                                            ___aldiv@quotient 0057  
                                                     postdec1 000FE5  
                                                     postinc0 000FEE  
                                                   _TRISCbits 000F94  
                                         UART_vdSendByte@data 004D  
                                                 _CCP1CONbits 000FBD  
                                                   _TXSTAbits 000FAC  
                                       DIO_vdWriteDirPin@data 0051  
                                               __pidataCOMRAM 0540  
                                       DIO_vdWriteDirPin@port 004D  
                                         start_initialization 0506  
                                                 __end_of_ISR 002A  
                                                 _p_PORTAdata 0013  
                                                 _p_PORTBdata 000F  
                                                 _p_PORTCdata 000B  
                                                 _p_PORTDdata 0007  
                                                 __pbssCOMRAM 0039  
                                            ___lwdiv@dividend 004D  
                                                   __pintcode 0008  
                                                    ?___aldiv 004D  
                                              _prescaler_TMR2 0015  
                                                    ?___lwdiv 004D  
                                                    ?___lwmod 004D  
                                    __size_of_ADC_u16getValue 0072  
                                            ___lwdiv@quotient 0051  
                                    __size_of_UART_vdSendByte 0012  
                                             ___aldiv@divisor 0051  
                                             ___aldiv@counter 0055  
                                               ??_UART_vdInit 005D  
                               __size_of_UART_vdSendu16asASCI 0110  
                                                  _ADCON0bits 000FC2  
                                                  _ADCON1bits 000FC1  
                                                 _INTCON1bits 000FF2  
                                                 _INTCON2bits 000FF1  
                                                 _INTCON3bits 000FF0  
                                        DIO_vdWriteDirPin@pin 004E  
                                                   copy_data0 051A  
                                   UART_vdSendu16asASCI@temp2 0056  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                                  _ADC_vdInit 05F8  
                                            __size_of___aldiv 00E0  
                                            __size_of___lwdiv 0060  
                                            __size_of___lwmod 0050  
                                         __end_of_UART_vdInit 05AC  
                                             ___lwdiv@divisor 004F  
                                             ___lwdiv@counter 0053  
                                                    __ptext10 05F8  
                                                    __ptext11 0376  
                                           ??_ADC_u16getValue 004F  
                                                    _freq_PWM 0001  
                                               __size_of_main 006E  
                                           ??_UART_vdSendByte 004D  
                                                  _DIO_vdInit 05AC  
                                                    int$flags 005E  
                                                    intlevel2 0622  
                                            ___lwmod@dividend 004D  
                                                 ?_ADC_vdInit 004D  
                                                 _UART_vdInit 0578  
                                                  _INT_vdinit 05E0  
                                             ___lwmod@divisor 004F  
                                             ___lwmod@counter 0051  
                                                ___aldiv@sign 0056  
