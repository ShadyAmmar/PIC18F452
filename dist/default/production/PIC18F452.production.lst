

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 24 16:04:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F452 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  00052A                     __pidataCOMRAM:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for _freq_PWM
    67  00052A  A120               	dw	41248
    68  00052C  0007               	dw	7
    69                           
    70                           ;initializer for _p_PORTDdirection
    71  00052E  95                 	db	149
    72  00052F  0F                 	db	15
    73                           
    74                           ;initializer for _p_PORTDdata
    75  000530  83                 	db	131
    76  000531  0F                 	db	15
    77                           
    78                           ;initializer for _p_PORTCdirection
    79  000532  94                 	db	148
    80  000533  0F                 	db	15
    81                           
    82                           ;initializer for _p_PORTCdata
    83  000534  82                 	db	130
    84  000535  0F                 	db	15
    85                           
    86                           ;initializer for _p_PORTBdirection
    87  000536  93                 	db	147
    88  000537  0F                 	db	15
    89                           
    90                           ;initializer for _p_PORTBdata
    91  000538  81                 	db	129
    92  000539  0F                 	db	15
    93                           
    94                           ;initializer for _p_PORTAdirection
    95  00053A  92                 	db	146
    96  00053B  0F                 	db	15
    97                           
    98                           ;initializer for _p_PORTAdata
    99  00053C  80                 	db	128
   100  00053D  0F                 	db	15
   101                           
   102                           ;initializer for _prescaler_TMR2
   103  00053E  01                 	db	1
   104                           
   105                           ;initializer for _BTN0
   106  00053F  41                 	db	65
   107  000540  04                 	db	4
   108  000541  01                 	db	1
   109  000542  00                 	db	0
   110  000543  00                 	db	0
   111  000544  00                 	db	0
   112  000545  00                 	db	0
   113                           
   114                           ;initializer for _LED3
   115  000546  43                 	db	67
   116  000547  02                 	db	2
   117  000548  00                 	db	0
   118  000549  00                 	db	0
   119  00054A  00                 	db	0
   120  00054B  00                 	db	0
   121  00054C  00                 	db	0
   122                           
   123                           ;initializer for _LED2
   124  00054D  42                 	db	66
   125  00054E  02                 	db	2
   126  00054F  00                 	db	0
   127  000550  00                 	db	0
   128  000551  00                 	db	0
   129  000552  00                 	db	0
   130  000553  00                 	db	0
   131                           
   132                           ;initializer for _LED1
   133  000554  42                 	db	66
   134  000555  01                 	db	1
   135  000556  00                 	db	0
   136  000557  00                 	db	0
   137  000558  00                 	db	0
   138  000559  00                 	db	0
   139  00055A  00                 	db	0
   140                           
   141                           ;initializer for _LED0
   142  00055B  42                 	db	66
   143  00055C  00                 	db	0
   144  00055D  00                 	db	0
   145  00055E  00                 	db	0
   146  00055F  00                 	db	0
   147  000560  00                 	db	0
   148  000561  00                 	db	0
   149  0000                     _TXREG	set	4013
   150  0000                     _RCSTAbits	set	4011
   151  0000                     _TXSTAbits	set	4012
   152  0000                     _SPBRG	set	4015
   153  0000                     _ADRESL	set	4035
   154  0000                     _ADRESH	set	4036
   155  0000                     _TRISA	set	3986
   156  0000                     _ADCON1	set	4033
   157  0000                     _ADCON0	set	4034
   158  0000                     _T1CONbits	set	4045
   159  0000                     _CCPR1H	set	4031
   160  0000                     _CCPR1L	set	4030
   161  0000                     _T2CONbits	set	4042
   162  0000                     _PR2	set	4043
   163  0000                     _TRISCbits	set	3988
   164  0000                     _T3CONbits	set	4017
   165  0000                     _CCP1CONbits	set	4029
   166  0000                     _T0CONbits	set	4053
   167  0000                     _INTCON2bits	set	4081
   168  0000                     _INTCON3bits	set	4080
   169  0000                     _INTCON1bits	set	4082
   170  0000                     _TXIF	set	31988
   171  0000                     _TRISC6	set	31910
   172  0000                     _BRGH	set	32098
   173  0000                     _GO_nDONE	set	32274
   174  0000                     _CCP1IF	set	31986
   175  0000                     _TMR0IF	set	32658
   176  0000                     _RBIF	set	32656
   177  0000                     _INT2IF	set	32641
   178  0000                     _INT1IF	set	32640
   179  0000                     _INT0IF	set	32657
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  0004F0                     __pcinit:
   185                           	opt callstack 0
   186  0004F0                     start_initialization:
   187                           	opt callstack 0
   188  0004F0                     __initialization:
   189                           	opt callstack 0
   190                           
   191                           ; Initialize objects allocated to COMRAM (56 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193  0004F0  0E2A               	movlw	low __pidataCOMRAM
   194  0004F2  6EF6               	movwf	tblptrl,c
   195  0004F4  0E05               	movlw	high __pidataCOMRAM
   196  0004F6  6EF7               	movwf	tblptrh,c
   197  0004F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198  0004FA  6EF8               	movwf	tblptru,c
   199  0004FC  EE00  F001         	lfsr	0,__pdataCOMRAM
   200  000500  EE10 F038          	lfsr	1,56
   201  000504                     copy_data0:
   202  000504  0009               	tblrd		*+
   203  000506  CFF5 FFEE          	movff	tablat,postinc0
   204  00050A  50E5               	movf	postdec1,w,c
   205  00050C  50E1               	movf	fsr1l,w,c
   206  00050E  E1FA               	bnz	copy_data0
   207                           
   208                           ; Clear objects allocated to COMRAM (20 bytes)
   209  000510  EE00  F039         	lfsr	0,__pbssCOMRAM
   210  000514  0E14               	movlw	20
   211  000516                     clear_0:
   212  000516  6AEE               	clrf	postinc0,c
   213  000518  06E8               	decf	wreg,f,c
   214  00051A  E1FD               	bnz	clear_0
   215  00051C                     end_of_initialization:
   216                           	opt callstack 0
   217  00051C                     __end_of__initialization:
   218                           	opt callstack 0
   219  00051C  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  00051E  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  000520  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222  000522  6EF8               	movwf	tblptru,c
   223  000524  0100               	movlb	0
   224  000526  EFBB  F001         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227  000039                     __pbssCOMRAM:
   228                           	opt callstack 0
   229  000039                     	ds	8
   230  000041                     _callback_CCP1:
   231                           	opt callstack 0
   232  000041                     	ds	2
   233  000043                     _callback_TMR0:
   234                           	opt callstack 0
   235  000043                     	ds	2
   236  000045                     _callback_INTonChange:
   237                           	opt callstack 0
   238  000045                     	ds	2
   239  000047                     _callback_INT2:
   240                           	opt callstack 0
   241  000047                     	ds	2
   242  000049                     _callback_INT1:
   243                           	opt callstack 0
   244  000049                     	ds	2
   245  00004B                     _callback_INT0:
   246                           	opt callstack 0
   247  00004B                     	ds	2
   248                           
   249                           	psect	dataCOMRAM
   250  000001                     __pdataCOMRAM:
   251                           	opt callstack 0
   252  000001                     _freq_PWM:
   253                           	opt callstack 0
   254  000001                     	ds	4
   255  000005                     _p_PORTDdirection:
   256                           	opt callstack 0
   257  000005                     	ds	2
   258  000007                     _p_PORTDdata:
   259                           	opt callstack 0
   260  000007                     	ds	2
   261  000009                     _p_PORTCdirection:
   262                           	opt callstack 0
   263  000009                     	ds	2
   264  00000B                     _p_PORTCdata:
   265                           	opt callstack 0
   266  00000B                     	ds	2
   267  00000D                     _p_PORTBdirection:
   268                           	opt callstack 0
   269  00000D                     	ds	2
   270  00000F                     _p_PORTBdata:
   271                           	opt callstack 0
   272  00000F                     	ds	2
   273  000011                     _p_PORTAdirection:
   274                           	opt callstack 0
   275  000011                     	ds	2
   276  000013                     _p_PORTAdata:
   277                           	opt callstack 0
   278  000013                     	ds	2
   279  000015                     _prescaler_TMR2:
   280                           	opt callstack 0
   281  000015                     	ds	1
   282  000016                     _BTN0:
   283                           	opt callstack 0
   284  000016                     	ds	7
   285  00001D                     _LED3:
   286                           	opt callstack 0
   287  00001D                     	ds	7
   288  000024                     _LED2:
   289                           	opt callstack 0
   290  000024                     	ds	7
   291  00002B                     _LED1:
   292                           	opt callstack 0
   293  00002B                     	ds	7
   294  000032                     _LED0:
   295                           	opt callstack 0
   296  000032                     	ds	7
   297                           
   298                           	psect	cstackCOMRAM
   299  00004D                     __pcstackCOMRAM:
   300                           	opt callstack 0
   301  00004D                     ?_ADC_u16getValue:
   302                           	opt callstack 0
   303  00004D                     ?___lwdiv:
   304                           	opt callstack 0
   305  00004D                     ?___lwmod:
   306                           	opt callstack 0
   307  00004D                     ?___aldiv:
   308                           	opt callstack 0
   309  00004D                     DIO_vdWriteDirPin@port:
   310                           	opt callstack 0
   311  00004D                     UART_vdSendByte@data:
   312                           	opt callstack 0
   313  00004D                     ___lwdiv@dividend:
   314                           	opt callstack 0
   315  00004D                     ___lwmod@dividend:
   316                           	opt callstack 0
   317  00004D                     ___aldiv@dividend:
   318                           	opt callstack 0
   319                           
   320                           ; 4 bytes @ 0x0
   321  00004D                     	ds	1
   322  00004E                     DIO_vdWriteDirPin@pin:
   323                           	opt callstack 0
   324                           
   325                           ; 1 bytes @ 0x1
   326  00004E                     	ds	1
   327  00004F                     ??_ADC_u16getValue:
   328  00004F                     ??_DIO_vdWriteDirPin:
   329  00004F                     ___lwdiv@divisor:
   330                           	opt callstack 0
   331  00004F                     ___lwmod@divisor:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  00004F                     	ds	2
   336  000051                     DIO_vdWriteDirPin@data:
   337                           	opt callstack 0
   338  000051                     ADC_u16getValue@pin:
   339                           	opt callstack 0
   340  000051                     ___lwmod@counter:
   341                           	opt callstack 0
   342  000051                     ___lwdiv@quotient:
   343                           	opt callstack 0
   344  000051                     ___aldiv@divisor:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x4
   348  000051                     	ds	1
   349  000052                     DIO_vdInit@dev:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x5
   353  000052                     	ds	1
   354  000053                     ___lwdiv@counter:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0x6
   358  000053                     	ds	1
   359  000054                     UART_vdSendu16asASCI@data:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x7
   363  000054                     	ds	1
   364  000055                     ___aldiv@counter:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0x8
   368  000055                     	ds	1
   369  000056                     ___aldiv@sign:
   370                           	opt callstack 0
   371  000056                     UART_vdSendu16asASCI@temp2:
   372                           	opt callstack 0
   373                           
   374                           ; 2 bytes @ 0x9
   375  000056                     	ds	1
   376  000057                     ___aldiv@quotient:
   377                           	opt callstack 0
   378                           
   379                           ; 4 bytes @ 0xA
   380  000057                     	ds	1
   381  000058                     UART_vdSendu16asASCI@i:
   382                           	opt callstack 0
   383                           
   384                           ; 1 bytes @ 0xB
   385  000058                     	ds	1
   386  000059                     UART_vdSendu16asASCI@temp:
   387                           	opt callstack 0
   388                           
   389                           ; 5 bytes @ 0xC
   390  000059                     	ds	2
   391  00005B                     UART_vdInit@baud:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0xE
   395  00005B                     	ds	2
   396  00005D                     
   397                           ; 1 bytes @ 0x10
   398  00005D                     	ds	1
   399  00005E                     
   400                           ; 1 bytes @ 0x11
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 30 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   420 ;;      Params:         0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels required when called:    3
   426 ;; This function calls:
   427 ;;		_ADC_u16getValue
   428 ;;		_ADC_vdInit
   429 ;;		_DIO_vdInit
   430 ;;		_INT_vdinit
   431 ;;		_UART_vdInit
   432 ;;		_UART_vdSendByte
   433 ;;		_UART_vdSendu16asASCI
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text0
   440  000376                     __ptext0:
   441                           	opt callstack 0
   442  000376                     _main:
   443                           	opt callstack 0
   444  000376  FFFF               	dw	65535	; assembler added errata NOP
   445                           
   446                           ;main.c: 32:     DIO_vdInit(&LED0);
   447                           
   448                           ;incstack = 0
   449  000378  0E32               	movlw	low _LED0
   450  00037A  6E52               	movwf	DIO_vdInit@dev,c
   451  00037C  0E00               	movlw	high _LED0
   452  00037E  6E53               	movwf	DIO_vdInit@dev+1,c
   453  000380  ECCB  F002         	call	_DIO_vdInit	;wreg free
   454                           
   455                           ;main.c: 33:     DIO_vdInit(&LED1);
   456  000384  0E2B               	movlw	low _LED1
   457  000386  6E52               	movwf	DIO_vdInit@dev,c
   458  000388  0E00               	movlw	high _LED1
   459  00038A  6E53               	movwf	DIO_vdInit@dev+1,c
   460  00038C  ECCB  F002         	call	_DIO_vdInit	;wreg free
   461                           
   462                           ;main.c: 34:     DIO_vdInit(&LED2);
   463  000390  0E24               	movlw	low _LED2
   464  000392  6E52               	movwf	DIO_vdInit@dev,c
   465  000394  0E00               	movlw	high _LED2
   466  000396  6E53               	movwf	DIO_vdInit@dev+1,c
   467  000398  ECCB  F002         	call	_DIO_vdInit	;wreg free
   468                           
   469                           ;main.c: 35:     DIO_vdInit(&LED3);
   470  00039C  0E1D               	movlw	low _LED3
   471  00039E  6E52               	movwf	DIO_vdInit@dev,c
   472  0003A0  0E00               	movlw	high _LED3
   473  0003A2  6E53               	movwf	DIO_vdInit@dev+1,c
   474  0003A4  ECCB  F002         	call	_DIO_vdInit	;wreg free
   475                           
   476                           ;main.c: 36:     DIO_vdInit(&BTN0);
   477  0003A8  0E16               	movlw	low _BTN0
   478  0003AA  6E52               	movwf	DIO_vdInit@dev,c
   479  0003AC  0E00               	movlw	high _BTN0
   480  0003AE  6E53               	movwf	DIO_vdInit@dev+1,c
   481  0003B0  ECCB  F002         	call	_DIO_vdInit	;wreg free
   482                           
   483                           ;main.c: 38:     INT_vdinit();
   484  0003B4  ECE5  F002         	call	_INT_vdinit	;wreg free
   485                           
   486                           ;main.c: 39:     ADC_vdInit();
   487  0003B8  ECFA  F002         	call	_ADC_vdInit	;wreg free
   488                           
   489                           ;main.c: 40:     UART_vdInit(9600);
   490  0003BC  0E25               	movlw	37
   491  0003BE  6E5C               	movwf	UART_vdInit@baud+1,c
   492  0003C0  0E80               	movlw	128
   493  0003C2  6E5B               	movwf	UART_vdInit@baud,c
   494  0003C4  ECB1  F002         	call	_UART_vdInit	;wreg free
   495  0003C8                     l1865:
   496  0003C8  FFFF               	dw	65535	; assembler added errata NOP
   497                           
   498                           ;main.c: 43:         UART_vdSendu16asASCI(ADC_u16getValue(0));
   499  0003CA  0E00               	movlw	0
   500  0003CC  EC22  F002         	call	_ADC_u16getValue
   501  0003D0  C04D  F054         	movff	?_ADC_u16getValue,UART_vdSendu16asASCI@data
   502  0003D4  C04E  F055         	movff	?_ADC_u16getValue+1,UART_vdSendu16asASCI@data+1
   503  0003D8  ECC3  F000         	call	_UART_vdSendu16asASCI	;wreg free
   504                           
   505                           ;main.c: 44:         UART_vdSendByte('  ');
   506  0003DC  0E20               	movlw	32
   507  0003DE  ECF1  F002         	call	_UART_vdSendByte
   508  0003E2  D7F2               	goto	l1865
   509  0003E4                     __end_of_main:
   510                           	opt callstack 0
   511                           
   512 ;; *************** function _UART_vdSendu16asASCI *****************
   513 ;; Defined at:
   514 ;;		line 52 in file "UART.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  data            2    7[COMRAM] unsigned short 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  temp            5   12[COMRAM] unsigned char [5]
   519 ;;  temp2           2    9[COMRAM] unsigned short 
   520 ;;  i               1   11[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         2       0       0       0       0       0       0
   531 ;;      Locals:         8       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0
   533 ;;      Totals:        10       0       0       0       0       0       0
   534 ;;Total ram usage:       10 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    2
   537 ;; This function calls:
   538 ;;		_UART_vdSendByte
   539 ;;		___lwdiv
   540 ;;		___lwmod
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text1
   547  000186                     __ptext1:
   548                           	opt callstack 0
   549  000186                     _UART_vdSendu16asASCI:
   550                           	opt callstack 0
   551  000186  FFFF               	dw	65535	; assembler added errata NOP
   552                           
   553                           ;UART.c: 53:  unsigned char temp[5]; unsigned char i; unsigned short int temp2 = data;
   554                           
   555                           ;incstack = 0
   556  000188  C054  F056         	movff	UART_vdSendu16asASCI@data,UART_vdSendu16asASCI@temp2
   557  00018C  C055  F057         	movff	UART_vdSendu16asASCI@data+1,UART_vdSendu16asASCI@temp2+1
   558                           
   559                           ;UART.c: 54:  for(i=0;i<5;i++){
   560  000190  0E00               	movlw	0
   561  000192  6E58               	movwf	UART_vdSendu16asASCI@i,c
   562  000194                     l1827:
   563  000194  FFFF               	dw	65535	; assembler added errata NOP
   564                           
   565                           ;UART.c: 55:   temp[i] = temp2%10;
   566  000196  0E59               	movlw	low UART_vdSendu16asASCI@temp
   567  000198  2458               	addwf	UART_vdSendu16asASCI@i,w,c
   568  00019A  6ED9               	movwf	fsr2l,c
   569  00019C  6ADA               	clrf	fsr2h,c
   570  00019E  0E00               	movlw	high UART_vdSendu16asASCI@temp
   571  0001A0  22DA               	addwfc	fsr2h,f,c
   572  0001A2  C056  F04D         	movff	UART_vdSendu16asASCI@temp2,___lwmod@dividend
   573  0001A6  C057  F04E         	movff	UART_vdSendu16asASCI@temp2+1,___lwmod@dividend+1
   574  0001AA  0E00               	movlw	0
   575  0001AC  6E50               	movwf	___lwmod@divisor+1,c
   576  0001AE  0E0A               	movlw	10
   577  0001B0  6E4F               	movwf	___lwmod@divisor,c
   578  0001B2  EC50  F002         	call	___lwmod	;wreg free
   579  0001B6  504D               	movf	?___lwmod,w,c
   580  0001B8  6EDF               	movwf	indf2,c
   581                           
   582                           ;UART.c: 56:   temp2 /= 10;
   583  0001BA  C056  F04D         	movff	UART_vdSendu16asASCI@temp2,___lwdiv@dividend
   584  0001BE  C057  F04E         	movff	UART_vdSendu16asASCI@temp2+1,___lwdiv@dividend+1
   585  0001C2  0E00               	movlw	0
   586  0001C4  6E50               	movwf	___lwdiv@divisor+1,c
   587  0001C6  0E0A               	movlw	10
   588  0001C8  6E4F               	movwf	___lwdiv@divisor,c
   589  0001CA  ECF2  F001         	call	___lwdiv	;wreg free
   590  0001CE  C04D  F056         	movff	?___lwdiv,UART_vdSendu16asASCI@temp2
   591  0001D2  C04E  F057         	movff	?___lwdiv+1,UART_vdSendu16asASCI@temp2+1
   592                           
   593                           ;UART.c: 57:  }
   594  0001D6  2A58               	incf	UART_vdSendu16asASCI@i,f,c
   595  0001D8  0E04               	movlw	4
   596  0001DA  6458               	cpfsgt	UART_vdSendu16asASCI@i,c
   597  0001DC  D7DB               	goto	l1827
   598                           
   599                           ;UART.c: 58:  if(temp[4]==0){
   600  0001DE  505D               	movf	UART_vdSendu16asASCI@temp+4,w,c
   601  0001E0  A4D8               	btfss	status,2,c
   602  0001E2  D041               	goto	l1855
   603                           
   604                           ;UART.c: 59:   if(temp[3]==0){
   605  0001E4  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   606  0001E6  A4D8               	btfss	status,2,c
   607  0001E8  D02C               	goto	l1853
   608                           
   609                           ;UART.c: 60:    if(temp[2]==0){
   610  0001EA  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   611  0001EC  A4D8               	btfss	status,2,c
   612  0001EE  D01B               	goto	l1851
   613                           
   614                           ;UART.c: 61:                 if(temp[1]==0){
   615  0001F0  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   616  0001F2  A4D8               	btfss	status,2,c
   617  0001F4  D00E               	goto	l1849
   618                           
   619                           ;UART.c: 62:                     if(temp[0]==0){
   620  0001F6  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   621  0001F8  A4D8               	btfss	status,2,c
   622  0001FA  D005               	goto	l1847
   623                           
   624                           ;UART.c: 63:                         UART_vdSendByte(temp[0]+48);
   625  0001FC  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   626  0001FE  0F30               	addlw	48
   627  000200  ECF1  F002         	call	_UART_vdSendByte
   628                           
   629                           ;UART.c: 64:                     }else{
   630  000204  D045               	goto	l469
   631  000206                     l1847:
   632  000206  FFFF               	dw	65535	; assembler added errata NOP
   633                           
   634                           ;UART.c: 65:                         UART_vdSendByte(temp[0]+48);
   635  000208  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   636  00020A  0F30               	addlw	48
   637  00020C  ECF1  F002         	call	_UART_vdSendByte
   638  000210  D03F               	goto	l469
   639  000212                     l1849:
   640  000212  FFFF               	dw	65535	; assembler added errata NOP
   641                           
   642                           ;UART.c: 68:                     UART_vdSendByte(temp[1]+48);
   643  000214  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   644  000216  0F30               	addlw	48
   645  000218  ECF1  F002         	call	_UART_vdSendByte
   646                           
   647                           ;UART.c: 69:                     UART_vdSendByte(temp[0]+48);
   648  00021C  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   649  00021E  0F30               	addlw	48
   650  000220  ECF1  F002         	call	_UART_vdSendByte
   651  000224  D035               	goto	l469
   652  000226                     l1851:
   653  000226  FFFF               	dw	65535	; assembler added errata NOP
   654                           
   655                           ;UART.c: 72:                 UART_vdSendByte(temp[2]+48);
   656  000228  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   657  00022A  0F30               	addlw	48
   658  00022C  ECF1  F002         	call	_UART_vdSendByte
   659                           
   660                           ;UART.c: 73:                 UART_vdSendByte(temp[1]+48);
   661  000230  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   662  000232  0F30               	addlw	48
   663  000234  ECF1  F002         	call	_UART_vdSendByte
   664                           
   665                           ;UART.c: 74:                 UART_vdSendByte(temp[0]+48);
   666  000238  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   667  00023A  0F30               	addlw	48
   668  00023C  ECF1  F002         	call	_UART_vdSendByte
   669  000240  D027               	goto	l469
   670  000242                     l1853:
   671  000242  FFFF               	dw	65535	; assembler added errata NOP
   672                           
   673                           ;UART.c: 77:             UART_vdSendByte(temp[3]+48);
   674  000244  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   675  000246  0F30               	addlw	48
   676  000248  ECF1  F002         	call	_UART_vdSendByte
   677                           
   678                           ;UART.c: 78:             UART_vdSendByte(temp[2]+48);
   679  00024C  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   680  00024E  0F30               	addlw	48
   681  000250  ECF1  F002         	call	_UART_vdSendByte
   682                           
   683                           ;UART.c: 79:    UART_vdSendByte(temp[1]+48);
   684  000254  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   685  000256  0F30               	addlw	48
   686  000258  ECF1  F002         	call	_UART_vdSendByte
   687                           
   688                           ;UART.c: 80:    UART_vdSendByte(temp[0]+48);
   689  00025C  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   690  00025E  0F30               	addlw	48
   691  000260  ECF1  F002         	call	_UART_vdSendByte
   692  000264  D015               	goto	l469
   693  000266                     l1855:
   694  000266  FFFF               	dw	65535	; assembler added errata NOP
   695                           
   696                           ;UART.c: 83:         UART_vdSendByte(temp[4]+48);
   697  000268  505D               	movf	UART_vdSendu16asASCI@temp+4,w,c
   698  00026A  0F30               	addlw	48
   699  00026C  ECF1  F002         	call	_UART_vdSendByte
   700                           
   701                           ;UART.c: 84:         UART_vdSendByte(temp[3]+48);
   702  000270  505C               	movf	UART_vdSendu16asASCI@temp+3,w,c
   703  000272  0F30               	addlw	48
   704  000274  ECF1  F002         	call	_UART_vdSendByte
   705                           
   706                           ;UART.c: 85:   UART_vdSendByte(temp[2]+48);
   707  000278  505B               	movf	UART_vdSendu16asASCI@temp+2,w,c
   708  00027A  0F30               	addlw	48
   709  00027C  ECF1  F002         	call	_UART_vdSendByte
   710                           
   711                           ;UART.c: 86:   UART_vdSendByte(temp[1]+48);
   712  000280  505A               	movf	UART_vdSendu16asASCI@temp+1,w,c
   713  000282  0F30               	addlw	48
   714  000284  ECF1  F002         	call	_UART_vdSendByte
   715                           
   716                           ;UART.c: 87:   UART_vdSendByte(temp[0]+48);
   717  000288  5059               	movf	UART_vdSendu16asASCI@temp,w,c
   718  00028A  0F30               	addlw	48
   719  00028C  ECF1  F002         	call	_UART_vdSendByte
   720  000290                     l469:
   721  000290  FFFF               	dw	65535	; assembler added errata NOP
   722  000292  0012               	return		;funcret
   723  000294  FFFF               	dw	65535	; errata NOP
   724  000296                     __end_of_UART_vdSendu16asASCI:
   725                           	opt callstack 0
   726                           
   727 ;; *************** function ___lwmod *****************
   728 ;; Defined at:
   729 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  dividend        2    0[COMRAM] unsigned int 
   732 ;;  divisor         2    2[COMRAM] unsigned int 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  counter         1    4[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  2    0[COMRAM] unsigned int 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         4       0       0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0
   747 ;;      Totals:         5       0       0       0       0       0       0
   748 ;;Total ram usage:        5 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_UART_vdSendu16asASCI
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text2
   759  0004A0                     __ptext2:
   760                           	opt callstack 0
   761  0004A0                     ___lwmod:
   762                           	opt callstack 0
   763  0004A0  FFFF               	dw	65535	; assembler added errata NOP
   764                           
   765                           ;incstack = 0
   766  0004A2  504F               	movf	___lwmod@divisor,w,c
   767  0004A4  1050               	iorwf	___lwmod@divisor+1,w,c
   768  0004A6  B4D8               	btfsc	status,2,c
   769  0004A8  D01C               	goto	l973
   770  0004AA  0E01               	movlw	1
   771  0004AC  6E51               	movwf	___lwmod@counter,c
   772  0004AE  D005               	goto	l1785
   773  0004B0                     l1783:
   774  0004B0  FFFF               	dw	65535	; assembler added errata NOP
   775  0004B2  90D8               	bcf	status,0,c
   776  0004B4  364F               	rlcf	___lwmod@divisor,f,c
   777  0004B6  3650               	rlcf	___lwmod@divisor+1,f,c
   778  0004B8  2A51               	incf	___lwmod@counter,f,c
   779  0004BA                     l1785:
   780  0004BA  FFFF               	dw	65535	; assembler added errata NOP
   781  0004BC  AE50               	btfss	___lwmod@divisor+1,7,c
   782  0004BE  D7F8               	goto	l1783
   783  0004C0                     u960:
   784  0004C0  FFFF               	dw	65535	; assembler added errata NOP
   785  0004C2  504F               	movf	___lwmod@divisor,w,c
   786  0004C4  5C4D               	subwf	___lwmod@dividend,w,c
   787  0004C6  5050               	movf	___lwmod@divisor+1,w,c
   788  0004C8  584E               	subwfb	___lwmod@dividend+1,w,c
   789  0004CA  A0D8               	btfss	status,0,c
   790  0004CC  D004               	goto	l1791
   791  0004CE  504F               	movf	___lwmod@divisor,w,c
   792  0004D0  5E4D               	subwf	___lwmod@dividend,f,c
   793  0004D2  5050               	movf	___lwmod@divisor+1,w,c
   794  0004D4  5A4E               	subwfb	___lwmod@dividend+1,f,c
   795  0004D6                     l1791:
   796  0004D6  FFFF               	dw	65535	; assembler added errata NOP
   797  0004D8  90D8               	bcf	status,0,c
   798  0004DA  3250               	rrcf	___lwmod@divisor+1,f,c
   799  0004DC  324F               	rrcf	___lwmod@divisor,f,c
   800  0004DE  2E51               	decfsz	___lwmod@counter,f,c
   801  0004E0  D7EF               	goto	u960
   802  0004E2                     l973:
   803  0004E2  FFFF               	dw	65535	; assembler added errata NOP
   804  0004E4  C04D  F04D         	movff	___lwmod@dividend,?___lwmod
   805  0004E8  C04E  F04E         	movff	___lwmod@dividend+1,?___lwmod+1
   806  0004EC  0012               	return		;funcret
   807  0004EE  FFFF               	dw	65535	; errata NOP
   808  0004F0                     __end_of___lwmod:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function ___lwdiv *****************
   812 ;; Defined at:
   813 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  dividend        2    0[COMRAM] unsigned int 
   816 ;;  divisor         2    2[COMRAM] unsigned int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  quotient        2    4[COMRAM] unsigned int 
   819 ;;  counter         1    6[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  2    0[COMRAM] unsigned int 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   829 ;;      Params:         4       0       0       0       0       0       0
   830 ;;      Locals:         3       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0
   832 ;;      Totals:         7       0       0       0       0       0       0
   833 ;;Total ram usage:        7 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_UART_vdSendu16asASCI
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844  0003E4                     __ptext3:
   845                           	opt callstack 0
   846  0003E4                     ___lwdiv:
   847                           	opt callstack 0
   848  0003E4  FFFF               	dw	65535	; assembler added errata NOP
   849                           
   850                           ;incstack = 0
   851  0003E6  0E00               	movlw	0
   852  0003E8  6E52               	movwf	___lwdiv@quotient+1,c
   853  0003EA  0E00               	movlw	0
   854  0003EC  6E51               	movwf	___lwdiv@quotient,c
   855  0003EE  504F               	movf	___lwdiv@divisor,w,c
   856  0003F0  1050               	iorwf	___lwdiv@divisor+1,w,c
   857  0003F2  B4D8               	btfsc	status,2,c
   858  0003F4  D020               	goto	l963
   859  0003F6  0E01               	movlw	1
   860  0003F8  6E53               	movwf	___lwdiv@counter,c
   861  0003FA  D005               	goto	l1765
   862  0003FC                     l1763:
   863  0003FC  FFFF               	dw	65535	; assembler added errata NOP
   864  0003FE  90D8               	bcf	status,0,c
   865  000400  364F               	rlcf	___lwdiv@divisor,f,c
   866  000402  3650               	rlcf	___lwdiv@divisor+1,f,c
   867  000404  2A53               	incf	___lwdiv@counter,f,c
   868  000406                     l1765:
   869  000406  FFFF               	dw	65535	; assembler added errata NOP
   870  000408  AE50               	btfss	___lwdiv@divisor+1,7,c
   871  00040A  D7F8               	goto	l1763
   872  00040C                     u930:
   873  00040C  FFFF               	dw	65535	; assembler added errata NOP
   874  00040E  90D8               	bcf	status,0,c
   875  000410  3651               	rlcf	___lwdiv@quotient,f,c
   876  000412  3652               	rlcf	___lwdiv@quotient+1,f,c
   877  000414  504F               	movf	___lwdiv@divisor,w,c
   878  000416  5C4D               	subwf	___lwdiv@dividend,w,c
   879  000418  5050               	movf	___lwdiv@divisor+1,w,c
   880  00041A  584E               	subwfb	___lwdiv@dividend+1,w,c
   881  00041C  A0D8               	btfss	status,0,c
   882  00041E  D005               	goto	l1775
   883  000420  504F               	movf	___lwdiv@divisor,w,c
   884  000422  5E4D               	subwf	___lwdiv@dividend,f,c
   885  000424  5050               	movf	___lwdiv@divisor+1,w,c
   886  000426  5A4E               	subwfb	___lwdiv@dividend+1,f,c
   887  000428  8051               	bsf	___lwdiv@quotient,0,c
   888  00042A                     l1775:
   889  00042A  FFFF               	dw	65535	; assembler added errata NOP
   890  00042C  90D8               	bcf	status,0,c
   891  00042E  3250               	rrcf	___lwdiv@divisor+1,f,c
   892  000430  324F               	rrcf	___lwdiv@divisor,f,c
   893  000432  2E53               	decfsz	___lwdiv@counter,f,c
   894  000434  D7EB               	goto	u930
   895  000436                     l963:
   896  000436  FFFF               	dw	65535	; assembler added errata NOP
   897  000438  C051  F04D         	movff	___lwdiv@quotient,?___lwdiv
   898  00043C  C052  F04E         	movff	___lwdiv@quotient+1,?___lwdiv+1
   899  000440  0012               	return		;funcret
   900  000442  FFFF               	dw	65535	; errata NOP
   901  000444                     __end_of___lwdiv:
   902                           	opt callstack 0
   903                           
   904 ;; *************** function _UART_vdSendByte *****************
   905 ;; Defined at:
   906 ;;		line 22 in file "UART.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  data            1    wreg     unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  data            1    0[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   920 ;;      Params:         0       0       0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0
   923 ;;      Totals:         1       0       0       0       0       0       0
   924 ;;Total ram usage:        1 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;;		_UART_vdSendu16asASCI
   932 ;;		_UART_vdSendu8asASCI
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text4
   937  0005E2                     __ptext4:
   938                           	opt callstack 0
   939  0005E2                     _UART_vdSendByte:
   940                           	opt callstack 0
   941  0005E2  FFFF               	dw	65535	; assembler added errata NOP
   942                           
   943                           ;incstack = 0
   944                           ;UART_vdSendByte@data stored from wreg
   945  0005E4  6E4D               	movwf	UART_vdSendByte@data,c
   946  0005E6  FFFF               	dw	65535	; assembler added errata NOP
   947                           
   948                           ;UART.c: 23:  while (!TXIF);
   949  0005E8  A89E               	btfss	3998,4,c	;volatile
   950  0005EA  D7FD               	goto	l1145
   951                           
   952                           ;UART.c: 28:  TXREG = data;
   953  0005EC  C04D  FFAD         	movff	UART_vdSendByte@data,4013	;volatile
   954  0005F0  0012               	return		;funcret
   955  0005F2  FFFF               	dw	65535	; errata NOP
   956  0005F4                     __end_of_UART_vdSendByte:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _UART_vdInit *****************
   960 ;; Defined at:
   961 ;;		line 13 in file "UART.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  baud            2   14[COMRAM] unsigned short 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   975 ;;      Params:         2       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0
   978 ;;      Totals:         2       0       0       0       0       0       0
   979 ;;Total ram usage:        2 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    2
   982 ;; This function calls:
   983 ;;		___aldiv
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text5
   990  000562                     __ptext5:
   991                           	opt callstack 0
   992  000562                     _UART_vdInit:
   993                           	opt callstack 0
   994  000562  FFFF               	dw	65535	; assembler added errata NOP
   995                           
   996                           ;UART.c: 14:  BRGH = 1;
   997                           
   998                           ;incstack = 0
   999  000564  84AC               	bsf	4012,2,c	;volatile
  1000                           
  1001                           ;UART.c: 15:     SPBRG = ((4000000/16)/baud) - 1;
  1002  000566  0E90               	movlw	144
  1003  000568  6E4D               	movwf	___aldiv@dividend,c
  1004  00056A  0ED0               	movlw	208
  1005  00056C  6E4E               	movwf	___aldiv@dividend+1,c
  1006  00056E  0E03               	movlw	3
  1007  000570  6E4F               	movwf	___aldiv@dividend+2,c
  1008  000572  0E00               	movlw	0
  1009  000574  6E50               	movwf	___aldiv@dividend+3,c
  1010  000576  C05B  F051         	movff	UART_vdInit@baud,___aldiv@divisor
  1011  00057A  C05C  F052         	movff	UART_vdInit@baud+1,___aldiv@divisor+1
  1012  00057E  6A53               	clrf	___aldiv@divisor+2,c
  1013  000580  6A54               	clrf	___aldiv@divisor+3,c
  1014  000582  EC4B  F001         	call	___aldiv	;wreg free
  1015  000586  044D               	decf	?___aldiv,w,c
  1016  000588  6EAF               	movwf	4015,c	;volatile
  1017                           
  1018                           ;UART.c: 16:     TXSTAbits.SYNC = 0;
  1019  00058A  98AC               	bcf	4012,4,c	;volatile
  1020                           
  1021                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  1022  00058C  8EAB               	bsf	4011,7,c	;volatile
  1023                           
  1024                           ;UART.c: 18:     TRISC6 = 0;
  1025  00058E  9C94               	bcf	3988,6,c	;volatile
  1026                           
  1027                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1028  000590  8AAC               	bsf	4012,5,c	;volatile
  1029  000592  0012               	return		;funcret
  1030  000594  FFFF               	dw	65535	; errata NOP
  1031  000596                     __end_of_UART_vdInit:
  1032                           	opt callstack 0
  1033                           
  1034 ;; *************** function ___aldiv *****************
  1035 ;; Defined at:
  1036 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  dividend        4    0[COMRAM] long 
  1039 ;;  divisor         4    4[COMRAM] long 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  quotient        4   10[COMRAM] long 
  1042 ;;  sign            1    9[COMRAM] unsigned char 
  1043 ;;  counter         1    8[COMRAM] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  4    0[COMRAM] long 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1053 ;;      Params:         8       0       0       0       0       0       0
  1054 ;;      Locals:         6       0       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0
  1056 ;;      Totals:        14       0       0       0       0       0       0
  1057 ;;Total ram usage:       14 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_UART_vdInit
  1064 ;;		_CCP1_vdSetDutyCycle
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text6
  1069  000296                     __ptext6:
  1070                           	opt callstack 0
  1071  000296                     ___aldiv:
  1072                           	opt callstack 0
  1073  000296  FFFF               	dw	65535	; assembler added errata NOP
  1074                           
  1075                           ;incstack = 0
  1076  000298  0E00               	movlw	0
  1077  00029A  6E56               	movwf	___aldiv@sign,c
  1078  00029C  AE54               	btfss	___aldiv@divisor+3,7,c
  1079  00029E  D00A               	goto	l1721
  1080  0002A0  1E54               	comf	___aldiv@divisor+3,f,c
  1081  0002A2  1E53               	comf	___aldiv@divisor+2,f,c
  1082  0002A4  1E52               	comf	___aldiv@divisor+1,f,c
  1083  0002A6  6C51               	negf	___aldiv@divisor,c
  1084  0002A8  0E00               	movlw	0
  1085  0002AA  2252               	addwfc	___aldiv@divisor+1,f,c
  1086  0002AC  2253               	addwfc	___aldiv@divisor+2,f,c
  1087  0002AE  2254               	addwfc	___aldiv@divisor+3,f,c
  1088  0002B0  0E01               	movlw	1
  1089  0002B2  6E56               	movwf	___aldiv@sign,c
  1090  0002B4                     l1721:
  1091  0002B4  FFFF               	dw	65535	; assembler added errata NOP
  1092  0002B6  AE50               	btfss	___aldiv@dividend+3,7,c
  1093  0002B8  D00A               	goto	l1727
  1094  0002BA  1E50               	comf	___aldiv@dividend+3,f,c
  1095  0002BC  1E4F               	comf	___aldiv@dividend+2,f,c
  1096  0002BE  1E4E               	comf	___aldiv@dividend+1,f,c
  1097  0002C0  6C4D               	negf	___aldiv@dividend,c
  1098  0002C2  0E00               	movlw	0
  1099  0002C4  224E               	addwfc	___aldiv@dividend+1,f,c
  1100  0002C6  224F               	addwfc	___aldiv@dividend+2,f,c
  1101  0002C8  2250               	addwfc	___aldiv@dividend+3,f,c
  1102  0002CA  0E01               	movlw	1
  1103  0002CC  1A56               	xorwf	___aldiv@sign,f,c
  1104  0002CE                     l1727:
  1105  0002CE  FFFF               	dw	65535	; assembler added errata NOP
  1106  0002D0  0E00               	movlw	0
  1107  0002D2  6E57               	movwf	___aldiv@quotient,c
  1108  0002D4  0E00               	movlw	0
  1109  0002D6  6E58               	movwf	___aldiv@quotient+1,c
  1110  0002D8  0E00               	movlw	0
  1111  0002DA  6E59               	movwf	___aldiv@quotient+2,c
  1112  0002DC  0E00               	movlw	0
  1113  0002DE  6E5A               	movwf	___aldiv@quotient+3,c
  1114  0002E0  5051               	movf	___aldiv@divisor,w,c
  1115  0002E2  1052               	iorwf	___aldiv@divisor+1,w,c
  1116  0002E4  1053               	iorwf	___aldiv@divisor+2,w,c
  1117  0002E6  1054               	iorwf	___aldiv@divisor+3,w,c
  1118  0002E8  B4D8               	btfsc	status,2,c
  1119  0002EA  D02E               	goto	l1749
  1120  0002EC  0E01               	movlw	1
  1121  0002EE  6E55               	movwf	___aldiv@counter,c
  1122  0002F0  D007               	goto	l1735
  1123  0002F2                     l1733:
  1124  0002F2  FFFF               	dw	65535	; assembler added errata NOP
  1125  0002F4  90D8               	bcf	status,0,c
  1126  0002F6  3651               	rlcf	___aldiv@divisor,f,c
  1127  0002F8  3652               	rlcf	___aldiv@divisor+1,f,c
  1128  0002FA  3653               	rlcf	___aldiv@divisor+2,f,c
  1129  0002FC  3654               	rlcf	___aldiv@divisor+3,f,c
  1130  0002FE  2A55               	incf	___aldiv@counter,f,c
  1131  000300                     l1735:
  1132  000300  FFFF               	dw	65535	; assembler added errata NOP
  1133  000302  AE54               	btfss	___aldiv@divisor+3,7,c
  1134  000304  D7F6               	goto	l1733
  1135  000306                     u890:
  1136  000306  FFFF               	dw	65535	; assembler added errata NOP
  1137  000308  90D8               	bcf	status,0,c
  1138  00030A  3657               	rlcf	___aldiv@quotient,f,c
  1139  00030C  3658               	rlcf	___aldiv@quotient+1,f,c
  1140  00030E  3659               	rlcf	___aldiv@quotient+2,f,c
  1141  000310  365A               	rlcf	___aldiv@quotient+3,f,c
  1142  000312  5051               	movf	___aldiv@divisor,w,c
  1143  000314  5C4D               	subwf	___aldiv@dividend,w,c
  1144  000316  5052               	movf	___aldiv@divisor+1,w,c
  1145  000318  584E               	subwfb	___aldiv@dividend+1,w,c
  1146  00031A  5053               	movf	___aldiv@divisor+2,w,c
  1147  00031C  584F               	subwfb	___aldiv@dividend+2,w,c
  1148  00031E  5054               	movf	___aldiv@divisor+3,w,c
  1149  000320  5850               	subwfb	___aldiv@dividend+3,w,c
  1150  000322  A0D8               	btfss	status,0,c
  1151  000324  D009               	goto	l1745
  1152  000326  5051               	movf	___aldiv@divisor,w,c
  1153  000328  5E4D               	subwf	___aldiv@dividend,f,c
  1154  00032A  5052               	movf	___aldiv@divisor+1,w,c
  1155  00032C  5A4E               	subwfb	___aldiv@dividend+1,f,c
  1156  00032E  5053               	movf	___aldiv@divisor+2,w,c
  1157  000330  5A4F               	subwfb	___aldiv@dividend+2,f,c
  1158  000332  5054               	movf	___aldiv@divisor+3,w,c
  1159  000334  5A50               	subwfb	___aldiv@dividend+3,f,c
  1160  000336  8057               	bsf	___aldiv@quotient,0,c
  1161  000338                     l1745:
  1162  000338  FFFF               	dw	65535	; assembler added errata NOP
  1163  00033A  90D8               	bcf	status,0,c
  1164  00033C  3254               	rrcf	___aldiv@divisor+3,f,c
  1165  00033E  3253               	rrcf	___aldiv@divisor+2,f,c
  1166  000340  3252               	rrcf	___aldiv@divisor+1,f,c
  1167  000342  3251               	rrcf	___aldiv@divisor,f,c
  1168  000344  2E55               	decfsz	___aldiv@counter,f,c
  1169  000346  D7DF               	goto	u890
  1170  000348                     l1749:
  1171  000348  FFFF               	dw	65535	; assembler added errata NOP
  1172  00034A  5056               	movf	___aldiv@sign,w,c
  1173  00034C  B4D8               	btfsc	status,2,c
  1174  00034E  D008               	goto	l1753
  1175  000350  1E5A               	comf	___aldiv@quotient+3,f,c
  1176  000352  1E59               	comf	___aldiv@quotient+2,f,c
  1177  000354  1E58               	comf	___aldiv@quotient+1,f,c
  1178  000356  6C57               	negf	___aldiv@quotient,c
  1179  000358  0E00               	movlw	0
  1180  00035A  2258               	addwfc	___aldiv@quotient+1,f,c
  1181  00035C  2259               	addwfc	___aldiv@quotient+2,f,c
  1182  00035E  225A               	addwfc	___aldiv@quotient+3,f,c
  1183  000360                     l1753:
  1184  000360  FFFF               	dw	65535	; assembler added errata NOP
  1185  000362  C057  F04D         	movff	___aldiv@quotient,?___aldiv
  1186  000366  C058  F04E         	movff	___aldiv@quotient+1,?___aldiv+1
  1187  00036A  C059  F04F         	movff	___aldiv@quotient+2,?___aldiv+2
  1188  00036E  C05A  F050         	movff	___aldiv@quotient+3,?___aldiv+3
  1189  000372  0012               	return		;funcret
  1190  000374  FFFF               	dw	65535	; errata NOP
  1191  000376                     __end_of___aldiv:
  1192                           	opt callstack 0
  1193                           
  1194 ;; *************** function _INT_vdinit *****************
  1195 ;; Defined at:
  1196 ;;		line 18 in file "INT.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		None
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1210 ;;      Params:         0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text7
  1225  0005CA                     __ptext7:
  1226                           	opt callstack 0
  1227  0005CA                     _INT_vdinit:
  1228                           	opt callstack 0
  1229  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  1230                           
  1231                           ;INT.c: 19:     INTCON1bits.GIE = 1;
  1232                           
  1233                           ;incstack = 0
  1234  0005CC  8EF2               	bsf	4082,7,c	;volatile
  1235                           
  1236                           ;INT.c: 22:     INTCON1bits.INT0IE = 0;
  1237  0005CE  98F2               	bcf	4082,4,c	;volatile
  1238                           
  1239                           ;INT.c: 23:     INTCON3bits.INT1IE = 0;
  1240  0005D0  96F0               	bcf	4080,3,c	;volatile
  1241                           
  1242                           ;INT.c: 24:     INTCON3bits.INT2IE = 0;
  1243  0005D2  98F0               	bcf	4080,4,c	;volatile
  1244                           
  1245                           ;INT.c: 26:     INTCON2bits.INTEDG0 = 1;
  1246  0005D4  8CF1               	bsf	4081,6,c	;volatile
  1247                           
  1248                           ;INT.c: 27:     INTCON2bits.INTEDG1 = 1;
  1249  0005D6  8AF1               	bsf	4081,5,c	;volatile
  1250                           
  1251                           ;INT.c: 28:     INTCON2bits.INTEDG2 = 1;
  1252  0005D8  88F1               	bsf	4081,4,c	;volatile
  1253                           
  1254                           ;INT.c: 31:     INTCON1bits.RBIE = 1;
  1255  0005DA  86F2               	bsf	4082,3,c	;volatile
  1256                           
  1257                           ;INT.c: 34:     INTCON1bits.TMR0IE = 1;
  1258  0005DC  8AF2               	bsf	4082,5,c	;volatile
  1259  0005DE  0012               	return		;funcret
  1260  0005E0  FFFF               	dw	65535	; errata NOP
  1261  0005E2                     __end_of_INT_vdinit:
  1262                           	opt callstack 0
  1263                           
  1264 ;; *************** function _DIO_vdInit *****************
  1265 ;; Defined at:
  1266 ;;		line 15 in file "DIO.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  dev             2    5[COMRAM] PTR struct .
  1269 ;;		 -> BTN0(7), LED3(7), LED2(7), LED1(7), 
  1270 ;;		 -> LED0(7), 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1282 ;;      Params:         2       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0
  1285 ;;      Totals:         2       0       0       0       0       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		_DIO_vdWriteDirPin
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text8
  1297  000596                     __ptext8:
  1298                           	opt callstack 0
  1299  000596                     _DIO_vdInit:
  1300                           	opt callstack 0
  1301  000596  FFFF               	dw	65535	; assembler added errata NOP
  1302                           
  1303                           ;DIO.c: 16:     DIO_vdWriteDirPin(dev->mode,dev->PORT,dev->pin);
  1304                           
  1305                           ;incstack = 0
  1306  000598  C052  FFD9         	movff	DIO_vdInit@dev,fsr2l
  1307  00059C  C053  FFDA         	movff	DIO_vdInit@dev+1,fsr2h
  1308  0005A0  50DF               	movf	indf2,w,c
  1309  0005A2  6E4D               	movwf	DIO_vdWriteDirPin@port,c
  1310  0005A4  EE20 F001          	lfsr	2,1
  1311  0005A8  5052               	movf	DIO_vdInit@dev,w,c
  1312  0005AA  26D9               	addwf	fsr2l,f,c
  1313  0005AC  5053               	movf	DIO_vdInit@dev+1,w,c
  1314  0005AE  22DA               	addwfc	fsr2h,f,c
  1315  0005B0  50DF               	movf	indf2,w,c
  1316  0005B2  6E4E               	movwf	DIO_vdWriteDirPin@pin,c
  1317  0005B4  EE20 F002          	lfsr	2,2
  1318  0005B8  5052               	movf	DIO_vdInit@dev,w,c
  1319  0005BA  26D9               	addwf	fsr2l,f,c
  1320  0005BC  5053               	movf	DIO_vdInit@dev+1,w,c
  1321  0005BE  22DA               	addwfc	fsr2h,f,c
  1322  0005C0  50DF               	movf	indf2,w,c
  1323  0005C2  EC18  F000         	call	_DIO_vdWriteDirPin
  1324  0005C6  0012               	return		;funcret
  1325  0005C8  FFFF               	dw	65535	; errata NOP
  1326  0005CA                     __end_of_DIO_vdInit:
  1327                           	opt callstack 0
  1328                           
  1329 ;; *************** function _DIO_vdWriteDirPin *****************
  1330 ;; Defined at:
  1331 ;;		line 52 in file "DIO.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  data            1    wreg     unsigned char 
  1334 ;;  port            1    0[COMRAM] unsigned char 
  1335 ;;  pin             1    1[COMRAM] unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  data            1    4[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1347 ;;      Params:         2       0       0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0
  1349 ;;      Temps:          2       0       0       0       0       0       0
  1350 ;;      Totals:         5       0       0       0       0       0       0
  1351 ;;Total ram usage:        5 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_DIO_vdInit
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text9
  1362  000030                     __ptext9:
  1363                           	opt callstack 0
  1364  000030                     _DIO_vdWriteDirPin:
  1365                           	opt callstack 0
  1366  000030  FFFF               	dw	65535	; assembler added errata NOP
  1367                           
  1368                           ;incstack = 0
  1369                           ;DIO_vdWriteDirPin@data stored from wreg
  1370  000032  6E51               	movwf	DIO_vdWriteDirPin@data,c
  1371                           
  1372                           ;DIO.c: 53:  switch(port){
  1373  000034  D090               	goto	l1707
  1374  000036                     l1681:
  1375  000036  FFFF               	dw	65535	; assembler added errata NOP
  1376                           
  1377                           ;DIO.c: 55:    if(data){
  1378  000038  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1379  00003A  B4D8               	btfsc	status,2,c
  1380  00003C  D00F               	goto	l1685
  1381                           
  1382                           ;DIO.c: 56:     (*p_PORTAdirection).PORT |= (1<<pin);
  1383  00003E  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1384  000042  0E01               	movlw	1
  1385  000044  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1386  000046  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1387  000048  D003               	goto	u754
  1388  00004A                     u755:
  1389  00004A  FFFF               	dw	65535	; assembler added errata NOP
  1390  00004C  90D8               	bcf	status,0,c
  1391  00004E  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1392  000050                     u754:
  1393  000050  FFFF               	dw	65535	; assembler added errata NOP
  1394  000052  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1395  000054  D7FA               	goto	u755
  1396  000056  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1397  000058  1292               	iorwf	3986,f,c	;volatile
  1398                           
  1399                           ;DIO.c: 57:    }else{
  1400  00005A  D092               	goto	l170
  1401  00005C                     l1685:
  1402  00005C  FFFF               	dw	65535	; assembler added errata NOP
  1403                           
  1404                           ;DIO.c: 58:     (*p_PORTAdirection).PORT &= ~(1<<pin);
  1405  00005E  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1406  000062  0E01               	movlw	1
  1407  000064  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1408  000066  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1409  000068  D003               	goto	u764
  1410  00006A                     u765:
  1411  00006A  FFFF               	dw	65535	; assembler added errata NOP
  1412  00006C  90D8               	bcf	status,0,c
  1413  00006E  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1414  000070                     u764:
  1415  000070  FFFF               	dw	65535	; assembler added errata NOP
  1416  000072  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1417  000074  D7FA               	goto	u765
  1418  000076  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1419  000078  0AFF               	xorlw	255
  1420  00007A  1692               	andwf	3986,f,c	;volatile
  1421  00007C  D081               	goto	l170
  1422  00007E                     l1687:
  1423  00007E  FFFF               	dw	65535	; assembler added errata NOP
  1424                           
  1425                           ;DIO.c: 62:    if(data){
  1426  000080  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1427  000082  B4D8               	btfsc	status,2,c
  1428  000084  D00F               	goto	l1691
  1429                           
  1430                           ;DIO.c: 63:     (*p_PORTBdirection).PORT |= (1<<pin);
  1431  000086  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1432  00008A  0E01               	movlw	1
  1433  00008C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1434  00008E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1435  000090  D003               	goto	u784
  1436  000092                     u785:
  1437  000092  FFFF               	dw	65535	; assembler added errata NOP
  1438  000094  90D8               	bcf	status,0,c
  1439  000096  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1440  000098                     u784:
  1441  000098  FFFF               	dw	65535	; assembler added errata NOP
  1442  00009A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1443  00009C  D7FA               	goto	u785
  1444  00009E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1445  0000A0  1293               	iorwf	3987,f,c	;volatile
  1446                           
  1447                           ;DIO.c: 64:     }else{
  1448  0000A2  D06E               	goto	l170
  1449  0000A4                     l1691:
  1450  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  1451                           
  1452                           ;DIO.c: 65:     (*p_PORTBdirection).PORT &= ~(1<<pin);
  1453  0000A6  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1454  0000AA  0E01               	movlw	1
  1455  0000AC  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1456  0000AE  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1457  0000B0  D003               	goto	u794
  1458  0000B2                     u795:
  1459  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  1460  0000B4  90D8               	bcf	status,0,c
  1461  0000B6  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1462  0000B8                     u794:
  1463  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  1464  0000BA  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1465  0000BC  D7FA               	goto	u795
  1466  0000BE  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1467  0000C0  0AFF               	xorlw	255
  1468  0000C2  1693               	andwf	3987,f,c	;volatile
  1469  0000C4  D05D               	goto	l170
  1470  0000C6                     l1693:
  1471  0000C6  FFFF               	dw	65535	; assembler added errata NOP
  1472                           
  1473                           ;DIO.c: 69:    if(data){
  1474  0000C8  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1475  0000CA  B4D8               	btfsc	status,2,c
  1476  0000CC  D00F               	goto	l1697
  1477                           
  1478                           ;DIO.c: 70:     (*p_PORTCdirection).PORT |= (1<<pin);
  1479  0000CE  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1480  0000D2  0E01               	movlw	1
  1481  0000D4  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1482  0000D6  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1483  0000D8  D003               	goto	u814
  1484  0000DA                     u815:
  1485  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  1486  0000DC  90D8               	bcf	status,0,c
  1487  0000DE  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1488  0000E0                     u814:
  1489  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  1490  0000E2  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1491  0000E4  D7FA               	goto	u815
  1492  0000E6  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1493  0000E8  1294               	iorwf	3988,f,c	;volatile
  1494                           
  1495                           ;DIO.c: 71:     }else{
  1496  0000EA  D04A               	goto	l170
  1497  0000EC                     l1697:
  1498  0000EC  FFFF               	dw	65535	; assembler added errata NOP
  1499                           
  1500                           ;DIO.c: 72:     (*p_PORTCdirection).PORT &= ~(1<<pin);
  1501  0000EE  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1502  0000F2  0E01               	movlw	1
  1503  0000F4  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1504  0000F6  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1505  0000F8  D003               	goto	u824
  1506  0000FA                     u825:
  1507  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  1508  0000FC  90D8               	bcf	status,0,c
  1509  0000FE  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1510  000100                     u824:
  1511  000100  FFFF               	dw	65535	; assembler added errata NOP
  1512  000102  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1513  000104  D7FA               	goto	u825
  1514  000106  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1515  000108  0AFF               	xorlw	255
  1516  00010A  1694               	andwf	3988,f,c	;volatile
  1517  00010C  D039               	goto	l170
  1518  00010E                     l1699:
  1519  00010E  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ;DIO.c: 76:    if(data){
  1522  000110  5051               	movf	DIO_vdWriteDirPin@data,w,c
  1523  000112  B4D8               	btfsc	status,2,c
  1524  000114  D00F               	goto	l1703
  1525                           
  1526                           ;DIO.c: 77:     (*p_PORTDdirection).PORT |= (1<<pin);
  1527  000116  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1528  00011A  0E01               	movlw	1
  1529  00011C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1530  00011E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1531  000120  D003               	goto	u844
  1532  000122                     u845:
  1533  000122  FFFF               	dw	65535	; assembler added errata NOP
  1534  000124  90D8               	bcf	status,0,c
  1535  000126  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1536  000128                     u844:
  1537  000128  FFFF               	dw	65535	; assembler added errata NOP
  1538  00012A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1539  00012C  D7FA               	goto	u845
  1540  00012E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1541  000130  1295               	iorwf	3989,f,c	;volatile
  1542                           
  1543                           ;DIO.c: 78:     }else{
  1544  000132  D026               	goto	l170
  1545  000134                     l1703:
  1546  000134  FFFF               	dw	65535	; assembler added errata NOP
  1547                           
  1548                           ;DIO.c: 79:     (*p_PORTDdirection).PORT &= ~(1<<pin);
  1549  000136  C04E  F04F         	movff	DIO_vdWriteDirPin@pin,??_DIO_vdWriteDirPin
  1550  00013A  0E01               	movlw	1
  1551  00013C  6E50               	movwf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1552  00013E  2A4F               	incf	??_DIO_vdWriteDirPin,f,c
  1553  000140  D003               	goto	u854
  1554  000142                     u855:
  1555  000142  FFFF               	dw	65535	; assembler added errata NOP
  1556  000144  90D8               	bcf	status,0,c
  1557  000146  3650               	rlcf	??_DIO_vdWriteDirPin+1,f,c
  1558  000148                     u854:
  1559  000148  FFFF               	dw	65535	; assembler added errata NOP
  1560  00014A  2E4F               	decfsz	??_DIO_vdWriteDirPin,f,c
  1561  00014C  D7FA               	goto	u855
  1562  00014E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1563  000150  0AFF               	xorlw	255
  1564  000152  1695               	andwf	3989,f,c	;volatile
  1565  000154  D015               	goto	l170
  1566  000156                     l1707:
  1567  000156  FFFF               	dw	65535	; assembler added errata NOP
  1568  000158  504D               	movf	DIO_vdWriteDirPin@port,w,c
  1569  00015A  6E4F               	movwf	??_DIO_vdWriteDirPin& (0+255),c
  1570  00015C  6A50               	clrf	(??_DIO_vdWriteDirPin+1)& (0+255),c
  1571                           
  1572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1573                           ; Switch size 1, requested type "simple"
  1574                           ; Number of cases is 1, Range of values is 0 to 0
  1575                           ; switch strategies available:
  1576                           ; Name         Instructions Cycles
  1577                           ; simple_byte            4     3 (average)
  1578                           ;	Chosen strategy is simple_byte
  1579  00015E  5050               	movf	??_DIO_vdWriteDirPin+1,w,c
  1580  000160  0A00               	xorlw	0	; case 0
  1581  000162  A4D8               	btfss	status,2,c
  1582  000164  D00D               	goto	l170
  1583                           
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 4, Range of values is 65 to 68
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           13     7 (average)
  1589                           ;	Chosen strategy is simple_byte
  1590  000166  504F               	movf	??_DIO_vdWriteDirPin,w,c
  1591  000168  0A41               	xorlw	65	; case 65
  1592  00016A  B4D8               	btfsc	status,2,c
  1593  00016C  D764               	goto	l1681
  1594  00016E  0A03               	xorlw	3	; case 66
  1595  000170  B4D8               	btfsc	status,2,c
  1596  000172  D785               	goto	l1687
  1597  000174  0A01               	xorlw	1	; case 67
  1598  000176  B4D8               	btfsc	status,2,c
  1599  000178  D7A6               	goto	l1693
  1600  00017A  0A07               	xorlw	7	; case 68
  1601  00017C  B4D8               	btfsc	status,2,c
  1602  00017E  D7C7               	goto	l1699
  1603  000180                     l170:
  1604  000180  FFFF               	dw	65535	; assembler added errata NOP
  1605  000182  0012               	return		;funcret
  1606  000184  FFFF               	dw	65535	; errata NOP
  1607  000186                     __end_of_DIO_vdWriteDirPin:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _ADC_vdInit *****************
  1611 ;; Defined at:
  1612 ;;		line 13 in file "ADC.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1626 ;;      Params:         0       0       0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text10
  1641  0005F4                     __ptext10:
  1642                           	opt callstack 0
  1643  0005F4                     _ADC_vdInit:
  1644                           	opt callstack 0
  1645  0005F4  FFFF               	dw	65535	; assembler added errata NOP
  1646                           
  1647                           ;ADC.c: 19:     ADCON0 = 0x41;
  1648                           
  1649                           ;incstack = 0
  1650  0005F6  0E41               	movlw	65
  1651  0005F8  6EC2               	movwf	4034,c	;volatile
  1652                           
  1653                           ;ADC.c: 20:    ADCON1 = 0xC0;
  1654  0005FA  0EC0               	movlw	192
  1655  0005FC  6EC1               	movwf	4033,c	;volatile
  1656  0005FE  0012               	return		;funcret
  1657  000600  FFFF               	dw	65535	; errata NOP
  1658  000602                     __end_of_ADC_vdInit:
  1659                           	opt callstack 0
  1660                           
  1661 ;; *************** function _ADC_u16getValue *****************
  1662 ;; Defined at:
  1663 ;;		line 24 in file "ADC.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  pin             1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  pin             1    4[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2    0[COMRAM] unsigned short 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         2       0       0       0       0       0       0
  1678 ;;      Locals:         1       0       0       0       0       0       0
  1679 ;;      Temps:          2       0       0       0       0       0       0
  1680 ;;      Totals:         5       0       0       0       0       0       0
  1681 ;;Total ram usage:        5 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text11
  1692  000444                     __ptext11:
  1693                           	opt callstack 0
  1694  000444                     _ADC_u16getValue:
  1695                           	opt callstack 0
  1696  000444  FFFF               	dw	65535	; assembler added errata NOP
  1697                           
  1698                           ;incstack = 0
  1699                           ;ADC_u16getValue@pin stored from wreg
  1700  000446  6E51               	movwf	ADC_u16getValue@pin,c
  1701                           
  1702                           ;ADC.c: 33:     ADCON0 &= 0xC5;
  1703  000448  0EC5               	movlw	197
  1704  00044A  16C2               	andwf	4034,f,c	;volatile
  1705                           
  1706                           ;ADC.c: 34:     ADCON0 |= pin<<3;
  1707  00044C  3851               	swapf	ADC_u16getValue@pin,w,c	;volatile
  1708  00044E  42E8               	rrncf	wreg,f,c
  1709  000450  0BF8               	andlw	248
  1710  000452  12C2               	iorwf	4034,f,c	;volatile
  1711                           
  1712                           ;ADC.c: 35:     TRISA |= (1<<pin);
  1713  000454  C051  F04F         	movff	ADC_u16getValue@pin,??_ADC_u16getValue
  1714  000458  0E01               	movlw	1
  1715  00045A  6E50               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  1716  00045C  2A4F               	incf	??_ADC_u16getValue,f,c
  1717  00045E  D003               	goto	u984
  1718  000460                     u985:
  1719  000460  FFFF               	dw	65535	; assembler added errata NOP
  1720  000462  90D8               	bcf	status,0,c
  1721  000464  3650               	rlcf	??_ADC_u16getValue+1,f,c
  1722  000466                     u984:
  1723  000466  FFFF               	dw	65535	; assembler added errata NOP
  1724  000468  2E4F               	decfsz	??_ADC_u16getValue,f,c
  1725  00046A  D7FA               	goto	u985
  1726  00046C  5050               	movf	??_ADC_u16getValue+1,w,c
  1727  00046E  1292               	iorwf	3986,f,c	;volatile
  1728                           
  1729                           ;ADC.c: 36:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1730  000470  0E02               	movlw	2
  1731  000472  6E4F               	movwf	??_ADC_u16getValue& (0+255),c
  1732  000474  0EF2               	movlw	242
  1733  000476                     u1077:
  1734  000476  FFFF               	dw	65535	; errata NOP
  1735  000478  2EE8               	decfsz	wreg,f,c
  1736  00047A  D7FD               	bra	u1077
  1737  00047C  2E4F               	decfsz	??_ADC_u16getValue& (0+255),f,c
  1738  00047E  D7FB               	bra	u1077
  1739  000480  D000               	nop2	
  1740                           
  1741                           ;ADC.c: 37:     GO_nDONE = 1;
  1742  000482  84C2               	bsf	4034,2,c	;volatile
  1743  000484                     l403:
  1744  000484  FFFF               	dw	65535	; assembler added errata NOP
  1745  000486  B4C2               	btfsc	4034,2,c	;volatile
  1746  000488  D7FD               	goto	l403
  1747                           
  1748                           ;ADC.c: 39:     return ((ADRESH<<8)+ADRESL);
  1749  00048A  50C4               	movf	4036,w,c	;volatile
  1750  00048C  6E50               	movwf	(??_ADC_u16getValue+1)& (0+255),c
  1751  00048E  6A4F               	clrf	??_ADC_u16getValue& (0+255),c
  1752  000490  50C3               	movf	4035,w,c	;volatile
  1753  000492  244F               	addwf	??_ADC_u16getValue,w,c
  1754  000494  6E4D               	movwf	?_ADC_u16getValue,c
  1755  000496  0E00               	movlw	0
  1756  000498  2050               	addwfc	??_ADC_u16getValue+1,w,c
  1757  00049A  6E4E               	movwf	?_ADC_u16getValue+1,c
  1758  00049C  0012               	return		;funcret
  1759  00049E  FFFF               	dw	65535	; errata NOP
  1760  0004A0                     __end_of_ADC_u16getValue:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _ISR *****************
  1764 ;; Defined at:
  1765 ;;		line 56 in file "INT.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		None
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         0       0       0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		Interrupt level 2
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	intcode
  1793  000008                     __pintcode:
  1794                           	opt callstack 0
  1795  000008                     _ISR:
  1796                           	opt callstack 0
  1797  000008  FFFF               	dw	65535	; assembler added errata NOP
  1798                           
  1799                           ;incstack = 0
  1800  00000A  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1801                           
  1802                           ;INT.c: 59:         callback_INT0();
  1803  00000C  B2F2               	btfsc	4082,1,c	;volatile
  1804                           
  1805                           ;INT.c: 60:         INT0IF = 0;
  1806  00000E  92F2               	bcf	4082,1,c	;volatile
  1807                           
  1808                           ;INT.c: 63:         callback_INT1();
  1809                           
  1810                           ;INT.c: 61:     }
  1811  000010  B0F0               	btfsc	4080,0,c	;volatile
  1812                           
  1813                           ;INT.c: 64:         INT1IF = 0;
  1814  000012  90F0               	bcf	4080,0,c	;volatile
  1815                           
  1816                           ;INT.c: 67:         callback_INT2();
  1817                           
  1818                           ;INT.c: 65:     }
  1819  000014  B2F0               	btfsc	4080,1,c	;volatile
  1820                           
  1821                           ;INT.c: 68:         INT2IF = 0;
  1822  000016  92F0               	bcf	4080,1,c	;volatile
  1823                           
  1824                           ;INT.c: 71:         callback_INTonChange();
  1825                           
  1826                           ;INT.c: 69:     }
  1827  000018  B0F2               	btfsc	4082,0,c	;volatile
  1828                           
  1829                           ;INT.c: 72:         RBIF = 0;
  1830  00001A  90F2               	bcf	4082,0,c	;volatile
  1831                           
  1832                           ;INT.c: 77:         callback_TMR0();
  1833                           
  1834                           ;INT.c: 73:     }
  1835  00001C  B4F2               	btfsc	4082,2,c	;volatile
  1836                           
  1837                           ;INT.c: 78:         TMR0IF = 0;
  1838  00001E  94F2               	bcf	4082,2,c	;volatile
  1839                           
  1840                           ;INT.c: 83:         callback_CCP1();
  1841                           
  1842                           ;INT.c: 79:     }
  1843  000020  B49E               	btfsc	3998,2,c	;volatile
  1844                           
  1845                           ;INT.c: 84:         CCP1IF = 0;
  1846  000022  949E               	bcf	3998,2,c	;volatile
  1847  000024  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1848  000026  0011               	retfie		f
  1849  000028  FFFF               	dw	65535	; errata NOP
  1850  00002A                     __end_of_ISR:
  1851                           	opt callstack 0
  1852  00002A  FFFF               	dw	65535	; assembler added errata NOP
  1853                           
  1854                           	psect	rparam
  1855  0000                     
  1856                           	psect	temp
  1857  00005E                     btemp:
  1858                           	opt callstack 0
  1859  00005E                     	ds	1
  1860  0000                     int$flags	set	btemp
  1861  0000                     wtemp8	set	btemp+1
  1862  0000                     ttemp5	set	btemp+1
  1863  0000                     ttemp6	set	btemp+4
  1864  0000                     ttemp7	set	btemp+8
  1865                           tosu	equ	0xFFF
  1866                           tosh	equ	0xFFE
  1867                           tosl	equ	0xFFD
  1868                           stkptr	equ	0xFFC
  1869                           pclatu	equ	0xFFB
  1870                           pclath	equ	0xFFA
  1871                           pcl	equ	0xFF9
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           indf0	equ	0xFEF
  1879                           postinc0	equ	0xFEE
  1880                           postdec0	equ	0xFED
  1881                           preinc0	equ	0xFEC
  1882                           plusw0	equ	0xFEB
  1883                           fsr0h	equ	0xFEA
  1884                           fsr0l	equ	0xFE9
  1885                           wreg	equ	0xFE8
  1886                           indf1	equ	0xFE7
  1887                           postinc1	equ	0xFE6
  1888                           postdec1	equ	0xFE5
  1889                           preinc1	equ	0xFE4
  1890                           plusw1	equ	0xFE3
  1891                           fsr1h	equ	0xFE2
  1892                           fsr1l	equ	0xFE1
  1893                           bsr	equ	0xFE0
  1894                           indf2	equ	0xFDF
  1895                           postinc2	equ	0xFDE
  1896                           postdec2	equ	0xFDD
  1897                           preinc2	equ	0xFDC
  1898                           plusw2	equ	0xFDB
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        56
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      93
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    callback_CCP1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_TMR0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INTonChange	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    callback_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    DIO_vdInit@dev	PTR struct . size(2) Largest target is 7
		 -> BTN0(COMRAM[7]), LED3(COMRAM[7]), LED2(COMRAM[7]), LED1(COMRAM[7]), 
		 -> LED0(COMRAM[7]), 

    p_PORTDdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTDdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTCdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTBdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdirection	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    p_PORTAdata	PTR volatile struct . size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 


Critical Paths under _main in COMRAM

    _main->_UART_vdSendu16asASCI
    _UART_vdSendu16asASCI->___lwdiv
    _UART_vdInit->___aldiv
    _DIO_vdInit->_DIO_vdWriteDirPin

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2997
                    _ADC_u16getValue
                         _ADC_vdInit
                         _DIO_vdInit
                         _INT_vdinit
                        _UART_vdInit
                    _UART_vdSendByte
               _UART_vdSendu16asASCI
 ---------------------------------------------------------------------------------
 (1) _UART_vdSendu16asASCI                                10     8      2    1352
                                              7 COMRAM    10     8      2
                    _ADC_u16getValue (ARG)
                    _UART_vdSendByte
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _UART_vdSendByte                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_vdInit                                          2     0      2     702
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _INT_vdinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DIO_vdInit                                           2     0      2     884
                                              5 COMRAM     2     0      2
                  _DIO_vdWriteDirPin
 ---------------------------------------------------------------------------------
 (2) _DIO_vdWriteDirPin                                    5     3      2     438
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_vdInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_u16getValue                                      5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_u16getValue
   _ADC_vdInit
   _DIO_vdInit
     _DIO_vdWriteDirPin
   _INT_vdinit
   _UART_vdInit
     ___aldiv
   _UART_vdSendByte
   _UART_vdSendu16asASCI
     _ADC_u16getValue (ARG)
     _UART_vdSendByte (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      5D       1       73.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      15        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 24 16:04:59 2019

                                                 ?_DIO_vdInit 0052  
                                          ADC_u16getValue@pin 0051  
                                       UART_vdSendu16asASCI@i 0058  
                                        _callback_INTonChange 0045  
                                                 __CFG_BOR$ON 000000  
                                           _DIO_vdWriteDirPin 0030  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                                 __CFG_OSC$XT 000000  
                                          ?_DIO_vdWriteDirPin 004D  
                                                         l170 0180  
                                                         l403 0484  
                                                         l469 0290  
                                                         l963 0436  
                                                         l973 04E2  
                                                __CFG_CPB$OFF 000000  
                                                         _PR2 000FCB  
                                                __CFG_CPD$OFF 000000  
                                                         _ISR 0008  
                                                         u814 00E0  
                                                         u815 00DA  
                                                         u824 0100  
                                                         u825 00FA  
                                                         u754 0050  
                                                         u930 040C  
                                                         u755 004A  
                                                         u844 0128  
                                                         u764 0070  
                                                         u845 0122  
                                                         u765 006A  
                                                         u854 0148  
                                                         u855 0142  
                                                         u784 0098  
                                                         u960 04C0  
                                                         u785 0092  
                                                         u794 00B8  
                                                         u890 0306  
                                                         u795 00B2  
                                                         u984 0466  
                                                         u985 0460  
                                                __CFG_BORV$20 000000  
                                                         wreg 000FE8  
                                         ??_DIO_vdWriteDirPin 004F  
                                         __size_of_ADC_vdInit 000E  
                                                __CFG_LVP$OFF 000000  
                                                        ?_ISR 004D  
                                                __CFG_WDT$OFF 000000  
                                                        l1145 05E6  
                                                        l1703 0134  
                                                        l1721 02B4  
                                                        l1707 0156  
                                                        l1733 02F2  
                                                        l1735 0300  
                                                        l1727 02CE  
                                                        l1681 0036  
                                                        l1753 0360  
                                                        l1745 0338  
                                                        l1691 00A4  
                                                        l1763 03FC  
                                                        l1851 0226  
                                                        l1827 0194  
                                                        l1693 00C6  
                                                        l1685 005C  
                                                        l1749 0348  
                                                        l1765 0406  
                                                        l1853 0242  
                                                        l1687 007E  
                                                        l1775 042A  
                                                        l1791 04D6  
                                                        l1783 04B0  
                                                        l1847 0206  
                                                        l1855 0266  
                                                        l1697 00EC  
                                                        l1785 04BA  
                                                        l1849 0212  
                                                        l1865 03C8  
                                                        l1699 010E  
                                                        _LED0 0032  
                                                        _BTN0 0016  
                                                        _LED1 002B  
                                                        _BRGH 007D62  
                                                        _LED2 0024  
                                                        _LED3 001D  
                                                        u1077 0476  
                                                        _RBIF 007F90  
                                __end_of_UART_vdSendu16asASCI 0296  
                                                        _TXIF 007CF4  
                                                __CFG_STVR$ON 000000  
                                                        _main 0376  
                                                        fsr2h 000FDA  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 005E  
                                                        start 002C  
                                                ___param_bank 000000  
                                   __end_of_DIO_vdWriteDirPin 0186  
                                                       ??_ISR 004D  
                                               __CFG_OSCS$OFF 000000  
                                                 ?_INT_vdinit 004D  
                                             __end_of___aldiv 0376  
                                             _ADC_u16getValue 0444  
                                                       ?_main 004D  
                                             __end_of___lwdiv 0444  
                                             __end_of___lwmod 04F0  
                                                       _SPBRG 000FAF  
                                                       _TRISA 000F92  
                                                       _TXREG 000FAD  
                                               __CFG_PWRT$OFF 000000  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                    UART_vdSendu16asASCI@data 0054  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                             _UART_vdSendByte 05E2  
                                    UART_vdSendu16asASCI@temp 0059  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                         __size_of_DIO_vdInit 0034  
                                                       tablat 000FF5  
                                                       ttemp5 005F  
                                                       ttemp6 0062  
                                                       ttemp7 0066  
                                                       status 000FD8  
                                                       wtemp8 005F  
                                            _p_PORTAdirection 0011  
                                            _p_PORTBdirection 000D  
                                             __initialization 04F0  
                                                __end_of_main 03E4  
                                            _p_PORTCdirection 0009  
                                            _p_PORTDdirection 0005  
                                                      ??_main 005E  
                                               __activetblptr 000002  
                                             __CFG_CCP2MUX$ON 000000  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _CCP1IF 007CF2  
                                                      _ADRESH 000FC4  
                                                      _ADRESL 000FC3  
                                                      _CCPR1H 000FBF  
                                                      _CCPR1L 000FBE  
                                                      _INT0IF 007F91  
                                                      _INT1IF 007F80  
                                                      _INT2IF 007F81  
                                                      _TMR0IF 007F92  
                                              __CFG_WDTPS$128 000000  
                                                      _TRISC6 007CA6  
                                         __size_of_INT_vdinit 0018  
                                                ??_ADC_vdInit 004D  
                                     __end_of_ADC_u16getValue 04A0  
                                  __size_of_DIO_vdWriteDirPin 0156  
                                                   ??___aldiv 0055  
                                                ?_UART_vdInit 005B  
                                                   ??___lwdiv 0051  
                                                   ??___lwmod 0051  
                                                      clear_0 0516  
                                     __end_of_UART_vdSendByte 05F4  
                                        _UART_vdSendu16asASCI 0186  
                                                __pdataCOMRAM 0001  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                               DIO_vdInit@dev 0052  
                                          __end_of_ADC_vdInit 0602  
                                                  __accesstop 0080  
                                     __end_of__initialization 051C  
                                             UART_vdInit@baud 005B  
                                               ___rparam_used 000001  
                                              __pcstackCOMRAM 004D  
                                                ??_DIO_vdInit 0054  
                                       ?_UART_vdSendu16asASCI 0054  
                                          __end_of_DIO_vdInit 05CA  
                                            ?_ADC_u16getValue 004D  
                                                ??_INT_vdinit 004D  
                                            ?_UART_vdSendByte 004D  
                                          __end_of_INT_vdinit 05E2  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     ___aldiv 0296  
                                                     ___lwdiv 03E4  
                                      ??_UART_vdSendu16asASCI 0056  
                                                     ___lwmod 04A0  
                                                     __pcinit 04F0  
                                                     __ramtop 0600  
                                        __size_of_UART_vdInit 0034  
                                                     __ptext0 0376  
                                                     __ptext1 0186  
                                                     __ptext2 04A0  
                                                     __ptext3 03E4  
                                                     __ptext4 05E2  
                                                     __ptext5 0562  
                                                     __ptext6 0296  
                                                     __ptext7 05CA  
                                                     __ptext8 0596  
                                                     __ptext9 0030  
                                               _callback_CCP1 0041  
                                               _callback_INT0 004B  
                                               _callback_INT1 0049  
                                               _callback_INT2 0047  
                                                   _T0CONbits 000FD5  
                                               _callback_TMR0 0043  
                                                __size_of_ISR 0022  
                                                   _T1CONbits 000FCD  
                                                   _T2CONbits 000FCA  
                                                   _T3CONbits 000FB1  
                                            ___aldiv@dividend 004D  
                                        end_of_initialization 051C  
                                               __Lmediumconst 0000  
                                                   _BTNstatus 0039  
                                                   _RCSTAbits 000FAB  
                                            ___aldiv@quotient 0057  
                                                     postdec1 000FE5  
                                                     postinc0 000FEE  
                                                   _TRISCbits 000F94  
                                         UART_vdSendByte@data 004D  
                                                 _CCP1CONbits 000FBD  
                                                   _TXSTAbits 000FAC  
                                       DIO_vdWriteDirPin@data 0051  
                                               __pidataCOMRAM 052A  
                                       DIO_vdWriteDirPin@port 004D  
                                         start_initialization 04F0  
                                                 __end_of_ISR 002A  
                                                 _p_PORTAdata 0013  
                                                 _p_PORTBdata 000F  
                                                 _p_PORTCdata 000B  
                                                 _p_PORTDdata 0007  
                                                 __pbssCOMRAM 0039  
                                            ___lwdiv@dividend 004D  
                                                   __pintcode 0008  
                                                    ?___aldiv 004D  
                                              _prescaler_TMR2 0015  
                                                    ?___lwdiv 004D  
                                                    ?___lwmod 004D  
                                    __size_of_ADC_u16getValue 005C  
                                            ___lwdiv@quotient 0051  
                                    __size_of_UART_vdSendByte 0012  
                                             ___aldiv@divisor 0051  
                                             ___aldiv@counter 0055  
                                                    _GO_nDONE 007E12  
                                               ??_UART_vdInit 005D  
                               __size_of_UART_vdSendu16asASCI 0110  
                                                 _INTCON1bits 000FF2  
                                                 _INTCON2bits 000FF1  
                                                 _INTCON3bits 000FF0  
                                        DIO_vdWriteDirPin@pin 004E  
                                                   copy_data0 0504  
                                   UART_vdSendu16asASCI@temp2 0056  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                                  _ADC_vdInit 05F4  
                                            __size_of___aldiv 00E0  
                                            __size_of___lwdiv 0060  
                                            __size_of___lwmod 0050  
                                         __end_of_UART_vdInit 0596  
                                             ___lwdiv@divisor 004F  
                                             ___lwdiv@counter 0053  
                                                    __ptext10 05F4  
                                                    __ptext11 0444  
                                           ??_ADC_u16getValue 004F  
                                                    _freq_PWM 0001  
                                               __size_of_main 006E  
                                           ??_UART_vdSendByte 004D  
                                                  _DIO_vdInit 0596  
                                                    int$flags 005E  
                                                    intlevel2 0602  
                                            ___lwmod@dividend 004D  
                                                 ?_ADC_vdInit 004D  
                                                 _UART_vdInit 0562  
                                                  _INT_vdinit 05CA  
                                             ___lwmod@divisor 004F  
                                             ___lwmod@counter 0051  
                                                ___aldiv@sign 0056  
